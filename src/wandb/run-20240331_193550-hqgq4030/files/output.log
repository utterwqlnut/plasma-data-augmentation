torch.Size([75, 12])
tensor([[ 1.7442e+00,  4.4847e+00,  1.2845e+00,  1.1927e-01,  4.3390e-02,
          1.7345e-01,  1.2124e+00, -6.1075e-02,  9.4145e-01,  9.0108e-02,
          2.3975e-01, -1.1140e-01],
        [ 1.7096e+00,  4.4816e+00,  1.2985e+00,  1.1657e-01,  1.3522e-03,
          1.7587e-01,  8.7023e-01, -2.3192e-02,  9.7853e-01,  8.2619e-02,
          2.2902e-01, -8.1945e-02],
        [ 1.6835e+00,  4.4879e+00,  1.3035e+00,  1.1239e-01, -2.7824e-02,
          1.7683e-01,  2.1216e+00,  1.2806e-02,  9.9825e-01,  7.4163e-02,
          2.3897e-01, -7.3283e-02],
        [ 1.6728e+00,  4.4834e+00,  1.2924e+00,  1.0017e-01, -5.1298e-02,
          1.7918e-01,  1.1071e+00,  3.0721e-02,  1.0171e+00,  7.5058e-02,
          2.4091e-01, -6.7648e-02],
        [ 1.6797e+00,  4.5268e+00,  1.2821e+00,  9.9864e-02, -5.4803e-02,
          1.7946e-01,  5.2745e-01,  2.9577e-02,  1.0131e+00,  7.6082e-02,
          2.6228e-01, -7.2682e-02],
        [ 1.6865e+00,  4.5605e+00,  1.2867e+00,  1.0275e-01, -5.8234e-02,
          1.7911e-01,  1.3255e+00,  3.4147e-02,  1.0079e+00,  7.9570e-02,
          2.7452e-01, -7.3183e-02],
        [ 1.6773e+00,  4.5295e+00,  1.2736e+00,  1.0679e-01, -5.9193e-02,
          1.7877e-01,  1.8274e+00,  3.8200e-02,  1.0038e+00,  7.6347e-02,
          2.7172e-01, -7.4764e-02],
        [ 1.6741e+00,  4.5203e+00,  1.2879e+00,  1.0516e-01, -6.0110e-02,
          1.7923e-01,  1.0980e+00,  3.6855e-02,  1.0031e+00,  7.6152e-02,
          2.6654e-01, -7.7986e-02],
        [ 1.6710e+00,  4.5411e+00,  1.3023e+00,  1.0139e-01, -6.2812e-02,
          1.7969e-01,  7.4739e-01,  3.7285e-02,  1.0021e+00,  7.7304e-02,
          2.8080e-01, -7.9457e-02],
        [ 1.6807e+00,  4.5474e+00,  1.2798e+00,  1.0202e-01, -6.4717e-02,
          1.7973e-01,  1.0613e+00,  3.6097e-02,  1.0015e+00,  7.7059e-02,
          2.8193e-01, -7.8071e-02],
        [ 1.6886e+00,  4.5689e+00,  1.2624e+00,  1.0162e-01, -6.5711e-02,
          1.8010e-01,  8.6957e-01,  3.3472e-02,  1.0017e+00,  7.6395e-02,
          2.8556e-01, -7.5938e-02],
        [ 1.6810e+00,  4.5693e+00,  1.2877e+00,  1.0722e-01, -6.4902e-02,
          1.7965e-01,  1.6923e+00,  3.7880e-02,  9.9732e-01,  7.7016e-02,
          2.7585e-01, -7.3723e-02],
        [ 1.6756e+00,  4.5738e+00,  1.3046e+00,  1.0818e-01, -6.1826e-02,
          1.7933e-01,  1.7025e+00,  3.9188e-02,  9.9624e-01,  8.0200e-02,
          2.6758e-01, -7.3569e-02],
        [ 1.6625e+00,  4.5152e+00,  1.2909e+00,  1.0654e-01, -5.9659e-02,
          1.7932e-01,  1.4784e+00,  3.8633e-02,  9.9516e-01,  7.4596e-02,
          2.6135e-01, -7.4524e-02],
        [ 1.6591e+00,  4.5148e+00,  1.2844e+00,  1.0831e-01, -5.7848e-02,
          1.7908e-01,  1.6746e+00,  3.8248e-02,  9.9375e-01,  8.1205e-02,
          2.5709e-01, -7.4510e-02],
        [ 1.6576e+00,  4.5325e+00,  1.2960e+00,  1.0835e-01, -5.8542e-02,
          1.7929e-01,  1.5123e+00,  4.0934e-02,  9.9231e-01,  8.1332e-02,
          2.6287e-01, -7.6454e-02],
        [ 1.6629e+00,  4.5509e+00,  1.2878e+00,  1.0192e-01, -5.9631e-02,
          1.7961e-01,  1.1692e+00,  3.9551e-02,  9.9358e-01,  7.8764e-02,
          2.8343e-01, -7.7571e-02],
        [ 1.6638e+00,  4.5429e+00,  1.2844e+00,  9.9259e-02, -6.1755e-02,
          1.8018e-01,  7.6913e-01,  3.6539e-02,  9.9511e-01,  7.6188e-02,
          2.7029e-01, -7.6776e-02],
        [ 1.6625e+00,  4.5404e+00,  1.2871e+00,  1.0880e-01, -6.2609e-02,
          1.7960e-01,  1.9705e+00,  4.1459e-02,  9.9108e-01,  7.7323e-02,
          2.6907e-01, -7.4811e-02],
        [ 1.6584e+00,  4.5207e+00,  1.2931e+00,  1.0839e-01, -5.9566e-02,
          1.7930e-01,  1.8206e+00,  4.0397e-02,  9.9248e-01,  7.9999e-02,
          2.6560e-01, -7.4892e-02],
        [ 1.6617e+00,  4.5563e+00,  1.2946e+00,  9.9413e-02, -5.9781e-02,
          1.8010e-01,  6.1974e-01,  3.5972e-02,  9.9467e-01,  8.3612e-02,
          2.7801e-01, -7.5822e-02],
        [ 1.6642e+00,  4.5701e+00,  1.2880e+00,  1.0787e-01, -6.1876e-02,
          1.7968e-01,  1.7735e+00,  4.1802e-02,  9.9013e-01,  8.4522e-02,
          2.6818e-01, -7.4851e-02],
        [ 1.6615e+00,  4.5371e+00,  1.2921e+00,  1.0641e-01, -6.0755e-02,
          1.7977e-01,  1.3570e+00,  3.8398e-02,  9.9325e-01,  8.2324e-02,
          2.6840e-01, -7.5180e-02],
        [ 1.6584e+00,  4.5414e+00,  1.2955e+00,  1.0470e-01, -6.0003e-02,
          1.7969e-01,  1.4802e+00,  3.9657e-02,  9.9192e-01,  8.0566e-02,
          2.7009e-01, -7.4665e-02],
        [ 1.6572e+00,  4.5445e+00,  1.2951e+00,  1.0202e-01, -5.9871e-02,
          1.7997e-01,  1.0727e+00,  3.6666e-02,  9.9296e-01,  8.0716e-02,
          2.6869e-01, -7.4094e-02],
        [ 1.6585e+00,  4.5398e+00,  1.2882e+00,  1.0470e-01, -6.0133e-02,
          1.7992e-01,  1.3144e+00,  3.7978e-02,  9.9140e-01,  7.7877e-02,
          2.6964e-01, -7.2794e-02],
        [ 1.6590e+00,  4.5357e+00,  1.2865e+00,  1.0497e-01, -6.1546e-02,
          1.7996e-01,  1.3295e+00,  4.0201e-02,  9.9042e-01,  7.8959e-02,
          2.6926e-01, -7.4316e-02],
        [ 1.6605e+00,  4.5379e+00,  1.2886e+00,  1.0421e-01, -6.1259e-02,
          1.7994e-01,  1.2355e+00,  3.7612e-02,  9.9283e-01,  8.4618e-02,
          2.6685e-01, -7.4288e-02],
        [ 1.6662e+00,  4.5768e+00,  1.2900e+00,  1.0397e-01, -6.2706e-02,
          1.8007e-01,  1.2183e+00,  4.0235e-02,  9.9179e-01,  8.3552e-02,
          2.7444e-01, -7.5499e-02],
        [ 1.6698e+00,  4.5647e+00,  1.2882e+00,  1.0220e-01, -6.3307e-02,
          1.8003e-01,  1.2351e+00,  3.9887e-02,  9.9319e-01,  8.2272e-02,
          2.7666e-01, -7.6176e-02],
        [ 1.6703e+00,  4.5554e+00,  1.2915e+00,  9.6222e-02, -6.5446e-02,
          1.8079e-01,  2.9064e-01,  3.4122e-02,  9.9701e-01,  8.3046e-02,
          2.7603e-01, -7.6347e-02],
        [ 1.6755e+00,  4.5693e+00,  1.2874e+00,  1.0495e-01, -6.4461e-02,
          1.7987e-01,  1.8357e+00,  3.7429e-02,  9.9386e-01,  8.1182e-02,
          2.7335e-01, -7.2026e-02],
        [ 1.6614e+00,  4.5237e+00,  1.3081e+00,  9.9931e-02, -6.2467e-02,
          1.8015e-01,  1.0392e+00,  3.5039e-02,  9.9544e-01,  7.5543e-02,
          2.6705e-01, -7.1720e-02],
        [ 1.6634e+00,  4.5383e+00,  1.3059e+00,  9.9898e-02, -6.2506e-02,
          1.8024e-01,  8.9128e-01,  3.5536e-02,  9.9402e-01,  7.5853e-02,
          2.6640e-01, -7.1495e-02],
        [ 1.6647e+00,  4.5374e+00,  1.3012e+00,  9.8352e-02, -6.3060e-02,
          1.8022e-01,  1.0156e+00,  3.4529e-02,  9.9425e-01,  7.3977e-02,
          2.6113e-01, -7.0758e-02],
        [ 1.6577e+00,  4.5372e+00,  1.3038e+00,  1.0355e-01, -5.8928e-02,
          1.7895e-01,  2.3963e+00,  3.9255e-02,  9.9140e-01,  7.3634e-02,
          2.6440e-01, -6.8330e-02],
        [ 1.6607e+00,  4.5192e+00,  1.2967e+00,  9.9994e-02, -5.6751e-02,
          1.7953e-01,  1.0305e+00,  3.4745e-02,  9.9389e-01,  7.7461e-02,
          2.5923e-01, -7.0989e-02],
        [ 1.6580e+00,  4.5319e+00,  1.2951e+00,  1.0075e-01, -5.7288e-02,
          1.7957e-01,  1.1880e+00,  3.5684e-02,  9.9226e-01,  7.9289e-02,
          2.6528e-01, -7.0891e-02],
        [ 1.6746e+00,  4.5893e+00,  1.2822e+00,  9.8489e-02, -6.0743e-02,
          1.8033e-01,  4.5611e-01,  3.3879e-02,  9.9371e-01,  7.4288e-02,
          2.6938e-01, -7.2167e-02],
        [ 1.6640e+00,  4.5379e+00,  1.2950e+00,  1.0220e-01, -6.2387e-02,
          1.7978e-01,  1.6597e+00,  3.9016e-02,  9.9167e-01,  7.3995e-02,
          2.8095e-01, -7.0978e-02],
        [ 1.6682e+00,  4.5281e+00,  1.2891e+00,  1.0271e-01, -6.2163e-02,
          1.8007e-01,  1.0636e+00,  3.5659e-02,  9.9470e-01,  7.6262e-02,
          2.7073e-01, -7.1884e-02],
        [ 1.6668e+00,  4.5300e+00,  1.2929e+00,  1.0100e-01, -6.3199e-02,
          1.8031e-01,  7.9209e-01,  3.6004e-02,  9.9440e-01,  7.5747e-02,
          2.7230e-01, -7.2814e-02],
        [ 1.6650e+00,  4.5088e+00,  1.2984e+00,  1.0268e-01, -6.4735e-02,
          1.8002e-01,  1.3771e+00,  3.9514e-02,  9.9347e-01,  8.2752e-02,
          2.7352e-01, -7.3864e-02],
        [ 1.6698e+00,  4.5182e+00,  1.2995e+00,  1.0041e-01, -6.5788e-02,
          1.8027e-01,  8.5452e-01,  3.7466e-02,  9.9648e-01,  8.3087e-02,
          2.7893e-01, -7.6427e-02],
        [ 1.6725e+00,  4.5307e+00,  1.2962e+00,  1.0263e-01, -6.4623e-02,
          1.7965e-01,  1.6487e+00,  3.8190e-02,  9.9617e-01,  8.4119e-02,
          2.7324e-01, -7.5301e-02],
        [ 1.6683e+00,  4.5227e+00,  1.2900e+00,  1.0436e-01, -6.3379e-02,
          1.7931e-01,  2.0135e+00,  4.1564e-02,  9.9436e-01,  7.7971e-02,
          2.7434e-01, -7.6498e-02],
        [ 1.6676e+00,  4.5148e+00,  1.3010e+00,  9.7027e-02, -6.2795e-02,
          1.7999e-01,  6.7643e-01,  3.7320e-02,  9.9797e-01,  8.0373e-02,
          2.7981e-01, -7.9565e-02],
        [ 1.6732e+00,  4.5443e+00,  1.2992e+00,  9.8545e-02, -6.5027e-02,
          1.8016e-01,  8.0755e-01,  3.7150e-02,  9.9743e-01,  8.2265e-02,
          2.7758e-01, -7.9205e-02],
        [ 1.6764e+00,  4.5391e+00,  1.2948e+00,  1.0293e-01, -6.3967e-02,
          1.7958e-01,  1.6713e+00,  3.7515e-02,  9.9687e-01,  7.7661e-02,
          2.7354e-01, -7.6080e-02],
        [ 1.6678e+00,  4.4871e+00,  1.3063e+00,  9.6081e-02, -6.3358e-02,
          1.7993e-01,  1.0621e+00,  3.5968e-02,  9.9671e-01,  7.2078e-02,
          2.6733e-01, -7.6624e-02],
        [ 1.6724e+00,  4.5618e+00,  1.3138e+00,  9.3509e-02, -6.4576e-02,
          1.8029e-01,  6.3675e-01,  3.5629e-02,  9.9748e-01,  7.8550e-02,
          2.8019e-01, -7.6146e-02],
        [ 1.6728e+00,  4.5492e+00,  1.3138e+00,  9.6402e-02, -6.7005e-02,
          1.8049e-01,  6.6098e-01,  3.5300e-02,  9.9723e-01,  7.5937e-02,
          2.6468e-01, -7.5433e-02],
        [ 1.6644e+00,  4.4924e+00,  1.3230e+00,  1.0083e-01, -6.5045e-02,
          1.7942e-01,  2.0817e+00,  3.8827e-02,  9.9525e-01,  7.4810e-02,
          2.5953e-01, -7.3012e-02],
        [ 1.6618e+00,  4.4971e+00,  1.3214e+00,  1.0213e-01, -6.2196e-02,
          1.7928e-01,  1.7570e+00,  3.9651e-02,  9.9549e-01,  7.7686e-02,
          2.5725e-01, -7.4921e-02],
        [ 1.6561e+00,  4.4700e+00,  1.3293e+00,  9.6577e-02, -6.1313e-02,
          1.7972e-01,  9.0730e-01,  3.6584e-02,  9.9673e-01,  7.9658e-02,
          2.5495e-01, -7.7504e-02],
        [ 1.6526e+00,  4.5047e+00,  1.3326e+00,  1.0159e-01, -5.9283e-02,
          1.7893e-01,  1.9696e+00,  4.0186e-02,  9.9424e-01,  8.4082e-02,
          2.5802e-01, -7.5136e-02],
        [ 1.6606e+00,  4.4736e+00,  1.3088e+00,  1.0274e-01, -5.7184e-02,
          1.7918e-01,  1.4209e+00,  3.6497e-02,  9.9491e-01,  7.6844e-02,
          2.5936e-01, -7.5020e-02],
        [ 1.6569e+00,  4.5154e+00,  1.3162e+00,  1.0261e-01, -5.6779e-02,
          1.7940e-01,  1.2480e+00,  3.7101e-02,  9.9323e-01,  8.6779e-02,
          2.5668e-01, -7.3892e-02],
        [ 1.6530e+00,  4.5172e+00,  1.3331e+00,  1.0102e-01, -5.8002e-02,
          1.7989e-01,  9.2257e-01,  3.5907e-02,  9.9281e-01,  8.3389e-02,
          2.5723e-01, -7.2096e-02],
        [ 1.6578e+00,  4.5074e+00,  1.3217e+00,  9.8768e-02, -6.1022e-02,
          1.8047e-01,  4.8692e-01,  3.4956e-02,  9.9231e-01,  8.2026e-02,
          2.5676e-01, -7.1189e-02],
        [ 1.6652e+00,  4.4987e+00,  1.3099e+00,  1.0312e-01, -6.2743e-02,
          1.8034e-01,  1.0797e+00,  3.5358e-02,  9.9207e-01,  8.4246e-02,
          2.5865e-01, -6.8730e-02],
        [ 1.6617e+00,  4.5274e+00,  1.3074e+00,  1.0328e-01, -6.1385e-02,
          1.7975e-01,  1.7296e+00,  3.8464e-02,  9.9075e-01,  8.0781e-02,
          2.5935e-01, -6.7742e-02],
        [ 1.6554e+00,  4.5010e+00,  1.3271e+00,  9.8241e-02, -6.0156e-02,
          1.8000e-01,  1.0018e+00,  3.6712e-02,  9.9265e-01,  7.6760e-02,
          2.5524e-01, -6.9252e-02],
        [ 1.6590e+00,  4.5103e+00,  1.3236e+00,  9.7825e-02, -6.0016e-02,
          1.7992e-01,  1.1523e+00,  3.7264e-02,  9.9201e-01,  7.6117e-02,
          2.5419e-01, -6.9306e-02],
        [ 1.6595e+00,  4.5249e+00,  1.3330e+00,  9.9577e-02, -6.0156e-02,
          1.7986e-01,  1.2389e+00,  3.7813e-02,  9.9177e-01,  7.3541e-02,
          2.4271e-01, -6.9743e-02],
        [ 1.6553e+00,  4.4970e+00,  1.3190e+00,  1.0050e-01, -5.8888e-02,
          1.7939e-01,  1.7412e+00,  3.9750e-02,  9.9079e-01,  7.9441e-02,
          2.5358e-01, -7.0111e-02],
        [ 1.6459e+00,  4.4572e+00,  1.3293e+00,  9.7186e-02, -5.8628e-02,
          1.7956e-01,  1.3104e+00,  3.9450e-02,  9.9169e-01,  8.2519e-02,
          2.6318e-01, -7.2856e-02],
        [ 1.6558e+00,  4.4621e+00,  1.3126e+00,  1.0072e-01, -5.9858e-02,
          1.7971e-01,  1.1733e+00,  3.9583e-02,  9.9218e-01,  7.9277e-02,
          2.5027e-01, -7.5283e-02],
        [ 1.6564e+00,  4.5057e+00,  1.3335e+00,  9.8299e-02, -6.1646e-02,
          1.7965e-01,  1.4709e+00,  4.2457e-02,  9.9222e-01,  7.5703e-02,
          2.6217e-01, -7.6546e-02],
        [ 1.6607e+00,  4.4995e+00,  1.3298e+00,  9.7992e-02, -6.1307e-02,
          1.7964e-01,  1.4042e+00,  4.1383e-02,  9.9382e-01,  7.3252e-02,
          2.6320e-01, -7.6780e-02],
        [ 1.6608e+00,  4.4830e+00,  1.3271e+00,  9.9499e-02, -6.1896e-02,
          1.7982e-01,  1.2520e+00,  4.0818e-02,  9.9342e-01,  7.0988e-02,
          2.5594e-01, -7.7571e-02],
        [ 1.6624e+00,  4.4992e+00,  1.3316e+00,  9.4271e-02, -6.3176e-02,
          1.8033e-01,  6.0737e-01,  3.6759e-02,  9.9597e-01,  7.4267e-02,
          2.6058e-01, -7.7331e-02],
        [ 1.6628e+00,  4.5121e+00,  1.3520e+00,  9.5580e-02, -6.3110e-02,
          1.7982e-01,  1.6274e+00,  4.0086e-02,  9.9320e-01,  7.3132e-02,
          2.5796e-01, -7.4044e-02],
        [ 1.6618e+00,  4.4806e+00,  1.3325e+00,  9.5913e-02, -6.2114e-02,
          1.7996e-01,  1.1785e+00,  3.7782e-02,  9.9396e-01,  6.8849e-02,
          2.5831e-01, -7.4029e-02],
        [ 1.6573e+00,  4.4984e+00,  1.3353e+00,  9.9065e-02, -6.1049e-02,
          1.7957e-01,  1.6557e+00,  4.0412e-02,  9.9202e-01,  7.2459e-02,
          2.5499e-01, -7.3472e-02]], grad_fn=<SqueezeBackward0>)
torch.Size([1237, 12])
tensor([[1.7695, 6.4620, 0.9171,  ..., 0.3675, 1.1770, 0.8976],
        [1.7354, 6.4672, 0.9168,  ..., 0.3588, 1.1841, 0.9292],
        [1.7110, 6.4797, 0.9174,  ..., 0.3548, 1.1897, 0.9569],
        ...,
        [1.6836, 6.3001, 0.9208,  ..., 0.2650, 1.2750, 0.9367],
        [1.6825, 6.2975, 0.9207,  ..., 0.2652, 1.2740, 0.9365],
        [1.6830, 6.2981, 0.9207,  ..., 0.2651, 1.2743, 0.9364]],
       grad_fn=<SqueezeBackward0>)
torch.Size([797, 12])
tensor([[1.8425, 6.6612, 0.7928,  ..., 0.3180, 1.1839, 0.8972],
        [1.8058, 6.6589, 0.7924,  ..., 0.3097, 1.1872, 0.9289],
        [1.7801, 6.6650, 0.7927,  ..., 0.3056, 1.1911, 0.9527],
        ...,
        [1.7554, 6.4676, 0.7721,  ..., 0.3557, 0.8268, 0.9299],
        [1.7579, 6.4735, 0.7723,  ..., 0.3552, 0.8295, 0.9303],
        [1.7568, 6.4723, 0.7723,  ..., 0.3554, 0.8288, 0.9305]],
       grad_fn=<SqueezeBackward0>)
torch.Size([612, 12])
tensor([[ 1.9864,  3.1437,  0.8286,  ...,  0.0376,  0.2615, -0.1050],
        [ 1.9766,  3.1492,  0.8282,  ...,  0.0324,  0.2694, -0.0976],
        [ 1.9674,  3.1543,  0.8282,  ...,  0.0299,  0.2741, -0.0901],
        ...,
        [ 1.9809,  3.3567,  0.7384,  ...,  0.2259,  0.6034, -0.0446],
        [ 1.9840,  3.3656,  0.7317,  ...,  0.2165,  0.5965, -0.0493],
        [ 1.9990,  3.3649,  0.7243,  ...,  0.1860,  0.5656, -0.0552]],
       grad_fn=<SqueezeBackward0>)
torch.Size([322, 12])
tensor([[1.7754, 4.9255, 0.9465,  ..., 0.2055, 0.7053, 0.8926],
        [1.7485, 4.9150, 0.9460,  ..., 0.1978, 0.7013, 0.9266],
        [1.7244, 4.9256, 0.9462,  ..., 0.1930, 0.7072, 0.9561],
        ...,
        [1.7701, 4.5947, 0.6118,  ..., 0.3304, 1.2816, 0.9491],
        [1.7512, 4.3623, 0.6013,  ..., 0.3363, 1.2612, 0.9483],
        [1.7510, 4.3635, 0.6013,  ..., 0.3363, 1.2606, 0.9483]],
       grad_fn=<SqueezeBackward0>)
torch.Size([820, 12])
tensor([[1.8811, 4.4847, 0.8293,  ..., 0.0933, 0.5592, 0.8986],
        [1.8627, 4.4756, 0.8288,  ..., 0.0867, 0.5556, 0.9326],
        [1.8490, 4.4812, 0.8290,  ..., 0.0833, 0.5597, 0.9518],
        ...,
        [1.8127, 4.6595, 0.7470,  ..., 0.2555, 0.4253, 0.9314],
        [1.8151, 4.6631, 0.7471,  ..., 0.2552, 0.4263, 0.9330],
        [1.8176, 4.6649, 0.7472,  ..., 0.2549, 0.4278, 0.9359]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1197, 12])
tensor([[1.8248, 5.6566, 0.9061,  ..., 0.1853, 0.3949, 0.8953],
        [1.7956, 5.6612, 0.9057,  ..., 0.1748, 0.4010, 0.9288],
        [1.7702, 5.6704, 0.9059,  ..., 0.1709, 0.4079, 0.9440],
        ...,
        [1.7503, 5.5633, 0.8885,  ..., 0.2462, 0.7986, 0.9316],
        [1.7520, 5.5670, 0.8886,  ..., 0.2459, 0.8006, 0.9316],
        [1.7519, 5.5650, 0.8886,  ..., 0.2460, 0.7997, 0.9312]],
       grad_fn=<SqueezeBackward0>)
torch.Size([797, 12])
tensor([[ 1.8608,  3.9238,  0.7818,  ...,  0.0650,  0.2236, -0.0958],
        [ 1.8492,  3.9272,  0.7812,  ...,  0.0590,  0.2322, -0.0858],
        [ 1.8405,  3.9347,  0.7812,  ...,  0.0559,  0.2400, -0.0778],
        ...,
        [ 1.8064,  4.0546,  0.9095,  ...,  0.0730,  0.5422, -0.0512],
        [ 1.8062,  4.0554,  0.9096,  ...,  0.0757,  0.5427, -0.0489],
        [ 1.8058,  4.0503,  0.9095,  ...,  0.0757,  0.5421, -0.0438]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1317, 12])
tensor([[1.8659, 7.1403, 1.0933,  ..., 0.2350, 0.4286, 0.8957],
        [1.8228, 7.1537, 1.0929,  ..., 0.2206, 0.4481, 0.9143],
        [1.7959, 7.1680, 1.0930,  ..., 0.2138, 0.4599, 0.9282],
        ...,
        [1.7105, 6.1936, 0.6990,  ..., 0.4635, 1.3391, 0.9376],
        [1.7099, 6.1923, 0.6990,  ..., 0.4637, 1.3384, 0.9373],
        [1.7097, 6.1906, 0.6989,  ..., 0.4637, 1.3379, 0.9367]],
       grad_fn=<SqueezeBackward0>)
torch.Size([181, 12])
tensor([[ 1.9691,  3.4943,  0.6304,  ...,  0.2280,  0.5411, -0.0840],
        [ 1.9597,  3.4931,  0.6303,  ...,  0.2236,  0.5436, -0.0540],
        [ 1.9546,  3.4947,  0.6305,  ...,  0.2216,  0.5489, -0.0406],
        ...,
        [ 1.8699,  3.0786,  0.9187,  ...,  0.1111,  0.2700, -0.0744],
        [ 1.8693,  3.0764,  0.9249,  ...,  0.1155,  0.2637, -0.0735],
        [ 1.8752,  3.0758,  0.9247,  ...,  0.1196,  0.2624, -0.0726]],
       grad_fn=<SqueezeBackward0>)
torch.Size([727, 12])
tensor([[ 1.9727,  3.0665,  0.8241,  ...,  0.0436,  0.2001, -0.0981],
        [ 1.9631,  3.0731,  0.8236,  ...,  0.0377,  0.2115, -0.0920],
        [ 1.9561,  3.0826,  0.8236,  ...,  0.0346,  0.2213, -0.0878],
        ...,
        [ 1.9637,  3.2308,  0.7494,  ...,  0.4295,  0.7967, -0.0470],
        [ 1.9635,  3.2391,  0.7325,  ...,  0.4217,  0.7955, -0.0498],
        [ 1.9637,  3.2403,  0.7326,  ...,  0.4217,  0.7959, -0.0517]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1037, 12])
tensor([[1.7956, 4.6542, 0.8828,  ..., 0.1912, 0.4809, 0.8964],
        [1.7753, 4.6469, 0.8824,  ..., 0.1839, 0.4770, 0.9300],
        [1.7531, 4.6504, 0.8826,  ..., 0.1804, 0.4791, 0.9541],
        ...,
        [1.7797, 4.6667, 0.8308,  ..., 0.2699, 0.7211, 0.9382],
        [1.7801, 4.6667, 0.8308,  ..., 0.2698, 0.7212, 0.9385],
        [1.7793, 4.6682, 0.8309,  ..., 0.2698, 0.7218, 0.9392]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1357, 12])
tensor([[1.8221, 6.7177, 0.9510,  ..., 0.1925, 0.9941, 0.8979],
        [1.7853, 6.7190, 0.9508,  ..., 0.1836, 0.9991, 0.9299],
        [1.7612, 6.7317, 0.9512,  ..., 0.1789, 1.0056, 0.9572],
        ...,
        [1.6829, 6.5444, 0.9216,  ..., 0.2401, 1.0349, 0.9305],
        [1.6822, 6.5420, 0.9216,  ..., 0.2404, 1.0340, 0.9299],
        [1.6845, 6.5466, 0.9217,  ..., 0.2399, 1.0361, 0.9303]],
       grad_fn=<SqueezeBackward0>)
torch.Size([175, 12])
tensor([[ 1.6673,  5.0387,  1.3942,  ...,  0.1817,  0.1951, -0.0963],
        [ 1.6567,  5.0389,  1.3987,  ...,  0.1753,  0.2086, -0.0690],
        [ 1.6427,  4.9947,  1.3806,  ...,  0.1747,  0.2338, -0.0491],
        ...,
        [ 1.7253,  4.3562,  1.4147,  ...,  0.0595,  0.2588, -0.0514],
        [ 1.7573,  4.4382,  1.4835,  ...,  0.0695,  0.2417, -0.0520],
        [ 1.7554,  4.4066,  1.4535,  ...,  0.0689,  0.2319, -0.0535]],
       grad_fn=<SqueezeBackward0>)
torch.Size([215, 12])
tensor([[ 1.6406,  3.8261,  1.1129,  ...,  0.1101,  0.2247, -0.0907],
        [ 1.6534,  3.8606,  1.1276,  ...,  0.1023,  0.2221, -0.0603],
        [ 1.6917,  3.9314,  1.1455,  ...,  0.0927,  0.2397, -0.0376],
        ...,
        [ 1.8652,  3.9486,  1.1663,  ...,  0.1537,  0.3016, -0.0491],
        [ 1.8557,  3.9215,  1.1608,  ...,  0.1557,  0.3069, -0.0480],
        [ 1.8446,  3.8658,  1.1784,  ...,  0.1547,  0.2997, -0.0475]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1107, 12])
tensor([[ 1.9275,  6.4759,  0.7316,  ..., -0.0220,  0.3444, -0.1011],
        [ 1.9141,  6.4746,  0.7311,  ..., -0.0295,  0.3506, -0.0841],
        [ 1.9040,  6.4789,  0.7310,  ..., -0.0330,  0.3573, -0.0740],
        ...,
        [ 1.8380,  4.2139,  1.1784,  ...,  0.1211,  0.4638, -0.0547],
        [ 1.8378,  4.1968,  1.2270,  ...,  0.1217,  0.4347, -0.0548],
        [ 1.8371,  4.1964,  1.2270,  ...,  0.1218,  0.4344, -0.0551]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1597, 12])
tensor([[1.9377, 6.7673, 1.0978,  ..., 0.3020, 0.5676, 0.8965],
        [1.8949, 6.7716, 1.0976,  ..., 0.2912, 0.5749, 0.9292],
        [1.8685, 6.7840, 1.0978,  ..., 0.2861, 0.5834, 0.9454],
        ...,
        [1.8519, 6.7569, 1.2115,  ..., 0.3424, 0.8297, 0.9295],
        [1.8519, 6.7566, 1.2115,  ..., 0.3424, 0.8297, 0.9294],
        [1.8509, 6.7538, 1.2115,  ..., 0.3427, 0.8284, 0.9288]],
       grad_fn=<SqueezeBackward0>)
torch.Size([75, 12])
tensor([[ 1.7241e+00,  4.8157e+00,  1.0570e+00,  1.3215e-01,  2.7281e-02,
          1.7042e-01,  1.0354e+00, -4.1775e-02,  9.5521e-01,  1.9264e-01,
          8.8663e-01, -1.1177e-01],
        [ 1.6942e+00,  4.7538e+00,  1.0542e+00,  1.3517e-01, -1.1705e-02,
          1.7249e-01,  1.1441e+00, -8.6221e-03,  9.8655e-01,  1.8182e-01,
          8.5350e-01, -7.7300e-02],
        [ 1.6753e+00,  4.7743e+00,  1.0491e+00,  1.2645e-01, -5.0801e-02,
          1.7554e-01,  1.0075e+00,  2.6523e-02,  1.0116e+00,  1.8261e-01,
          8.5627e-01, -5.8520e-02],
        [ 1.6691e+00,  4.8155e+00,  1.0486e+00,  1.1679e-01, -7.0770e-02,
          1.7695e-01,  8.1534e-01,  4.6643e-02,  1.0182e+00,  1.8764e-01,
          8.7613e-01, -5.5485e-02],
        [ 1.6690e+00,  4.8285e+00,  1.0408e+00,  1.1687e-01, -7.3950e-02,
          1.7679e-01,  1.2104e+00,  5.1873e-02,  1.0103e+00,  1.8889e-01,
          8.8801e-01, -6.0265e-02],
        [ 1.6659e+00,  4.8308e+00,  1.0653e+00,  1.1517e-01, -7.7067e-02,
          1.7707e-01,  5.1425e-01,  5.2781e-02,  1.0104e+00,  1.8968e-01,
          8.8468e-01, -6.5436e-02],
        [ 1.6588e+00,  4.7961e+00,  1.0874e+00,  1.1713e-01, -8.0475e-02,
          1.7703e-01,  6.8563e-01,  5.5258e-02,  1.0103e+00,  1.9254e-01,
          8.8055e-01, -6.8715e-02],
        [ 1.6763e+00,  4.8131e+00,  1.0728e+00,  1.1569e-01, -8.3546e-02,
          1.7714e-01,  3.4246e-01,  5.2441e-02,  1.0150e+00,  1.9424e-01,
          8.9492e-01, -7.1640e-02],
        [ 1.6840e+00,  4.8284e+00,  1.0794e+00,  1.0920e-01, -8.7556e-02,
          1.7735e-01,  3.2237e-01,  5.0944e-02,  1.0166e+00,  1.9102e-01,
          8.8231e-01, -7.1776e-02],
        [ 1.6822e+00,  4.8009e+00,  1.0751e+00,  1.1241e-01, -8.9135e-02,
          1.7718e-01,  8.7532e-01,  5.2250e-02,  1.0163e+00,  1.9788e-01,
          8.5544e-01, -7.1830e-02],
        [ 1.6896e+00,  4.7843e+00,  1.0664e+00,  1.1324e-01, -8.8521e-02,
          1.7714e-01,  8.4586e-01,  5.0550e-02,  1.0162e+00,  1.9504e-01,
          8.3506e-01, -7.1928e-02],
        [ 1.6938e+00,  4.8049e+00,  1.0503e+00,  1.0998e-01, -8.7184e-02,
          1.7706e-01,  1.0002e+00,  4.9989e-02,  1.0157e+00,  2.0778e-01,
          8.3316e-01, -7.2441e-02],
        [ 1.6911e+00,  4.8090e+00,  1.0572e+00,  1.0380e-01, -8.6562e-02,
          1.7725e-01,  3.7705e-01,  4.6312e-02,  1.0176e+00,  2.1367e-01,
          8.2997e-01, -7.3320e-02],
        [ 1.6807e+00,  4.7791e+00,  1.0629e+00,  1.1136e-01, -8.5576e-02,
          1.7656e-01,  1.9339e+00,  5.3385e-02,  1.0128e+00,  2.1923e-01,
          8.1762e-01, -7.3096e-02],
        [ 1.6819e+00,  4.7584e+00,  1.0594e+00,  1.0637e-01, -8.2955e-02,
          1.7688e-01,  8.7731e-01,  4.9362e-02,  1.0151e+00,  2.2339e-01,
          8.1013e-01, -7.5134e-02],
        [ 1.6746e+00,  4.7518e+00,  1.0710e+00,  1.0263e-01, -8.2265e-02,
          1.7705e-01,  7.9253e-01,  4.8450e-02,  1.0133e+00,  2.2942e-01,
          7.9669e-01, -7.4655e-02],
        [ 1.6794e+00,  4.7718e+00,  1.0777e+00,  9.7838e-02, -8.3190e-02,
          1.7737e-01,  1.8946e-01,  4.6849e-02,  1.0134e+00,  2.3024e-01,
          7.8786e-01, -7.4382e-02],
        [ 1.6743e+00,  4.7234e+00,  1.0834e+00,  1.0421e-01, -8.2394e-02,
          1.7671e-01,  1.7003e+00,  5.0080e-02,  1.0103e+00,  2.3866e-01,
          7.6426e-01, -7.1651e-02],
        [ 1.6742e+00,  4.7330e+00,  1.0838e+00,  1.0153e-01, -8.0488e-02,
          1.7701e-01,  8.8798e-01,  4.7781e-02,  1.0109e+00,  2.3891e-01,
          7.5228e-01, -7.2133e-02],
        [ 1.6724e+00,  4.7360e+00,  1.0849e+00,  1.0405e-01, -7.9524e-02,
          1.7702e-01,  7.1782e-01,  4.8555e-02,  1.0088e+00,  2.4089e-01,
          7.2402e-01, -7.2864e-02],
        [ 1.6644e+00,  4.6696e+00,  1.1161e+00,  9.8152e-02, -7.8792e-02,
          1.7686e-01,  1.0862e+00,  4.8329e-02,  1.0083e+00,  1.9662e-01,
          6.6954e-01, -7.1828e-02],
        [ 1.6756e+00,  4.6576e+00,  1.0948e+00,  1.0883e-01, -7.7241e-02,
          1.7659e-01,  1.4724e+00,  4.8998e-02,  1.0051e+00,  1.6192e-01,
          6.1395e-01, -7.2822e-02],
        [ 1.6692e+00,  4.6335e+00,  1.1048e+00,  1.0676e-01, -7.5685e-02,
          1.7680e-01,  7.8353e-01,  4.3751e-02,  1.0072e+00,  1.4505e-01,
          6.0643e-01, -7.4001e-02],
        [ 1.6605e+00,  4.6261e+00,  1.1090e+00,  1.0237e-01, -7.5801e-02,
          1.7692e-01,  9.3594e-01,  4.2799e-02,  1.0063e+00,  1.2363e-01,
          6.2707e-01, -7.2476e-02],
        [ 1.6499e+00,  4.6052e+00,  1.1097e+00,  9.9505e-02, -7.7386e-02,
          1.7741e-01,  4.1316e-01,  4.0442e-02,  1.0071e+00,  1.1253e-01,
          6.5440e-01, -7.0576e-02],
        [ 1.6493e+00,  4.6101e+00,  1.0877e+00,  1.0666e-01, -7.9134e-02,
          1.7737e-01,  7.6044e-01,  4.1275e-02,  1.0057e+00,  1.1239e-01,
          6.7527e-01, -6.8922e-02],
        [ 1.6586e+00,  4.6416e+00,  1.1096e+00,  1.0719e-01, -8.0222e-02,
          1.7739e-01,  4.2175e-01,  4.2642e-02,  1.0073e+00,  1.1366e-01,
          6.4087e-01, -6.9491e-02],
        [ 1.6621e+00,  4.6195e+00,  1.0969e+00,  1.1771e-01, -8.0083e-02,
          1.7677e-01,  1.3828e+00,  4.7393e-02,  1.0064e+00,  1.1325e-01,
          6.0391e-01, -7.0355e-02],
        [ 1.6753e+00,  4.6523e+00,  1.0991e+00,  1.1667e-01, -7.9744e-02,
          1.7716e-01,  2.5896e-01,  4.2433e-02,  1.0112e+00,  1.1317e-01,
          5.6844e-01, -7.2024e-02],
        [ 1.6862e+00,  4.6790e+00,  1.0980e+00,  1.2471e-01, -7.9228e-02,
          1.7677e-01,  1.1151e+00,  4.3764e-02,  1.0087e+00,  1.1656e-01,
          5.1950e-01, -7.1334e-02],
        [ 1.7023e+00,  4.7114e+00,  1.0744e+00,  1.2351e-01, -7.7662e-02,
          1.7665e-01,  9.1922e-01,  4.2659e-02,  1.0086e+00,  9.9993e-02,
          4.7342e-01, -7.3093e-02],
        [ 1.6919e+00,  4.6926e+00,  1.1041e+00,  1.1461e-01, -7.5528e-02,
          1.7628e-01,  1.2381e+00,  4.5430e-02,  1.0075e+00,  8.6408e-02,
          4.1931e-01, -7.4109e-02],
        [ 1.6875e+00,  4.6758e+00,  1.1191e+00,  1.0896e-01, -7.3559e-02,
          1.7632e-01,  8.2743e-01,  4.2961e-02,  1.0077e+00,  7.8804e-02,
          3.5874e-01, -7.5570e-02],
        [ 1.6804e+00,  4.6486e+00,  1.1332e+00,  1.0337e-01, -7.2535e-02,
          1.7615e-01,  1.0226e+00,  4.2936e-02,  1.0060e+00,  6.4664e-02,
          3.2105e-01, -7.6489e-02],
        [ 1.6634e+00,  4.6290e+00,  1.1517e+00,  9.3327e-02, -7.1638e-02,
          1.7596e-01,  1.1394e+00,  4.4100e-02,  1.0058e+00,  5.7167e-02,
          3.2184e-01, -7.7084e-02],
        [ 1.6634e+00,  4.6491e+00,  1.1481e+00,  8.7201e-02, -7.1516e-02,
          1.7603e-01,  9.2376e-01,  4.3689e-02,  1.0058e+00,  4.8427e-02,
          3.1868e-01, -7.7950e-02],
        [ 1.6606e+00,  4.6450e+00,  1.1517e+00,  8.9011e-02, -7.1551e-02,
          1.7582e-01,  1.3231e+00,  4.6078e-02,  1.0045e+00,  3.9092e-02,
          3.0759e-01, -7.8305e-02],
        [ 1.6609e+00,  4.6442e+00,  1.1634e+00,  8.2144e-02, -7.1516e-02,
          1.7628e-01,  4.9480e-01,  4.1143e-02,  1.0077e+00,  2.5620e-02,
          3.0937e-01, -7.7979e-02],
        [ 1.6528e+00,  4.6088e+00,  1.1651e+00,  8.5877e-02, -7.1106e-02,
          1.7610e-01,  1.0980e+00,  4.2223e-02,  1.0051e+00,  2.7049e-02,
          2.9675e-01, -7.5033e-02],
        [ 1.6421e+00,  4.6009e+00,  1.1698e+00,  8.9280e-02, -6.8747e-02,
          1.7550e-01,  1.8545e+00,  4.7143e-02,  1.0018e+00,  2.7716e-02,
          2.8962e-01, -7.3695e-02],
        [ 1.6405e+00,  4.5899e+00,  1.1647e+00,  9.0199e-02, -6.7253e-02,
          1.7588e-01,  8.6689e-01,  4.5539e-02,  1.0026e+00,  1.5225e-02,
          2.8282e-01, -7.6234e-02],
        [ 1.6327e+00,  4.5791e+00,  1.1847e+00,  9.1414e-02, -6.5298e-02,
          1.7542e-01,  1.4891e+00,  4.7078e-02,  1.0013e+00,  9.6838e-03,
          2.7334e-01, -7.4640e-02],
        [ 1.6253e+00,  4.5785e+00,  1.2001e+00,  8.8729e-02, -6.4338e-02,
          1.7576e-01,  1.0099e+00,  4.5162e-02,  1.0011e+00,  7.9111e-03,
          2.5305e-01, -7.3909e-02],
        [ 1.6197e+00,  4.5621e+00,  1.1900e+00,  9.7493e-02, -5.9715e-02,
          1.7461e-01,  2.4260e+00,  4.9987e-02,  9.9606e-01,  9.6419e-03,
          2.5112e-01, -7.0562e-02],
        [ 1.6137e+00,  4.5574e+00,  1.1807e+00,  9.6086e-02, -5.6906e-02,
          1.7462e-01,  1.9081e+00,  5.0913e-02,  9.9479e-01,  2.3520e-03,
          2.5624e-01, -7.2588e-02],
        [ 1.6148e+00,  4.5721e+00,  1.1803e+00,  9.1419e-02, -5.7631e-02,
          1.7548e-01,  6.6850e-01,  4.7347e-02,  9.9669e-01, -2.6961e-03,
          2.5864e-01, -7.5006e-02],
        [ 1.6119e+00,  4.5693e+00,  1.1907e+00,  9.5731e-02, -5.7939e-02,
          1.7503e-01,  1.7552e+00,  5.0230e-02,  9.9391e-01,  1.4817e-03,
          2.5212e-01, -7.2066e-02],
        [ 1.6096e+00,  4.5526e+00,  1.1852e+00,  9.7632e-02, -5.8453e-02,
          1.7492e-01,  2.0393e+00,  5.4182e-02,  9.9150e-01, -6.7751e-04,
          2.4907e-01, -7.3148e-02],
        [ 1.6127e+00,  4.5474e+00,  1.1823e+00,  9.4568e-02, -5.8870e-02,
          1.7548e-01,  1.0530e+00,  5.1031e-02,  9.9448e-01, -2.5619e-03,
          2.5020e-01, -7.5764e-02],
        [ 1.6106e+00,  4.5480e+00,  1.1992e+00,  9.3924e-02, -6.1189e-02,
          1.7578e-01,  1.0357e+00,  5.0955e-02,  9.9445e-01, -4.4221e-03,
          2.4823e-01, -7.5965e-02],
        [ 1.6124e+00,  4.5360e+00,  1.1946e+00,  9.3485e-02, -6.2324e-02,
          1.7565e-01,  1.4665e+00,  5.2203e-02,  9.9428e-01, -7.5855e-03,
          2.5473e-01, -7.4888e-02],
        [ 1.6201e+00,  4.5248e+00,  1.1880e+00,  9.7334e-02, -6.3505e-02,
          1.7593e-01,  1.0999e+00,  5.0584e-02,  9.9514e-01, -1.0612e-02,
          2.4973e-01, -7.5936e-02],
        [ 1.6130e+00,  4.5093e+00,  1.2002e+00,  9.8379e-02, -6.3621e-02,
          1.7580e-01,  1.3098e+00,  4.9926e-02,  9.9577e-01, -1.3186e-02,
          2.4388e-01, -7.5154e-02],
        [ 1.6176e+00,  4.5208e+00,  1.1932e+00,  9.8494e-02, -6.2321e-02,
          1.7548e-01,  1.6832e+00,  5.0989e-02,  9.9503e-01, -1.3376e-02,
          2.4825e-01, -7.4024e-02],
        [ 1.6142e+00,  4.4951e+00,  1.2125e+00,  9.7811e-02, -6.0327e-02,
          1.7559e-01,  1.2981e+00,  4.8790e-02,  9.9577e-01, -1.5343e-02,
          2.3948e-01, -7.3196e-02],
        [ 1.5991e+00,  4.4542e+00,  1.2316e+00,  9.9959e-02, -6.0454e-02,
          1.7558e-01,  1.4036e+00,  5.0175e-02,  9.9325e-01, -1.5232e-02,
          2.1885e-01, -7.3310e-02],
        [ 1.6128e+00,  4.4923e+00,  1.2082e+00,  1.0121e-01, -6.0855e-02,
          1.7535e-01,  1.7190e+00,  5.2995e-02,  9.9251e-01, -1.9626e-02,
          2.3830e-01, -7.4246e-02],
        [ 1.6052e+00,  4.4742e+00,  1.2248e+00,  1.0023e-01, -6.1396e-02,
          1.7543e-01,  1.5792e+00,  5.3939e-02,  9.9328e-01, -1.4135e-02,
          2.4197e-01, -7.6375e-02],
        [ 1.6158e+00,  4.4743e+00,  1.2120e+00,  1.0010e-01, -6.1915e-02,
          1.7557e-01,  1.3468e+00,  5.2832e-02,  9.9473e-01, -1.6092e-02,
          2.5058e-01, -7.7877e-02],
        [ 1.6139e+00,  4.4511e+00,  1.2247e+00,  1.0207e-01, -6.1968e-02,
          1.7558e-01,  1.3642e+00,  5.1176e-02,  9.9547e-01, -1.7216e-02,
          2.3452e-01, -7.7617e-02],
        [ 1.6203e+00,  4.4587e+00,  1.2285e+00,  1.0060e-01, -6.3283e-02,
          1.7586e-01,  1.1309e+00,  5.1197e-02,  9.9553e-01, -1.6361e-02,
          2.4403e-01, -7.8137e-02],
        [ 1.6255e+00,  4.4528e+00,  1.2269e+00,  9.8146e-02, -6.3268e-02,
          1.7595e-01,  1.0529e+00,  4.7726e-02,  9.9728e-01, -1.6315e-02,
          2.4628e-01, -7.6193e-02],
        [ 1.6290e+00,  4.4559e+00,  1.2282e+00,  9.9386e-02, -6.4208e-02,
          1.7639e-01,  6.9446e-01,  4.4245e-02,  9.9761e-01, -1.2759e-02,
          2.4009e-01, -7.3388e-02],
        [ 1.6287e+00,  4.4468e+00,  1.2179e+00,  1.0465e-01, -6.5085e-02,
          1.7594e-01,  1.6367e+00,  4.9629e-02,  9.9362e-01, -1.0533e-02,
          2.4720e-01, -7.1971e-02],
        [ 1.6283e+00,  4.4412e+00,  1.2208e+00,  1.0417e-01, -6.3051e-02,
          1.7527e-01,  2.1374e+00,  5.2910e-02,  9.9352e-01, -9.8489e-03,
          2.5694e-01, -7.2912e-02],
        [ 1.6230e+00,  4.4274e+00,  1.2345e+00,  1.0412e-01, -6.1474e-02,
          1.7529e-01,  1.6938e+00,  5.2785e-02,  9.9470e-01, -9.7025e-03,
          2.4297e-01, -7.6048e-02],
        [ 1.6264e+00,  4.4338e+00,  1.2303e+00,  1.0727e-01, -6.0545e-02,
          1.7508e-01,  1.8623e+00,  5.4192e-02,  9.9423e-01, -5.6624e-03,
          2.4223e-01, -7.7736e-02],
        [ 1.6196e+00,  4.4028e+00,  1.2409e+00,  1.1006e-01, -5.9864e-02,
          1.7480e-01,  2.2200e+00,  5.5873e-02,  9.9317e-01, -4.6667e-03,
          2.4091e-01, -7.8937e-02],
        [ 1.6251e+00,  4.4131e+00,  1.2480e+00,  1.0130e-01, -5.9409e-02,
          1.7561e-01,  7.8326e-01,  4.9866e-02,  9.9758e-01, -4.3208e-03,
          2.4335e-01, -8.0938e-02],
        [ 1.6211e+00,  4.4193e+00,  1.2744e+00,  9.9607e-02, -6.1274e-02,
          1.7597e-01,  7.9657e-01,  4.7712e-02,  9.9691e-01, -3.6877e-03,
          2.2626e-01, -7.7977e-02],
        [ 1.6192e+00,  4.3912e+00,  1.2771e+00,  1.0270e-01, -6.2842e-02,
          1.7584e-01,  1.4130e+00,  5.0282e-02,  9.9397e-01, -5.3823e-03,
          2.2194e-01, -7.5379e-02],
        [ 1.6212e+00,  4.3622e+00,  1.2696e+00,  1.0804e-01, -6.1853e-02,
          1.7537e-01,  1.9174e+00,  5.2239e-02,  9.9288e-01, -3.6741e-03,
          2.2516e-01, -7.4610e-02],
        [ 1.6294e+00,  4.3903e+00,  1.2597e+00,  1.0304e-01, -6.0569e-02,
          1.7583e-01,  8.9577e-01,  4.7312e-02,  9.9622e-01, -3.1906e-03,
          2.2885e-01, -7.5090e-02],
        [ 1.6308e+00,  4.4115e+00,  1.2356e+00,  1.0571e-01, -6.1457e-02,
          1.7538e-01,  1.9645e+00,  5.3020e-02,  9.9193e-01, -1.0782e-03,
          2.5592e-01, -7.4238e-02],
        [ 1.6352e+00,  4.4192e+00,  1.2342e+00,  9.7440e-02, -6.0518e-02,
          1.7585e-01,  9.8700e-01,  4.8032e-02,  9.9626e-01, -1.4860e-03,
          2.6224e-01, -7.4513e-02]], grad_fn=<SqueezeBackward0>)
torch.Size([227, 12])
tensor([[ 1.7731,  4.8263,  1.2393,  ..., -0.0330,  0.1813, -0.0947],
        [ 1.7545,  4.8231,  1.2448,  ..., -0.0367,  0.1972, -0.0606],
        [ 1.7406,  4.8492,  1.2585,  ..., -0.0353,  0.2147, -0.0479],
        ...,
        [ 1.7641,  4.6004,  1.2800,  ...,  0.0292,  0.2923, -0.0573],
        [ 1.7677,  4.6489,  1.2843,  ...,  0.0301,  0.2946, -0.0560],
        [ 1.7600,  4.6271,  1.2947,  ...,  0.0307,  0.2949, -0.0546]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1027, 12])
tensor([[ 1.9866,  3.1511,  0.8357,  ...,  0.0365,  0.2611, -0.1051],
        [ 1.9757,  3.1541,  0.8353,  ...,  0.0316,  0.2655, -0.0952],
        [ 1.9654,  3.1589,  0.8353,  ...,  0.0290,  0.2708, -0.0886],
        ...,
        [ 1.9721,  3.2630,  0.7462,  ...,  0.4386,  0.8978, -0.0394],
        [ 1.9768,  3.2637,  0.7333,  ...,  0.4385,  0.9043, -0.0401],
        [ 1.9771,  3.2635,  0.7333,  ...,  0.4384,  0.9052, -0.0408]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1157, 12])
tensor([[1.7588, 4.5849, 0.8398,  ..., 0.0231, 0.6399, 0.8934],
        [1.7403, 4.5751, 0.8394,  ..., 0.0160, 0.6363, 0.9278],
        [1.7208, 4.5869, 0.8397,  ..., 0.0119, 0.6430, 0.9559],
        ...,
        [1.6551, 4.5977, 0.8768,  ..., 0.4286, 0.6883, 0.9454],
        [1.6565, 4.5969, 0.8768,  ..., 0.4286, 0.6883, 0.9440],
        [1.6575, 4.6008, 0.8768,  ..., 0.4284, 0.6903, 0.9447]],
       grad_fn=<SqueezeBackward0>)
torch.Size([557, 12])
tensor([[1.8405, 5.0868, 1.0190,  ..., 0.1634, 0.3791, 0.8866],
        [1.8118, 5.0785, 1.0185,  ..., 0.1542, 0.3749, 0.9215],
        [1.7864, 5.0822, 1.0185,  ..., 0.1501, 0.3793, 0.9358],
        ...,
        [1.7194, 4.7457, 1.2168,  ..., 0.1417, 0.3138, 0.9364],
        [1.7176, 4.7438, 1.2168,  ..., 0.1419, 0.3123, 0.9372],
        [1.7171, 4.7416, 1.2168,  ..., 0.1421, 0.3114, 0.9362]],
       grad_fn=<SqueezeBackward0>)
torch.Size([187, 12])
tensor([[ 1.6982,  6.8812,  1.4976,  ...,  0.0822,  0.4687, -0.1030],
        [ 1.6613,  6.8909,  1.5294,  ...,  0.0846,  0.4908, -0.0731],
        [ 1.6553,  6.9920,  1.4837,  ...,  0.0804,  0.5438, -0.0629],
        ...,
        [ 1.6934,  7.0693,  1.3614,  ...,  0.2674,  0.7170, -0.0730],
        [ 1.6849,  6.9921,  1.3654,  ...,  0.2605,  0.7128, -0.0744],
        [ 1.6817,  6.9889,  1.3749,  ...,  0.2638,  0.7266, -0.0754]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1001, 12])
tensor([[1.8346e+00, 7.8632e+00, 1.0482e+00,  ..., 1.5942e-02, 3.7081e-01,
         8.9613e-01],
        [1.7787e+00, 7.8673e+00, 1.0482e+00,  ..., 6.4361e-03, 3.7421e-01,
         9.1998e-01],
        [1.7498e+00, 7.8758e+00, 1.0483e+00,  ..., 3.4437e-04, 3.8247e-01,
         9.3087e-01],
        ...,
        [1.6231e+00, 8.1094e+00, 1.7350e+00,  ..., 3.2648e-01, 3.8895e-01,
         9.3463e-01],
        [1.6181e+00, 8.1074e+00, 1.7350e+00,  ..., 3.2584e-01, 3.9049e-01,
         9.3793e-01],
        [1.6178e+00, 8.1019e+00, 1.7349e+00,  ..., 3.2665e-01, 3.8674e-01,
         9.3701e-01]], grad_fn=<SqueezeBackward0>)
torch.Size([777, 12])
tensor([[ 1.8670,  3.8882,  0.7297,  ...,  0.0323,  0.2557, -0.1035],
        [ 1.8551,  3.8893,  0.7292,  ...,  0.0270,  0.2586, -0.0884],
        [ 1.8442,  3.8930,  0.7292,  ...,  0.0244,  0.2629, -0.0790],
        ...,
        [ 1.8379,  3.9266,  1.0903,  ...,  0.1066,  0.4830, -0.0574],
        [ 1.8345,  3.9279,  1.0838,  ...,  0.1061,  0.4939, -0.0566],
        [ 1.8347,  3.9279,  1.0838,  ...,  0.1061,  0.4938, -0.0546]],
       grad_fn=<SqueezeBackward0>)
torch.Size([917, 12])
tensor([[ 1.8930,  5.5772,  0.7722,  ...,  0.0677,  0.5106, -0.1010],
        [ 1.8738,  5.5653,  0.7716,  ...,  0.0611,  0.5088, -0.0785],
        [ 1.8614,  5.5707,  0.7715,  ...,  0.0573,  0.5166, -0.0691],
        ...,
        [ 1.9385,  5.9651,  0.6728,  ...,  0.1911,  1.0962, -0.0678],
        [ 1.9421,  5.9358,  0.6640,  ...,  0.1745,  1.0010, -0.0696],
        [ 1.9425,  5.9373,  0.6640,  ...,  0.1744,  1.0015, -0.0689]],
       grad_fn=<SqueezeBackward0>)
torch.Size([817, 12])
tensor([[ 1.9132,  5.6122,  0.7495,  ...,  0.0578,  0.5303, -0.0994],
        [ 1.8957,  5.6053,  0.7490,  ...,  0.0512,  0.5300, -0.0775],
        [ 1.8823,  5.6095,  0.7490,  ...,  0.0479,  0.5349, -0.0658],
        ...,
        [ 1.9524,  5.9481,  0.5388,  ...,  0.3465,  1.4145, -0.0632],
        [ 1.9428,  5.8686,  0.5317,  ...,  0.3335,  1.3648, -0.0633],
        [ 1.9431,  5.8693,  0.5318,  ...,  0.3335,  1.3653, -0.0638]],
       grad_fn=<SqueezeBackward0>)
torch.Size([987, 12])
tensor([[ 1.8637,  4.8123,  0.7369,  ...,  0.0763,  0.2773, -0.0973],
        [ 1.8507,  4.8132,  0.7364,  ...,  0.0698,  0.2851, -0.0855],
        [ 1.8412,  4.8201,  0.7365,  ...,  0.0666,  0.2914, -0.0735],
        ...,
        [ 1.8363,  5.1638,  0.8250,  ...,  0.3713,  1.0574, -0.0497],
        [ 1.8281,  5.0870,  0.8278,  ...,  0.3903,  0.9991, -0.0508],
        [ 1.8279,  5.0881,  0.8278,  ...,  0.3902,  0.9995, -0.0512]],
       grad_fn=<SqueezeBackward0>)
torch.Size([987, 12])
tensor([[ 1.9704,  5.1642,  0.6518,  ...,  0.0559,  0.1771, -0.1015],
        [ 1.9502,  5.1584,  0.6511,  ...,  0.0495,  0.1793, -0.0900],
        [ 1.9343,  5.1608,  0.6510,  ...,  0.0459,  0.1838, -0.0811],
        ...,
        [ 1.8688,  4.8885,  1.0067,  ...,  0.1413,  0.3119, -0.0726],
        [ 1.8765,  4.7783,  1.0456,  ...,  0.1514,  0.2088, -0.0729],
        [ 1.8767,  4.7792,  1.0456,  ...,  0.1513,  0.2083, -0.0719]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1281, 12])
tensor([[1.8407, 7.1641, 1.0666,  ..., 0.0640, 0.3023, 0.8977],
        [1.7928, 7.1667, 1.0664,  ..., 0.0538, 0.3060, 0.9256],
        [1.7647, 7.1728, 1.0664,  ..., 0.0489, 0.3124, 0.9356],
        ...,
        [1.7160, 6.8028, 1.1753,  ..., 0.5265, 0.5357, 0.9341],
        [1.7149, 6.7979, 1.1752,  ..., 0.5265, 0.5326, 0.9335],
        [1.7137, 6.7926, 1.1750,  ..., 0.5270, 0.5280, 0.9325]],
       grad_fn=<SqueezeBackward0>)
torch.Size([75, 12])
tensor([[ 1.8122e+00,  7.2010e+00,  1.4336e+00,  1.7095e-01,  1.1193e-02,
          1.6051e-01,  3.7440e-01, -2.1457e-02,  9.2993e-01,  2.3567e-01,
          8.9236e-01, -1.0554e-01],
        [ 1.7681e+00,  7.2021e+00,  1.4638e+00,  1.7708e-01, -1.9837e-02,
          1.6064e-01,  1.2051e+00,  3.3577e-02,  9.2684e-01,  2.3464e-01,
          9.0683e-01, -7.6521e-02],
        [ 1.7328e+00,  7.2188e+00,  1.4481e+00,  1.5991e-01, -6.3413e-02,
          1.6455e-01, -8.5425e-01,  6.9777e-02,  9.6236e-01,  2.2961e-01,
          9.1200e-01, -6.2394e-02],
        [ 1.7266e+00,  7.2321e+00,  1.4321e+00,  1.5417e-01, -8.8044e-02,
          1.6567e-01,  6.0851e-02,  9.6427e-02,  9.7425e-01,  2.2452e-01,
          9.3123e-01, -5.4649e-02],
        [ 1.7201e+00,  7.2423e+00,  1.4264e+00,  1.5126e-01, -9.2522e-02,
          1.6554e-01,  1.4727e-02,  1.0152e-01,  9.7141e-01,  2.3470e-01,
          9.4696e-01, -6.2539e-02],
        [ 1.7388e+00,  7.2471e+00,  1.4138e+00,  1.5234e-01, -9.5559e-02,
          1.6518e-01,  5.2763e-01,  1.0906e-01,  9.6736e-01,  2.2947e-01,
          9.5820e-01, -6.8091e-02],
        [ 1.7441e+00,  7.2616e+00,  1.3933e+00,  1.4713e-01, -1.0026e-01,
          1.6595e-01, -7.8424e-01,  1.0341e-01,  9.7373e-01,  2.2862e-01,
          9.6573e-01, -7.3639e-02],
        [ 1.7406e+00,  7.2605e+00,  1.3840e+00,  1.4748e-01, -1.0256e-01,
          1.6549e-01,  6.5195e-01,  1.1012e-01,  9.6781e-01,  2.2856e-01,
          9.6917e-01, -7.3778e-02],
        [ 1.7469e+00,  7.2637e+00,  1.3760e+00,  1.4229e-01, -1.0396e-01,
          1.6577e-01, -1.9377e-01,  1.0787e-01,  9.7255e-01,  2.3529e-01,
          9.7024e-01, -7.7372e-02],
        [ 1.7513e+00,  7.2715e+00,  1.3554e+00,  1.4400e-01, -1.0596e-01,
          1.6588e-01,  1.4167e-01,  1.0745e-01,  9.7130e-01,  2.3307e-01,
          9.7479e-01, -7.7344e-02],
        [ 1.7622e+00,  7.2733e+00,  1.3223e+00,  1.4526e-01, -1.0731e-01,
          1.6621e-01, -1.4043e-01,  1.0371e-01,  9.7251e-01,  2.3491e-01,
          9.7479e-01, -7.7768e-02],
        [ 1.7381e+00,  7.2721e+00,  1.3204e+00,  1.4034e-01, -1.0732e-01,
          1.6606e-01,  4.6000e-01,  1.0676e-01,  9.6923e-01,  2.3687e-01,
          9.7335e-01, -7.6856e-02],
        [ 1.7280e+00,  7.2736e+00,  1.3671e+00,  1.3610e-01, -1.0765e-01,
          1.6652e-01, -7.4643e-01,  1.0325e-01,  9.7543e-01,  2.3808e-01,
          9.5392e-01, -7.8370e-02],
        [ 1.7396e+00,  7.2780e+00,  1.3415e+00,  1.3626e-01, -1.0940e-01,
          1.6659e-01, -4.3829e-01,  1.0047e-01,  9.7622e-01,  2.3135e-01,
          9.5054e-01, -7.6873e-02],
        [ 1.7205e+00,  7.2710e+00,  1.3018e+00,  1.3328e-01, -1.1129e-01,
          1.6681e-01, -7.6015e-01,  9.5200e-02,  9.7981e-01,  2.3528e-01,
          9.6007e-01, -7.5812e-02],
        [ 1.7459e+00,  7.2841e+00,  1.3262e+00,  1.2801e-01, -1.1249e-01,
          1.6670e-01, -2.0155e-01,  9.7505e-02,  9.7857e-01,  2.4167e-01,
          9.6627e-01, -7.3878e-02],
        [ 1.7262e+00,  7.2837e+00,  1.2657e+00,  1.2934e-01, -1.1266e-01,
          1.6675e-01, -4.3201e-01,  9.4126e-02,  9.7993e-01,  2.4262e-01,
          9.6821e-01, -7.3654e-02],
        [ 1.7250e+00,  7.2837e+00,  1.2597e+00,  1.2898e-01, -1.1284e-01,
          1.6667e-01, -2.1102e-01,  9.5185e-02,  9.7925e-01,  2.3693e-01,
          9.7824e-01, -7.3228e-02],
        [ 1.7239e+00,  7.2862e+00,  1.2721e+00,  1.2211e-01, -1.1338e-01,
          1.6686e-01, -7.5485e-01,  9.2660e-02,  9.8191e-01,  2.4293e-01,
          9.6807e-01, -7.3346e-02],
        [ 1.7273e+00,  7.2830e+00,  1.2409e+00,  1.2801e-01, -1.1267e-01,
          1.6647e-01,  3.2275e-01,  9.6667e-02,  9.7740e-01,  2.3420e-01,
          9.6706e-01, -7.2190e-02],
        [ 1.7216e+00,  7.2779e+00,  1.2323e+00,  1.3192e-01, -1.1106e-01,
          1.6642e-01, -5.4425e-02,  9.7282e-02,  9.7831e-01,  2.3949e-01,
          9.5753e-01, -7.4257e-02],
        [ 1.7218e+00,  7.2778e+00,  1.2390e+00,  1.3008e-01, -1.1024e-01,
          1.6641e-01, -4.7488e-01,  9.5601e-02,  9.8157e-01,  2.4442e-01,
          9.4529e-01, -7.5952e-02],
        [ 1.7192e+00,  7.2813e+00,  1.2573e+00,  1.2553e-01, -1.1098e-01,
          1.6636e-01, -1.3062e-01,  9.6602e-02,  9.8035e-01,  2.3966e-01,
          9.3774e-01, -7.5673e-02],
        [ 1.7173e+00,  7.2789e+00,  1.2512e+00,  1.2750e-01, -1.1073e-01,
          1.6638e-01, -2.7099e-01,  9.6644e-02,  9.8107e-01,  2.4191e-01,
          9.2146e-01, -7.6225e-02],
        [ 1.7150e+00,  7.2817e+00,  1.2752e+00,  1.2363e-01, -1.1101e-01,
          1.6648e-01, -1.1617e+00,  9.0136e-02,  9.8871e-01,  2.4590e-01,
          9.3602e-01, -7.6585e-02],
        [ 1.7221e+00,  7.2868e+00,  1.2815e+00,  1.1803e-01, -1.1282e-01,
          1.6633e-01, -9.6614e-01,  8.6948e-02,  9.9209e-01,  2.4848e-01,
          9.2948e-01, -7.4796e-02],
        [ 1.7165e+00,  7.2807e+00,  1.2793e+00,  1.2060e-01, -1.1307e-01,
          1.6575e-01,  5.4528e-01,  9.6092e-02,  9.8641e-01,  2.4430e-01,
          9.3171e-01, -7.4010e-02],
        [ 1.7187e+00,  7.2809e+00,  1.2705e+00,  1.2078e-01, -1.1225e-01,
          1.6581e-01, -3.8743e-01,  9.4170e-02,  9.9011e-01,  2.3913e-01,
          9.1931e-01, -7.7003e-02],
        [ 1.7268e+00,  7.2884e+00,  1.2572e+00,  1.1639e-01, -1.1342e-01,
          1.6602e-01, -8.1357e-01,  9.0128e-02,  9.9234e-01,  2.4444e-01,
          9.2884e-01, -7.7229e-02],
        [ 1.7246e+00,  7.2837e+00,  1.2507e+00,  1.2001e-01, -1.1343e-01,
          1.6587e-01, -1.4354e-01,  9.3259e-02,  9.9020e-01,  2.4695e-01,
          9.2529e-01, -7.6633e-02],
        [ 1.7241e+00,  7.2883e+00,  1.2682e+00,  1.1020e-01, -1.1397e-01,
          1.6596e-01, -5.4001e-01,  9.2769e-02,  9.9097e-01,  2.4700e-01,
          9.1877e-01, -7.6963e-02],
        [ 1.7257e+00,  7.2881e+00,  1.2655e+00,  1.1362e-01, -1.1399e-01,
          1.6603e-01, -9.0238e-01,  8.8617e-02,  9.9412e-01,  2.4635e-01,
          9.0201e-01, -7.6604e-02],
        [ 1.7296e+00,  7.2897e+00,  1.2607e+00,  1.1657e-01, -1.1434e-01,
          1.6587e-01, -4.9563e-01,  8.9119e-02,  9.9330e-01,  2.4613e-01,
          8.8974e-01, -7.5504e-02],
        [ 1.7336e+00,  7.2899e+00,  1.2639e+00,  1.1398e-01, -1.1386e-01,
          1.6585e-01, -1.2631e+00,  8.3470e-02,  9.9960e-01,  2.4404e-01,
          8.9315e-01, -7.5264e-02],
        [ 1.7291e+00,  7.2927e+00,  1.2765e+00,  1.0729e-01, -1.1495e-01,
          1.6556e-01, -4.3775e-01,  8.4788e-02,  9.9715e-01,  2.4679e-01,
          8.9051e-01, -7.3626e-02],
        [ 1.7373e+00,  7.2934e+00,  1.2779e+00,  1.0623e-01, -1.1486e-01,
          1.6565e-01, -1.2650e+00,  8.2159e-02,  1.0012e+00,  2.5170e-01,
          8.6691e-01, -7.3668e-02],
        [ 1.7392e+00,  7.2939e+00,  1.2899e+00,  1.0964e-01, -1.1495e-01,
          1.6538e-01, -3.3110e-01,  8.5791e-02,  9.9689e-01,  2.5189e-01,
          8.0886e-01, -7.2525e-02],
        [ 1.7439e+00,  7.2342e+00,  1.3447e+00,  1.0104e-01, -1.1241e-01,
          1.6536e-01, -8.7637e-01,  8.6676e-02,  9.9863e-01,  1.9706e-01,
          6.2063e-01, -7.3967e-02],
        [ 1.6592e+00,  7.0645e+00,  1.3828e+00,  5.4611e-02, -1.1012e-01,
          1.6515e-01, -1.9670e+00,  8.4272e-02,  1.0046e+00,  1.6168e-01,
          5.2831e-01, -7.2927e-02],
        [ 1.6138e+00,  6.6771e+00,  1.4238e+00,  9.2323e-03, -1.0853e-01,
          1.6454e-01, -2.3944e+00,  8.1406e-02,  1.0080e+00,  1.8709e-01,
          4.6711e-01, -6.8936e-02],
        [ 1.6140e+00,  6.8155e+00,  1.4960e+00,  3.9260e-03, -1.0768e-01,
          1.6384e-01, -2.3982e+00,  7.6571e-02,  1.0104e+00,  1.7244e-01,
          3.8835e-01, -6.5753e-02],
        [ 1.5807e+00,  6.6930e+00,  1.4409e+00,  1.0892e-02, -1.0541e-01,
          1.6272e-01, -2.5065e-01,  9.0044e-02,  1.0073e+00,  3.9735e-01,
          2.4425e-01, -6.5388e-02],
        [ 1.4496e+00,  6.1919e+00,  1.3897e+00,  6.4138e-03, -1.0152e-01,
          1.6294e-01, -2.3943e+00,  1.0242e-01,  1.0090e+00,  2.5395e-01,
          2.3066e-01, -6.6057e-02],
        [ 1.3693e+00,  5.3671e+00,  1.5088e+00,  8.8811e-03, -9.7889e-02,
          1.6247e-01, -2.3932e+00,  9.7881e-02,  1.0061e+00,  1.9569e-01,
          1.9660e-01, -6.2191e-02],
        [ 1.3681e+00,  5.2244e+00,  1.3970e+00,  1.1319e-02, -9.6633e-02,
          1.6206e-01, -2.3930e+00,  9.5992e-02,  1.0038e+00,  1.0065e-01,
          1.9676e-01, -5.8742e-02],
        [ 1.3672e+00,  5.5138e+00,  1.4812e+00,  1.3363e-02, -9.7962e-02,
          1.6193e-01, -2.3937e+00,  9.8411e-02,  1.0019e+00,  1.0618e-01,
          1.9737e-01, -5.7379e-02],
        [ 1.3654e+00,  5.8763e+00,  1.6634e+00,  1.4790e-02, -1.0119e-01,
          1.6208e-01, -2.3956e+00,  1.0489e-01,  9.9807e-01,  1.3625e-01,
          1.9884e-01, -5.7346e-02],
        [ 1.3630e+00,  6.2982e+00,  1.6635e+00,  1.5422e-02, -1.0523e-01,
          1.6247e-01, -2.3976e+00,  1.1261e-01,  9.9344e-01,  1.4039e-01,
          2.0029e-01, -5.7456e-02],
        [ 1.3606e+00,  6.2439e+00,  1.6635e+00,  1.6389e-02, -1.0618e-01,
          1.6261e-01, -2.3969e+00,  1.1682e-01,  9.9114e-01,  1.5134e-01,
          2.0039e-01, -5.7761e-02],
        [ 1.3600e+00,  6.4211e+00,  1.6634e+00,  1.7429e-02, -1.0555e-01,
          1.6254e-01, -2.3952e+00,  1.1809e-01,  9.9283e-01,  1.6160e-01,
          1.9969e-01, -5.9106e-02],
        [ 1.3599e+00,  6.3260e+00,  1.6635e+00,  1.6441e-02, -1.0576e-01,
          1.6248e-01, -2.3968e+00,  1.1956e-01,  9.9184e-01,  1.7988e-01,
          2.0078e-01, -5.9830e-02],
        [ 1.3598e+00,  6.1561e+00,  1.6634e+00,  1.6715e-02, -1.0449e-01,
          1.6236e-01, -2.3955e+00,  1.1869e-01,  9.9302e-01,  1.7027e-01,
          2.0022e-01, -6.0308e-02],
        [ 1.3598e+00,  5.9885e+00,  1.6634e+00,  1.6431e-02, -1.0365e-01,
          1.6221e-01, -2.3959e+00,  1.1808e-01,  9.9261e-01,  1.5627e-01,
          2.0052e-01, -6.0103e-02],
        [ 1.3606e+00,  5.9754e+00,  1.6608e+00,  1.7353e-02, -1.0184e-01,
          1.6197e-01, -2.3939e+00,  1.1591e-01,  9.9546e-01,  1.7799e-01,
          1.9934e-01, -6.0574e-02],
        [ 1.3615e+00,  5.5120e+00,  1.6632e+00,  1.7170e-02, -9.8935e-02,
          1.6147e-01, -2.3938e+00,  1.1268e-01,  9.9674e-01,  1.5928e-01,
          1.9935e-01, -6.0596e-02],
        [ 1.3611e+00,  5.1429e+00,  1.6115e+00,  1.6900e-02, -9.7546e-02,
          1.6125e-01, -2.3944e+00,  1.1131e-01,  9.9458e-01,  1.3485e-01,
          1.9982e-01, -5.9048e-02],
        [ 1.3601e+00,  4.8415e+00,  1.6063e+00,  1.8020e-02, -9.5831e-02,
          1.6110e-01, -2.3926e+00,  1.0963e-01,  9.9342e-01,  1.2706e-01,
          1.9888e-01, -5.7177e-02],
        [ 1.3587e+00,  4.7151e+00,  1.5750e+00,  1.9029e-02, -9.5710e-02,
          1.6109e-01, -2.3921e+00,  1.0997e-01,  9.9041e-01,  1.2395e-01,
          1.9860e-01, -5.4759e-02],
        [ 1.3578e+00,  4.7648e+00,  1.5004e+00,  2.0133e-02, -9.6238e-02,
          1.6119e-01, -2.3913e+00,  1.1054e-01,  9.8871e-01,  1.4019e-01,
          1.9794e-01, -5.2857e-02],
        [ 1.3574e+00,  4.8079e+00,  1.5046e+00,  2.0977e-02, -9.6514e-02,
          1.6123e-01, -2.3908e+00,  1.1095e-01,  9.8814e-01,  1.4422e-01,
          1.9748e-01, -5.2006e-02],
        [ 1.3577e+00,  4.7795e+00,  1.4942e+00,  2.1308e-02, -9.6464e-02,
          1.6120e-01, -2.2197e+00,  1.1100e-01,  9.8837e-01,  1.3638e-01,
          1.9717e-01, -5.1750e-02],
        [ 1.3602e+00,  4.6920e+00,  1.3372e+00,  2.0956e-02, -9.5686e-02,
          1.6106e-01, -1.7000e+00,  1.0896e-01,  9.9187e-01,  1.3452e-01,
          2.5470e-01, -5.1893e-02],
        [ 1.3601e+00,  4.4176e+00,  1.3598e+00,  1.9944e-02, -9.4955e-02,
          1.6121e-01, -1.7057e+00,  1.0710e-01,  9.9151e-01,  1.2036e-01,
          2.3429e-01, -5.0838e-02],
        [ 1.3589e+00,  4.2555e+00,  1.3433e+00,  1.9698e-02, -9.4495e-02,
          1.6148e-01, -2.2185e+00,  1.0473e-01,  9.8949e-01,  1.1142e-01,
          2.6476e-01, -4.8307e-02],
        [ 1.3599e+00,  4.2023e+00,  1.1959e+00,  1.9610e-02, -9.4931e-02,
          1.6151e-01, -2.3892e+00,  1.0234e-01,  9.8936e-01,  1.0243e-01,
          3.3396e-01, -4.5940e-02],
        [ 1.3623e+00,  4.0424e+00,  1.2733e+00,  1.9865e-02, -9.4556e-02,
          1.6124e-01, -1.8023e+00,  1.0046e-01,  9.9238e-01,  1.0985e-01,
          2.7211e-01, -4.5815e-02],
        [ 1.3622e+00,  3.9972e+00,  1.2902e+00,  1.9366e-02, -9.4044e-02,
          1.6118e-01, -2.3899e+00,  9.9598e-02,  9.9165e-01,  1.1470e-01,
          2.8134e-01, -4.5627e-02],
        [ 1.3639e+00,  4.0010e+00,  1.2607e+00,  1.9211e-02, -9.5191e-02,
          1.6114e-01, -1.9343e+00,  9.9552e-02,  9.9284e-01,  1.2535e-01,
          3.1226e-01, -4.5387e-02],
        [ 1.3625e+00,  3.9556e+00,  1.2881e+00,  1.9009e-02, -9.6969e-02,
          1.6141e-01, -2.1367e+00,  1.0198e-01,  9.8913e-01,  1.3945e-01,
          3.1224e-01, -4.3759e-02],
        [ 1.3650e+00,  3.9265e+00,  1.3055e+00,  2.0050e-02, -9.5735e-02,
          1.6118e-01, -1.2883e+00,  9.9970e-02,  9.9444e-01,  1.3532e-01,
          3.4324e-01, -4.4391e-02],
        [ 1.3665e+00,  3.8695e+00,  1.3354e+00,  1.9434e-02, -9.3208e-02,
          1.6097e-01, -1.5101e+00,  9.6555e-02,  9.9840e-01,  1.3490e-01,
          3.7947e-01, -4.5402e-02],
        [ 1.3639e+00,  3.7878e+00,  1.3610e+00,  1.9369e-02, -9.3968e-02,
          1.6126e-01, -2.1068e+00,  9.7553e-02,  9.9341e-01,  1.3964e-01,
          3.3859e-01, -4.3176e-02],
        [ 1.3639e+00,  3.7801e+00,  1.3258e+00,  2.0620e-02, -9.4926e-02,
          1.6141e-01, -1.4588e+00,  9.7896e-02,  9.9311e-01,  1.4734e-01,
          3.9607e-01, -4.0962e-02],
        [ 1.3629e+00,  3.8066e+00,  1.2548e+00,  2.1025e-02, -9.4525e-02,
          1.6149e-01, -1.9409e+00,  9.7161e-02,  9.9205e-01,  1.4971e-01,
          3.5354e-01, -3.9605e-02],
        [ 1.3624e+00,  4.1040e+00,  1.2484e+00,  2.1367e-02, -9.5611e-02,
          1.6155e-01, -2.3877e+00,  9.7741e-02,  9.9087e-01,  1.6944e-01,
          2.9644e-01, -4.0022e-02]], grad_fn=<SqueezeBackward0>)
torch.Size([1012, 12])
tensor([[ 1.9668,  5.8876,  0.6206,  ...,  0.3082,  0.8465, -0.0941],
        [ 1.9539,  5.8825,  0.6202,  ...,  0.3024,  0.8479, -0.0666],
        [ 1.9461,  5.8900,  0.6204,  ...,  0.2997,  0.8548, -0.0542],
        ...,
        [ 1.9504,  5.9889,  0.8121,  ...,  0.3429,  1.1060, -0.0580],
        [ 1.9498,  5.9812,  0.8467,  ...,  0.3429,  1.1481, -0.0566],
        [ 1.9507,  5.9794,  0.8467,  ...,  0.3429,  1.1477, -0.0563]],
       grad_fn=<SqueezeBackward0>)
torch.Size([852, 12])
tensor([[ 1.8465,  5.2820,  0.6787,  ...,  0.1126,  0.3921, -0.0972],
        [ 1.8323,  5.2810,  0.6782,  ...,  0.1060,  0.3987, -0.0842],
        [ 1.8222,  5.2871,  0.6782,  ...,  0.1026,  0.4058, -0.0737],
        ...,
        [ 1.8260,  3.7996,  0.8523,  ...,  0.3223,  0.6646, -0.0457],
        [ 1.8228,  3.7603,  0.8638,  ...,  0.3440,  0.6544, -0.0440],
        [ 1.8227,  3.7606,  0.8638,  ...,  0.3439,  0.6551, -0.0439]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1257, 12])
tensor([[1.8562, 5.6010, 0.9383,  ..., 0.0296, 0.3876, 0.8919],
        [1.8206, 5.5969, 0.9379,  ..., 0.0202, 0.3883, 0.9256],
        [1.7964, 5.6024, 0.9379,  ..., 0.0158, 0.3937, 0.9409],
        ...,
        [1.7359, 5.4124, 0.9907,  ..., 0.1559, 0.7089, 0.9350],
        [1.7370, 5.4125, 0.9906,  ..., 0.1558, 0.7093, 0.9343],
        [1.7380, 5.4163, 0.9907,  ..., 0.1555, 0.7110, 0.9350]],
       grad_fn=<SqueezeBackward0>)
torch.Size([922, 12])
tensor([[ 1.9732,  9.1382,  0.6347,  ...,  0.1345,  0.5866, -0.1065],
        [ 1.9261,  9.1410,  0.6345,  ...,  0.1259,  0.5933, -0.0928],
        [ 1.8985,  9.1571,  0.6345,  ...,  0.1174,  0.6105, -0.0814],
        ...,
        [ 1.8943,  5.0010,  0.6868,  ...,  0.3639,  1.5052, -0.0505],
        [ 1.8920,  4.9757,  0.6832,  ...,  0.3697,  1.5035, -0.0499],
        [ 1.8918,  4.9742,  0.6832,  ...,  0.3697,  1.5032, -0.0476]],
       grad_fn=<SqueezeBackward0>)
torch.Size([44, 12])
tensor([[ 1.7665e+00,  3.9439e+00,  1.0077e+00,  5.1062e-02,  7.5317e-02,
          1.6614e-01,  1.9776e+00, -8.2889e-02,  9.3195e-01,  3.3959e-02,
          1.9768e-01, -1.1392e-01],
        [ 1.7351e+00,  3.9024e+00,  1.0066e+00,  5.7469e-02,  4.3744e-02,
          1.6753e-01,  2.6275e+00, -4.5499e-02,  9.5805e-01,  2.0405e-02,
          1.9891e-01, -9.5571e-02],
        [ 1.7141e+00,  3.8943e+00,  9.9894e-01,  5.0209e-02,  2.2610e-05,
          1.7224e-01,  2.2826e+00, -8.9329e-03,  9.9103e-01,  1.1553e-02,
          2.1136e-01, -8.6267e-02],
        [ 1.6947e+00,  3.8704e+00,  1.0035e+00,  4.0790e-02, -3.5688e-02,
          1.7556e-01,  2.0864e+00,  1.9834e-02,  1.0168e+00, -3.1039e-05,
          2.1395e-01, -7.3733e-02],
        [ 1.6911e+00,  3.8426e+00,  1.0163e+00,  4.9044e-02, -3.8335e-02,
          1.7503e-01,  2.6261e+00,  2.6715e-02,  1.0094e+00, -1.6157e-03,
          2.1367e-01, -7.9450e-02],
        [ 1.6942e+00,  3.8343e+00,  1.0210e+00,  5.0204e-02, -4.1878e-02,
          1.7545e-01,  2.0294e+00,  2.8622e-02,  1.0075e+00, -2.2450e-03,
          2.2656e-01, -8.4549e-02],
        [ 1.6929e+00,  3.8202e+00,  1.0187e+00,  5.3939e-02, -4.5179e-02,
          1.7547e-01,  2.2789e+00,  3.0874e-02,  1.0040e+00, -9.9674e-03,
          2.2919e-01, -8.6156e-02],
        [ 1.6885e+00,  3.7850e+00,  1.0329e+00,  6.0885e-02, -4.3847e-02,
          1.7501e-01,  2.6246e+00,  3.1298e-02,  1.0016e+00, -1.4602e-02,
          2.3029e-01, -8.5183e-02],
        [ 1.6955e+00,  3.7817e+00,  1.0335e+00,  5.6095e-02, -4.4640e-02,
          1.7620e-01,  1.1173e+00,  2.4469e-02,  1.0043e+00, -1.8238e-02,
          2.2969e-01, -8.4957e-02],
        [ 1.7011e+00,  3.7850e+00,  1.0221e+00,  5.7039e-02, -4.7600e-02,
          1.7680e-01,  1.1897e+00,  2.1536e-02,  1.0020e+00, -2.1273e-02,
          2.4777e-01, -7.9630e-02],
        [ 1.6964e+00,  3.7507e+00,  1.0322e+00,  6.6561e-02, -5.1030e-02,
          1.7686e-01,  1.8002e+00,  2.5235e-02,  9.9712e-01, -2.6028e-02,
          2.3216e-01, -7.6805e-02],
        [ 1.6985e+00,  3.7334e+00,  1.0283e+00,  7.2148e-02, -5.0052e-02,
          1.7637e-01,  2.2743e+00,  2.7055e-02,  9.9592e-01, -3.2918e-02,
          2.3825e-01, -7.6036e-02],
        [ 1.6997e+00,  3.7217e+00,  1.0401e+00,  6.7425e-02, -4.9602e-02,
          1.7696e-01,  1.2152e+00,  2.2329e-02,  9.9929e-01, -3.3480e-02,
          2.3488e-01, -7.6711e-02],
        [ 1.6979e+00,  3.7031e+00,  1.0374e+00,  7.4965e-02, -4.9964e-02,
          1.7646e-01,  2.2096e+00,  2.5619e-02,  9.9572e-01, -3.7180e-02,
          2.3214e-01, -7.5628e-02],
        [ 1.6992e+00,  3.6804e+00,  1.0442e+00,  7.5521e-02, -4.8883e-02,
          1.7656e-01,  1.7672e+00,  2.4090e-02,  9.9751e-01, -3.8178e-02,
          2.2976e-01, -7.6664e-02],
        [ 1.6980e+00,  3.6706e+00,  1.0396e+00,  8.0398e-02, -4.6865e-02,
          1.7606e-01,  2.3227e+00,  2.5127e-02,  9.9573e-01, -4.0709e-02,
          2.3995e-01, -7.6166e-02],
        [ 1.6975e+00,  3.6758e+00,  1.0497e+00,  7.4858e-02, -4.8530e-02,
          1.7673e-01,  1.4126e+00,  2.3635e-02,  9.9760e-01, -4.3813e-02,
          2.3992e-01, -7.8772e-02],
        [ 1.7053e+00,  3.6609e+00,  1.0395e+00,  8.1016e-02, -5.0507e-02,
          1.7657e-01,  1.9391e+00,  2.4802e-02,  9.9681e-01, -4.2650e-02,
          2.4136e-01, -7.9266e-02],
        [ 1.7071e+00,  3.6429e+00,  1.0542e+00,  7.8731e-02, -5.0752e-02,
          1.7691e-01,  1.3610e+00,  2.1225e-02,  1.0004e+00, -4.9194e-02,
          2.4166e-01, -7.9231e-02],
        [ 1.7119e+00,  3.6657e+00,  1.0578e+00,  7.3080e-02, -5.4268e-02,
          1.7755e-01,  6.1456e-01,  1.7265e-02,  1.0028e+00, -4.9446e-02,
          2.5325e-01, -7.8423e-02],
        [ 1.7164e+00,  3.6566e+00,  1.0578e+00,  7.8044e-02, -5.7400e-02,
          1.7705e-01,  1.7647e+00,  2.0776e-02,  1.0013e+00, -5.2946e-02,
          2.5232e-01, -7.6623e-02],
        [ 1.7163e+00,  3.6291e+00,  1.0641e+00,  8.4761e-02, -5.5107e-02,
          1.7645e-01,  2.1429e+00,  2.1632e-02,  1.0020e+00, -5.7385e-02,
          2.4073e-01, -7.6495e-02],
        [ 1.7140e+00,  3.6298e+00,  1.0657e+00,  8.1937e-02, -5.1433e-02,
          1.7643e-01,  1.6448e+00,  1.8862e-02,  1.0035e+00, -5.3492e-02,
          2.4346e-01, -7.6453e-02],
        [ 1.7101e+00,  3.6365e+00,  1.0642e+00,  8.3267e-02, -5.1745e-02,
          1.7635e-01,  2.0459e+00,  2.2714e-02,  1.0001e+00, -5.3973e-02,
          2.5024e-01, -7.7301e-02],
        [ 1.7112e+00,  3.6351e+00,  1.0648e+00,  8.5801e-02, -5.0958e-02,
          1.7617e-01,  2.1470e+00,  2.4235e-02,  9.9977e-01, -5.7203e-02,
          2.5338e-01, -7.8781e-02],
        [ 1.7127e+00,  3.6107e+00,  1.0742e+00,  8.5166e-02, -4.8601e-02,
          1.7639e-01,  1.5483e+00,  2.0073e-02,  1.0020e+00, -6.0305e-02,
          2.3894e-01, -7.8586e-02],
        [ 1.7120e+00,  3.6218e+00,  1.0691e+00,  8.4788e-02, -4.8756e-02,
          1.7659e-01,  1.5490e+00,  1.9214e-02,  1.0005e+00, -6.2837e-02,
          2.4360e-01, -7.6787e-02],
        [ 1.7030e+00,  3.5990e+00,  1.0849e+00,  8.9965e-02, -4.5417e-02,
          1.7599e-01,  2.2495e+00,  2.0907e-02,  9.9772e-01, -6.1433e-02,
          2.3421e-01, -7.3381e-02],
        [ 1.7059e+00,  3.6051e+00,  1.0747e+00,  8.8475e-02, -4.4229e-02,
          1.7637e-01,  1.6224e+00,  1.8854e-02,  9.9730e-01, -6.1987e-02,
          2.4318e-01, -7.2786e-02],
        [ 1.7054e+00,  3.6020e+00,  1.0822e+00,  8.7421e-02, -4.6275e-02,
          1.7680e-01,  1.3091e+00,  1.8573e-02,  9.9686e-01, -5.9523e-02,
          2.3679e-01, -7.2489e-02],
        [ 1.7085e+00,  3.6100e+00,  1.0857e+00,  8.6969e-02, -5.0501e-02,
          1.7719e-01,  1.1946e+00,  1.8934e-02,  9.9732e-01, -6.2727e-02,
          2.4217e-01, -7.3250e-02],
        [ 1.7124e+00,  3.6063e+00,  1.0869e+00,  9.2201e-02, -5.3830e-02,
          1.7689e-01,  2.0231e+00,  2.3813e-02,  9.9647e-01, -6.2995e-02,
          2.4773e-01, -7.4739e-02],
        [ 1.7186e+00,  3.5862e+00,  1.0753e+00,  8.9000e-02, -5.2067e-02,
          1.7667e-01,  1.8217e+00,  2.0951e-02,  9.9975e-01, -6.5671e-02,
          2.4047e-01, -7.6074e-02],
        [ 1.7114e+00,  3.5941e+00,  1.0954e+00,  8.8523e-02, -4.8263e-02,
          1.7635e-01,  1.9024e+00,  2.0143e-02,  9.9993e-01, -6.5040e-02,
          2.4183e-01, -7.4612e-02],
        [ 1.7101e+00,  3.5949e+00,  1.0850e+00,  9.2724e-02, -4.6380e-02,
          1.7613e-01,  2.1392e+00,  2.1678e-02,  9.9710e-01, -6.4774e-02,
          2.4041e-01, -7.4305e-02],
        [ 1.7088e+00,  3.5951e+00,  1.0812e+00,  9.2731e-02, -4.7615e-02,
          1.7635e-01,  1.9838e+00,  2.3832e-02,  9.9609e-01, -6.5801e-02,
          2.4378e-01, -7.6881e-02],
        [ 1.7067e+00,  3.5871e+00,  1.0986e+00,  8.9230e-02, -4.8883e-02,
          1.7647e-01,  1.8906e+00,  2.4335e-02,  9.9692e-01, -6.0901e-02,
          2.4723e-01, -7.8987e-02],
        [ 1.7018e+00,  3.5949e+00,  1.0986e+00,  9.1998e-02, -4.7411e-02,
          1.7594e-01,  2.4450e+00,  2.6291e-02,  9.9606e-01, -5.2938e-02,
          2.6385e-01, -7.8718e-02],
        [ 1.6986e+00,  3.5978e+00,  1.1074e+00,  9.1873e-02, -4.6864e-02,
          1.7617e-01,  2.0449e+00,  2.5803e-02,  9.9654e-01, -4.8902e-02,
          2.7178e-01, -7.9916e-02],
        [ 1.6995e+00,  3.5922e+00,  1.1012e+00,  8.7780e-02, -4.6385e-02,
          1.7660e-01,  1.4194e+00,  2.0593e-02,  9.9874e-01, -4.1565e-02,
          2.8837e-01, -7.8914e-02],
        [ 1.6795e+00,  3.6295e+00,  1.1785e+00,  6.7080e-02, -4.9228e-02,
          1.7718e-01,  1.0513e+00,  2.2857e-02,  9.9824e-01,  2.5998e-03,
          2.9235e-01, -7.6146e-02],
        [ 1.6957e+00,  3.6308e+00,  1.1302e+00,  6.7139e-02, -5.1467e-02,
          1.7728e-01,  1.2759e+00,  2.3965e-02,  9.9724e-01,  5.2031e-02,
          2.9983e-01, -7.3943e-02],
        [ 1.7216e+00,  3.5972e+00,  1.0833e+00,  7.3437e-02, -5.3656e-02,
          1.7697e-01,  1.8821e+00,  2.5619e-02,  9.9619e-01,  1.7259e-02,
          2.3417e-01, -7.4342e-02],
        [ 1.6965e+00,  3.6840e+00,  1.1478e+00,  4.2416e-02, -5.2365e-02,
          1.7624e-01,  2.6230e+00,  3.5473e-02,  9.9466e-01, -7.1341e-03,
          2.0905e-01, -7.5513e-02]], grad_fn=<SqueezeBackward0>)
torch.Size([1237, 12])
tensor([[1.7842, 6.3822, 0.9140,  ..., 0.4412, 0.9586, 0.8993],
        [1.7511, 6.3881, 0.9137,  ..., 0.4318, 0.9671, 0.9317],
        [1.7270, 6.3958, 0.9140,  ..., 0.4278, 0.9716, 0.9564],
        ...,
        [1.6852, 6.3168, 0.9020,  ..., 0.3592, 1.1599, 0.9317],
        [1.6875, 6.3228, 0.9022,  ..., 0.3588, 1.1625, 0.9325],
        [1.6867, 6.3235, 0.9022,  ..., 0.3589, 1.1625, 0.9334]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1197, 12])
tensor([[1.7880, 5.0112, 1.0038,  ..., 0.1031, 0.2761, 0.8880],
        [1.7572, 4.9920, 1.0032,  ..., 0.0952, 0.2652, 0.9229],
        [1.7342, 5.0069, 1.0032,  ..., 0.0889, 0.2776, 0.9381],
        ...,
        [1.7291, 5.2599, 1.0302,  ..., 0.1787, 0.6012, 0.9337],
        [1.7300, 5.2603, 1.0302,  ..., 0.1787, 0.6016, 0.9333],
        [1.7304, 5.2643, 1.0303,  ..., 0.1784, 0.6034, 0.9343]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1357, 12])
tensor([[1.8678, 6.4412, 0.9739,  ..., 0.1338, 0.5988, 0.8983],
        [1.8313, 6.4554, 0.9737,  ..., 0.1222, 0.6129, 0.9311],
        [1.8060, 6.4627, 0.9739,  ..., 0.1184, 0.6182, 0.9468],
        ...,
        [1.7257, 6.2325, 1.0107,  ..., 0.0951, 0.8257, 0.9337],
        [1.7249, 6.2318, 1.0107,  ..., 0.0952, 0.8252, 0.9339],
        [1.7248, 6.2327, 1.0107,  ..., 0.0951, 0.8255, 0.9344]],
       grad_fn=<SqueezeBackward0>)
torch.Size([443, 12])
tensor([[1.9115, 4.2918, 1.0726,  ..., 0.1667, 0.4141, 0.8980],
        [1.8914, 4.2840, 1.0721,  ..., 0.1596, 0.4100, 0.9309],
        [1.8754, 4.2882, 1.0722,  ..., 0.1563, 0.4113, 0.9503],
        ...,
        [1.9311, 4.3973, 0.5874,  ..., 0.5367, 1.0435, 0.9389],
        [1.9319, 4.3978, 0.5874,  ..., 0.5367, 1.0438, 0.9399],
        [1.9322, 4.3982, 0.5874,  ..., 0.5366, 1.0441, 0.9401]],
       grad_fn=<SqueezeBackward0>)
torch.Size([727, 12])
tensor([[ 1.9625,  3.9477,  0.7169,  ...,  0.3280,  0.6472, -0.0834],
        [ 1.9524,  3.9457,  0.7168,  ...,  0.3236,  0.6490, -0.0524],
        [ 1.9483,  3.9459,  0.7170,  ...,  0.3219,  0.6529, -0.0390],
        ...,
        [ 1.8066,  3.7684,  0.9013,  ...,  0.6324,  0.7175, -0.0475],
        [ 1.8208,  3.7505,  0.8737,  ...,  0.6174,  0.7062, -0.0499],
        [ 1.8209,  3.7517,  0.8738,  ...,  0.6174,  0.7064, -0.0513]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1257, 12])
tensor([[1.8541, 6.4315, 1.2042,  ..., 0.0581, 0.2988, 0.8919],
        [1.8098, 6.4393, 1.2038,  ..., 0.0453, 0.3100, 0.9216],
        [1.7820, 6.4492, 1.2039,  ..., 0.0401, 0.3181, 0.9350],
        ...,
        [1.7619, 6.1078, 1.7961,  ..., 0.0796, 0.1788, 0.9368],
        [1.7615, 6.1070, 1.7961,  ..., 0.0797, 0.1782, 0.9366],
        [1.7610, 6.1057, 1.7961,  ..., 0.0799, 0.1778, 0.9356]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1237, 12])
tensor([[1.8167, 5.7782, 1.1053,  ..., 0.1848, 0.3721, 0.8922],
        [1.7783, 5.7765, 1.1049,  ..., 0.1745, 0.3744, 0.9251],
        [1.7518, 5.7866, 1.1050,  ..., 0.1693, 0.3820, 0.9428],
        ...,
        [1.7186, 5.7568, 1.0087,  ..., 0.2483, 0.7319, 0.9342],
        [1.7194, 5.7593, 1.0088,  ..., 0.2481, 0.7330, 0.9346],
        [1.7182, 5.7557, 1.0087,  ..., 0.2484, 0.7313, 0.9341]],
       grad_fn=<SqueezeBackward0>)
torch.Size([157, 12])
tensor([[ 1.9996,  3.3412,  0.7485,  ..., -0.0706,  0.4991, -0.0782],
        [ 1.9894,  3.3382,  0.7484,  ..., -0.0744,  0.5011, -0.0457],
        [ 1.9872,  3.3368,  0.7485,  ..., -0.0756,  0.5050, -0.0363],
        ...,
        [ 2.0029,  3.4228,  0.7323,  ...,  0.1590,  0.7974, -0.0324],
        [ 1.9890,  3.3784,  0.7021,  ...,  0.1500,  0.7854, -0.0307],
        [ 1.9889,  3.3755,  0.7020,  ...,  0.1502,  0.7840, -0.0289]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1277, 12])
tensor([[1.8903, 4.7579, 0.9587,  ..., 0.0699, 0.3760, 0.8939],
        [1.8676, 4.7513, 0.9582,  ..., 0.0619, 0.3745, 0.9225],
        [1.8501, 4.7578, 0.9583,  ..., 0.0578, 0.3796, 0.9373],
        ...,
        [1.8094, 4.8803, 0.6829,  ..., 0.4391, 0.5778, 0.9348],
        [1.8092, 4.8820, 0.6830,  ..., 0.4391, 0.5782, 0.9359],
        [1.8078, 4.8788, 0.6829,  ..., 0.4393, 0.5766, 0.9354]],
       grad_fn=<SqueezeBackward0>)
torch.Size([767, 12])
tensor([[ 2.0383,  5.3398,  0.7585,  ..., -0.0212,  0.7419, -0.0904],
        [ 2.0292,  5.3346,  0.7582,  ..., -0.0264,  0.7447, -0.0618],
        [ 2.0238,  5.3420,  0.7585,  ..., -0.0287,  0.7507, -0.0467],
        ...,
        [ 2.0068,  5.8634,  0.6602,  ...,  0.2018,  0.7651, -0.0502],
        [ 2.0021,  5.8454,  0.6660,  ...,  0.1940,  0.7644, -0.0516],
        [ 2.0025,  5.8456,  0.6660,  ...,  0.1939,  0.7651, -0.0522]],
       grad_fn=<SqueezeBackward0>)
torch.Size([707, 12])
tensor([[ 1.9763,  3.1578,  0.8379,  ...,  0.0406,  0.2167, -0.0987],
        [ 1.9635,  3.1581,  0.8373,  ...,  0.0354,  0.2201, -0.0876],
        [ 1.9534,  3.1660,  0.8372,  ...,  0.0321,  0.2307, -0.0848],
        ...,
        [ 1.9773,  3.3653,  0.8207,  ..., -0.0753,  0.6953, -0.0451],
        [ 1.9742,  3.3574,  0.8188,  ..., -0.0753,  0.7066, -0.0469],
        [ 1.9746,  3.3584,  0.8189,  ..., -0.0754,  0.7074, -0.0489]],
       grad_fn=<SqueezeBackward0>)
torch.Size([152, 12])
tensor([[ 1.9973,  3.3340,  0.7246,  ..., -0.0708,  0.3925, -0.0765],
        [ 1.9876,  3.3311,  0.7245,  ..., -0.0742,  0.3939, -0.0466],
        [ 1.9845,  3.3302,  0.7247,  ..., -0.0755,  0.3978, -0.0357],
        ...,
        [ 1.9922,  3.3827,  0.7302,  ...,  0.0511,  1.0398, -0.0443],
        [ 1.9912,  3.4211,  0.7602,  ...,  0.0567,  0.9685, -0.0427],
        [ 1.9910,  3.4175,  0.7601,  ...,  0.0568,  0.9673, -0.0391]],
       grad_fn=<SqueezeBackward0>)
torch.Size([977, 12])
tensor([[1.8027, 4.5058, 0.8535,  ..., 0.1891, 0.4475, 0.8937],
        [1.7791, 4.4900, 0.8529,  ..., 0.1822, 0.4397, 0.9281],
        [1.7615, 4.4970, 0.8530,  ..., 0.1778, 0.4437, 0.9527],
        ...,
        [1.7817, 4.7035, 0.6987,  ..., 0.8126, 0.7880, 0.9447],
        [1.7821, 4.7048, 0.6987,  ..., 0.8124, 0.7889, 0.9448],
        [1.7818, 4.7032, 0.6987,  ..., 0.8126, 0.7880, 0.9440]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1077, 12])
tensor([[1.3218, 6.2103, 1.0927,  ..., 0.1944, 0.2930, 0.8900],
        [1.2711, 6.2085, 1.0923,  ..., 0.1825, 0.2962, 0.9228],
        [1.2445, 6.2240, 1.0924,  ..., 0.1748, 0.3092, 0.9378],
        ...,
        [1.7009, 9.0399, 1.4090,  ..., 0.5222, 0.7630, 0.9221],
        [1.7019, 9.0410, 1.4090,  ..., 0.5220, 0.7639, 0.9218],
        [1.7037, 9.0434, 1.4090,  ..., 0.5216, 0.7652, 0.9218]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1237, 12])
tensor([[1.8113, 5.8040, 1.0996,  ..., 0.1040, 0.4174, 0.8944],
        [1.7752, 5.8110, 1.0993,  ..., 0.0927, 0.4258, 0.9272],
        [1.7480, 5.8165, 1.0995,  ..., 0.0887, 0.4302, 0.9431],
        ...,
        [1.7134, 5.7349, 1.0249,  ..., 0.1302, 0.6960, 0.9373],
        [1.7132, 5.7325, 1.0248,  ..., 0.1304, 0.6951, 0.9364],
        [1.7144, 5.7343, 1.0249,  ..., 0.1302, 0.6961, 0.9361]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1197, 12])
tensor([[1.8079, 5.4134, 0.9346,  ..., 0.1281, 0.5792, 0.8960],
        [1.7819, 5.4102, 0.9342,  ..., 0.1195, 0.5804, 0.9306],
        [1.7608, 5.4234, 0.9345,  ..., 0.1151, 0.5892, 0.9506],
        ...,
        [1.7230, 5.4044, 0.9507,  ..., 0.1941, 1.2046, 0.9448],
        [1.7247, 5.4030, 0.9506,  ..., 0.1942, 1.2041, 0.9436],
        [1.7256, 5.4027, 0.9506,  ..., 0.1941, 1.2043, 0.9431]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1237, 12])
tensor([[1.8425, 5.6217, 0.8979,  ..., 0.1220, 0.3811, 0.8941],
        [1.8098, 5.6212, 0.8975,  ..., 0.1123, 0.3837, 0.9276],
        [1.7849, 5.6313, 0.8977,  ..., 0.1078, 0.3911, 0.9446],
        ...,
        [1.7262, 5.5581, 0.8901,  ..., 0.2107, 0.7410, 0.9343],
        [1.7248, 5.5545, 0.8900,  ..., 0.2110, 0.7392, 0.9339],
        [1.7252, 5.5550, 0.8900,  ..., 0.2109, 0.7396, 0.9337]],
       grad_fn=<SqueezeBackward0>)
torch.Size([67, 12])
tensor([[ 1.7362e+00,  4.5770e+00,  1.1090e+00,  1.0415e-01, -3.3203e-03,
          1.5654e-01, -1.6558e+00, -6.3010e-02,  9.6715e-01,  6.4611e-02,
          2.5922e-01, -9.3532e-02],
        [ 1.7205e+00,  4.5473e+00,  1.1070e+00,  1.0773e-01, -3.0470e-02,
          1.5672e-01, -1.4851e+00, -3.6094e-02,  9.9441e-01,  5.5047e-02,
          2.5818e-01, -6.4155e-02],
        [ 1.7119e+00,  4.5581e+00,  1.1113e+00,  1.0390e-01, -6.0298e-02,
          1.5863e-01, -1.2733e+00, -9.5474e-03,  1.0101e+00,  5.4650e-02,
          2.6269e-01, -4.2144e-02],
        [ 1.7067e+00,  4.5585e+00,  1.1094e+00,  9.7946e-02, -7.5239e-02,
          1.5917e-01, -1.1490e+00,  5.2452e-03,  1.0240e+00,  5.2354e-02,
          2.7226e-01, -3.6977e-02],
        [ 1.7051e+00,  4.5509e+00,  1.1112e+00,  9.5125e-02, -7.6451e-02,
          1.5846e-01, -1.5580e+00,  6.1253e-03,  1.0246e+00,  5.2749e-02,
          2.8593e-01, -4.3757e-02],
        [ 1.7162e+00,  4.5944e+00,  1.1188e+00,  9.8275e-02, -8.1076e-02,
          1.5829e-01, -1.3988e+00,  1.1499e-02,  1.0217e+00,  5.1175e-02,
          2.9013e-01, -4.6808e-02],
        [ 1.7209e+00,  4.6038e+00,  1.1205e+00,  9.9333e-02, -8.3189e-02,
          1.5815e-01, -1.7654e+00,  1.2883e-02,  1.0213e+00,  5.2660e-02,
          2.9607e-01, -4.8971e-02],
        [ 1.7167e+00,  4.5942e+00,  1.1230e+00,  9.8067e-02, -8.6395e-02,
          1.5806e-01, -1.3115e+00,  1.5622e-02,  1.0193e+00,  5.2791e-02,
          2.9945e-01, -4.9791e-02],
        [ 1.7206e+00,  4.6026e+00,  1.1280e+00,  1.0071e-01, -8.8240e-02,
          1.5818e-01, -1.0112e+00,  1.8626e-02,  1.0182e+00,  5.3044e-02,
          3.0579e-01, -5.0351e-02],
        [ 1.7297e+00,  4.6359e+00,  1.1233e+00,  1.0334e-01, -8.9523e-02,
          1.5857e-01, -1.5151e+00,  1.9194e-02,  1.0159e+00,  5.3234e-02,
          3.0399e-01, -5.0128e-02],
        [ 1.7310e+00,  4.6328e+00,  1.1282e+00,  1.0408e-01, -8.7766e-02,
          1.5816e-01, -6.2716e-01,  1.7970e-02,  1.0208e+00,  5.3886e-02,
          3.0530e-01, -5.2055e-02],
        [ 1.7280e+00,  4.6171e+00,  1.1410e+00,  1.0385e-01, -8.5716e-02,
          1.5795e-01, -4.6092e-01,  1.7546e-02,  1.0230e+00,  5.1959e-02,
          3.0672e-01, -5.4169e-02],
        [ 1.7387e+00,  4.6755e+00,  1.1484e+00,  1.0432e-01, -8.4369e-02,
          1.5823e-01, -1.1882e+00,  1.3869e-02,  1.0252e+00,  5.1772e-02,
          3.0723e-01, -5.5257e-02],
        [ 1.7445e+00,  4.6896e+00,  1.1550e+00,  1.0146e-01, -8.5976e-02,
          1.5854e-01, -1.5619e+00,  1.3576e-02,  1.0228e+00,  5.4721e-02,
          3.0776e-01, -5.3976e-02],
        [ 1.7404e+00,  4.6513e+00,  1.1458e+00,  1.0108e-01, -8.7053e-02,
          1.5854e-01, -1.4889e+00,  1.3036e-02,  1.0221e+00,  5.7750e-02,
          3.1441e-01, -5.2773e-02],
        [ 1.7478e+00,  4.7300e+00,  1.1682e+00,  1.0182e-01, -8.7216e-02,
          1.5823e-01, -9.0074e-01,  1.4564e-02,  1.0236e+00,  6.3582e-02,
          3.1429e-01, -5.3241e-02],
        [ 1.7438e+00,  4.7331e+00,  1.1735e+00,  9.8457e-02, -8.5709e-02,
          1.5797e-01, -8.6331e-01,  1.3236e-02,  1.0265e+00,  7.2360e-02,
          3.1985e-01, -5.4968e-02],
        [ 1.7523e+00,  4.8008e+00,  1.1843e+00,  9.5547e-02, -8.3755e-02,
          1.5757e-01, -4.4806e-01,  1.2090e-02,  1.0311e+00,  7.8505e-02,
          3.2473e-01, -5.7531e-02],
        [ 1.7484e+00,  4.8226e+00,  1.2034e+00,  8.9962e-02, -8.2516e-02,
          1.5760e-01, -1.1240e+00,  8.6995e-03,  1.0337e+00,  8.7744e-02,
          3.2926e-01, -5.9261e-02],
        [ 1.7114e+00,  4.8500e+00,  1.1923e+00,  8.7577e-02, -8.2142e-02,
          1.5736e-01, -5.9165e-01,  8.6632e-03,  1.0346e+00,  9.4891e-02,
          3.2068e-01, -6.0130e-02],
        [ 1.7019e+00,  4.7825e+00,  1.2106e+00,  8.4102e-02, -8.1567e-02,
          1.5739e-01, -1.0158e+00,  7.4272e-03,  1.0351e+00,  9.6505e-02,
          3.0001e-01, -6.0737e-02],
        [ 1.7468e+00,  4.7632e+00,  1.2229e+00,  8.9357e-02, -8.3081e-02,
          1.5767e-01, -1.0486e+00,  5.4104e-03,  1.0329e+00,  9.8018e-02,
          2.9585e-01, -5.9531e-02],
        [ 1.7623e+00,  4.8000e+00,  1.2085e+00,  9.2152e-02, -8.4554e-02,
          1.5793e-01, -5.4787e-01,  8.7124e-03,  1.0293e+00,  9.2752e-02,
          3.1609e-01, -5.7883e-02],
        [ 1.7670e+00,  4.8162e+00,  1.2137e+00,  8.9705e-02, -8.2907e-02,
          1.5794e-01, -5.3003e-01,  8.7818e-03,  1.0307e+00,  9.0765e-02,
          3.2266e-01, -5.8396e-02],
        [ 1.7642e+00,  4.7778e+00,  1.2221e+00,  9.0451e-02, -8.1888e-02,
          1.5801e-01, -1.2383e+00,  5.8386e-03,  1.0313e+00,  8.5977e-02,
          3.1534e-01, -5.8433e-02],
        [ 1.7826e+00,  4.8203e+00,  1.2131e+00,  9.8806e-02, -8.3900e-02,
          1.5822e-01, -1.2928e+00,  7.4951e-03,  1.0286e+00,  8.0458e-02,
          3.1057e-01, -5.6998e-02],
        [ 1.7904e+00,  4.8286e+00,  1.2057e+00,  1.0131e-01, -8.6108e-02,
          1.5842e-01, -9.8673e-01,  9.3472e-03,  1.0252e+00,  7.9744e-02,
          3.1316e-01, -5.5285e-02],
        [ 1.7968e+00,  4.8403e+00,  1.1926e+00,  1.0198e-01, -8.6184e-02,
          1.5843e-01, -6.1075e-01,  1.0639e-02,  1.0242e+00,  7.8057e-02,
          3.1964e-01, -5.4853e-02],
        [ 1.8011e+00,  4.8498e+00,  1.1865e+00,  1.0332e-01, -8.7100e-02,
          1.5888e-01, -1.9947e+00,  1.0012e-02,  1.0212e+00,  7.2262e-02,
          3.2740e-01, -5.3539e-02],
        [ 1.8098e+00,  4.8772e+00,  1.1833e+00,  1.0848e-01, -8.7774e-02,
          1.5852e-01, -8.0192e-01,  1.1524e-02,  1.0230e+00,  7.0678e-02,
          3.2659e-01, -5.3252e-02],
        [ 1.8086e+00,  4.8573e+00,  1.1785e+00,  1.0836e-01, -8.6646e-02,
          1.5824e-01, -3.8698e-01,  1.2400e-02,  1.0236e+00,  7.1918e-02,
          3.2605e-01, -5.4489e-02],
        [ 1.8115e+00,  4.8659e+00,  1.1734e+00,  1.0833e-01, -8.4615e-02,
          1.5835e-01, -9.9007e-01,  9.3916e-03,  1.0264e+00,  7.2065e-02,
          3.2727e-01, -5.6058e-02],
        [ 1.8120e+00,  4.8569e+00,  1.1826e+00,  1.0997e-01, -8.4693e-02,
          1.5844e-01, -1.4423e+00,  7.8180e-03,  1.0265e+00,  7.1663e-02,
          3.2587e-01, -5.5837e-02],
        [ 1.8199e+00,  4.8699e+00,  1.1701e+00,  1.1352e-01, -8.3914e-02,
          1.5788e-01, -2.0211e-01,  9.1282e-03,  1.0303e+00,  7.0893e-02,
          3.3414e-01, -5.7022e-02],
        [ 1.8092e+00,  4.7961e+00,  1.1687e+00,  1.0920e-01, -8.0903e-02,
          1.5761e-01, -9.5240e-01,  4.2014e-03,  1.0345e+00,  6.9216e-02,
          3.3339e-01, -5.9515e-02],
        [ 1.8178e+00,  4.8268e+00,  1.1633e+00,  1.1132e-01, -8.1047e-02,
          1.5751e-01, -1.1371e+00,  3.2670e-03,  1.0353e+00,  7.0894e-02,
          3.3418e-01, -5.9916e-02],
        [ 1.8243e+00,  4.8431e+00,  1.1641e+00,  1.1201e-01, -8.1457e-02,
          1.5746e-01, -1.3926e+00,  1.9189e-03,  1.0354e+00,  6.8879e-02,
          3.3477e-01, -5.9719e-02],
        [ 1.8219e+00,  4.8002e+00,  1.1458e+00,  1.0928e-01, -8.3179e-02,
          1.5731e-01, -9.8454e-01,  1.4144e-03,  1.0364e+00,  6.7517e-02,
          3.4949e-01, -5.9000e-02],
        [ 1.8158e+00,  4.7677e+00,  1.1672e+00,  1.1140e-01, -8.3875e-02,
          1.5746e-01, -1.2945e+00,  1.1060e-03,  1.0362e+00,  6.9658e-02,
          3.2289e-01, -5.8640e-02],
        [ 1.8288e+00,  4.8318e+00,  1.1576e+00,  1.1382e-01, -8.5832e-02,
          1.5764e-01, -1.2300e+00,  4.0853e-03,  1.0335e+00,  6.8707e-02,
          3.3901e-01, -5.7780e-02],
        [ 1.8226e+00,  4.8167e+00,  1.1623e+00,  1.1075e-01, -8.7248e-02,
          1.5780e-01, -9.4846e-01,  6.2790e-03,  1.0311e+00,  7.1101e-02,
          3.4215e-01, -5.6957e-02],
        [ 1.8167e+00,  4.7913e+00,  1.1756e+00,  1.1138e-01, -8.7369e-02,
          1.5801e-01, -9.7468e-01,  8.0224e-03,  1.0292e+00,  7.0377e-02,
          3.2940e-01, -5.6457e-02],
        [ 1.8174e+00,  4.7814e+00,  1.1737e+00,  1.1267e-01, -8.5087e-02,
          1.5800e-01, -1.8168e+00,  5.0343e-03,  1.0308e+00,  6.8169e-02,
          3.3320e-01, -5.6299e-02],
        [ 1.8220e+00,  4.7730e+00,  1.1614e+00,  1.1378e-01, -8.5606e-02,
          1.5764e-01, -1.1266e+00,  5.6503e-03,  1.0312e+00,  6.8007e-02,
          3.3469e-01, -5.6110e-02],
        [ 1.8181e+00,  4.7823e+00,  1.1663e+00,  1.1272e-01, -8.5718e-02,
          1.5741e-01, -2.5178e-01,  8.4457e-03,  1.0314e+00,  7.0864e-02,
          3.4301e-01, -5.6743e-02],
        [ 1.8261e+00,  4.8041e+00,  1.1599e+00,  1.1234e-01, -8.2500e-02,
          1.5744e-01, -9.1965e-01,  4.7986e-03,  1.0365e+00,  7.0009e-02,
          3.3807e-01, -5.8884e-02],
        [ 1.8238e+00,  4.7957e+00,  1.1668e+00,  1.1131e-01, -8.3302e-02,
          1.5761e-01, -1.1584e+00,  4.4933e-03,  1.0345e+00,  6.9241e-02,
          3.3700e-01, -5.8657e-02],
        [ 1.8108e+00,  4.7518e+00,  1.1712e+00,  1.1080e-01, -8.3818e-02,
          1.5769e-01, -6.8820e-01,  4.3833e-03,  1.0340e+00,  7.0437e-02,
          3.4133e-01, -5.8085e-02],
        [ 1.8193e+00,  4.8012e+00,  1.1790e+00,  1.1016e-01, -8.4038e-02,
          1.5793e-01, -1.1527e+00,  5.7399e-03,  1.0327e+00,  7.2381e-02,
          3.3257e-01, -5.7736e-02],
        [ 1.8169e+00,  4.7807e+00,  1.1804e+00,  1.1026e-01, -8.4488e-02,
          1.5798e-01, -9.9156e-01,  6.0490e-03,  1.0315e+00,  7.4454e-02,
          3.2566e-01, -5.7018e-02],
        [ 1.8090e+00,  4.7612e+00,  1.1954e+00,  1.0954e-01, -8.5101e-02,
          1.5809e-01, -6.6602e-01,  7.8618e-03,  1.0289e+00,  7.1920e-02,
          3.2222e-01, -5.6201e-02],
        [ 1.8104e+00,  4.7742e+00,  1.1817e+00,  1.0999e-01, -8.4669e-02,
          1.5832e-01, -7.8745e-01,  8.3250e-03,  1.0276e+00,  7.0514e-02,
          3.2384e-01, -5.5830e-02],
        [ 1.8134e+00,  4.7836e+00,  1.1842e+00,  1.1117e-01, -8.2249e-02,
          1.5816e-01, -1.0989e+00,  5.2444e-03,  1.0312e+00,  7.5870e-02,
          3.2576e-01, -5.6458e-02],
        [ 1.8146e+00,  4.7952e+00,  1.1713e+00,  1.0841e-01, -8.3368e-02,
          1.5812e-01, -1.0053e+00,  5.7915e-03,  1.0297e+00,  7.5176e-02,
          3.3663e-01, -5.6124e-02],
        [ 1.8067e+00,  4.7708e+00,  1.1829e+00,  1.0747e-01, -8.3784e-02,
          1.5817e-01, -1.0043e+00,  5.3867e-03,  1.0298e+00,  7.4149e-02,
          3.3653e-01, -5.5957e-02],
        [ 1.8147e+00,  4.8159e+00,  1.1781e+00,  1.1029e-01, -8.4091e-02,
          1.5806e-01, -4.4829e-01,  8.4058e-03,  1.0288e+00,  7.3828e-02,
          3.3811e-01, -5.6005e-02],
        [ 1.8182e+00,  4.8179e+00,  1.1846e+00,  1.0845e-01, -8.1513e-02,
          1.5793e-01, -8.2510e-01,  5.7410e-03,  1.0327e+00,  7.4975e-02,
          3.3277e-01, -5.7751e-02],
        [ 1.8144e+00,  4.8079e+00,  1.1856e+00,  1.0611e-01, -8.1310e-02,
          1.5776e-01, -6.3456e-01,  4.7164e-03,  1.0333e+00,  7.6042e-02,
          3.3566e-01, -5.8287e-02],
        [ 1.8159e+00,  4.8108e+00,  1.1730e+00,  1.0666e-01, -8.1226e-02,
          1.5787e-01, -8.1662e-01,  4.7808e-03,  1.0333e+00,  7.6346e-02,
          3.4236e-01, -5.8675e-02],
        [ 1.8152e+00,  4.8174e+00,  1.1900e+00,  1.0702e-01, -8.0792e-02,
          1.5776e-01, -8.1485e-01,  4.4781e-03,  1.0330e+00,  7.6016e-02,
          3.3364e-01, -5.9051e-02],
        [ 1.8162e+00,  4.8084e+00,  1.1798e+00,  1.0359e-01, -8.1591e-02,
          1.5789e-01, -1.4407e+00,  2.1977e-03,  1.0337e+00,  7.4360e-02,
          3.3296e-01, -5.8494e-02],
        [ 1.8155e+00,  4.8178e+00,  1.1893e+00,  1.0334e-01, -8.4251e-02,
          1.5797e-01, -1.0139e+00,  4.2714e-03,  1.0319e+00,  7.3091e-02,
          3.4581e-01, -5.6962e-02],
        [ 1.8224e+00,  4.8661e+00,  1.1764e+00,  1.0554e-01, -8.3851e-02,
          1.5775e-01, -6.2903e-01,  6.1278e-03,  1.0338e+00,  7.5537e-02,
          3.4962e-01, -5.7488e-02],
        [ 1.8228e+00,  4.8459e+00,  1.1793e+00,  1.0316e-01, -8.2024e-02,
          1.5736e-01, -4.2086e-01,  6.5879e-03,  1.0349e+00,  7.6667e-02,
          3.4377e-01, -5.9451e-02],
        [ 1.8164e+00,  4.8353e+00,  1.1997e+00,  9.7705e-02, -8.0608e-02,
          1.5740e-01, -1.3059e+00,  3.1851e-03,  1.0359e+00,  7.7233e-02,
          3.4176e-01, -6.0613e-02],
        [ 1.8213e+00,  4.8720e+00,  1.2007e+00,  9.9704e-02, -8.3524e-02,
          1.5761e-01, -1.0748e+00,  4.2936e-03,  1.0355e+00,  7.5133e-02,
          3.4170e-01, -5.9130e-02],
        [ 1.8216e+00,  4.8585e+00,  1.2020e+00,  9.8772e-02, -8.3892e-02,
          1.5768e-01, -9.0101e-01,  4.7845e-03,  1.0351e+00,  7.6456e-02,
          3.4268e-01, -5.8523e-02]], grad_fn=<SqueezeBackward0>)
torch.Size([3343, 12])
tensor([[ 1.3067,  6.5172,  0.9579,  ...,  0.0798,  0.2094,  0.8982],
        [ 1.2634,  6.5291,  0.9577,  ...,  0.0666,  0.2215,  0.9267],
        [ 1.2360,  6.5372,  0.9579,  ...,  0.0614,  0.2285,  0.9403],
        ...,
        [ 1.8177, 10.1472,  0.8584,  ...,  0.3735,  1.2254,  0.9173],
        [ 1.8156, 10.1443,  0.8584,  ...,  0.3739,  1.2241,  0.9177],
        [ 1.8138, 10.1409,  0.8584,  ...,  0.3744,  1.2225,  0.9176]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1052, 12])
tensor([[ 1.9122,  4.7713,  0.6812,  ..., -0.0576,  0.3356, -0.1071],
        [ 1.8971,  4.7701,  0.6806,  ..., -0.0641,  0.3411, -0.0949],
        [ 1.8849,  4.7743,  0.6806,  ..., -0.0673,  0.3472, -0.0862],
        ...,
        [ 1.8889,  4.9133,  0.9283,  ...,  0.2721,  1.4093, -0.0338],
        [ 1.7155,  4.5830,  0.9428,  ...,  0.3388,  0.9534, -0.0366],
        [ 1.7159,  4.5924,  0.9428,  ...,  0.3394,  0.9526, -0.0491]],
       grad_fn=<SqueezeBackward0>)
torch.Size([180, 12])
tensor([[1.8537, 3.5324, 0.9097,  ..., 0.1834, 0.3777, 0.8953],
        [1.8362, 3.5274, 0.9091,  ..., 0.1767, 0.3758, 0.9245],
        [1.8210, 3.5325, 0.9092,  ..., 0.1735, 0.3789, 0.9408],
        ...,
        [1.7889, 3.5602, 0.7200,  ..., 0.2562, 0.5225, 0.9423],
        [1.7758, 3.5575, 0.7110,  ..., 0.2590, 0.5200, 0.9441],
        [1.7731, 3.5556, 0.7110,  ..., 0.2592, 0.5190, 0.9428]],
       grad_fn=<SqueezeBackward0>)
torch.Size([7, 12])
tensor([[ 1.9517e+00,  4.9809e+00,  7.7853e-01,  7.6649e-02,  3.5555e-03,
          1.1644e+00,  1.7423e+00,  1.6766e-02, -3.9269e-02,  3.4846e-02,
          2.1092e-01, -1.0647e-01],
        [ 1.9355e+00,  4.9795e+00,  7.7796e-01,  7.2840e-02, -2.4494e-02,
          1.1642e+00,  1.7427e+00,  4.8765e-02, -4.7946e-03,  2.8059e-02,
          2.1647e-01, -9.2776e-02],
        [ 1.9230e+00,  4.9843e+00,  7.7791e-01,  6.4066e-02, -5.1972e-02,
          1.1651e+00,  1.7412e+00,  7.6782e-02,  2.0568e-02,  2.4629e-02,
          2.2290e-01, -8.2957e-02],
        [ 1.9168e+00,  4.9900e+00,  7.7803e-01,  5.7488e-02, -6.9201e-02,
          1.1658e+00,  1.7390e+00,  9.3713e-02,  3.3771e-02,  2.2941e-02,
          2.2852e-01, -7.7404e-02],
        [ 1.9182e+00,  4.9947e+00,  7.7813e-01,  5.9598e-02, -7.0812e-02,
          1.1654e+00,  1.7373e+00,  9.5827e-02,  3.0990e-02,  2.2351e-02,
          2.3467e-01, -8.0644e-02],
        [ 1.9243e+00,  5.0007e+00,  8.1511e-01,  5.8653e-02, -7.4414e-02,
          1.1656e+00,  1.1248e+00,  1.0848e-01,  3.0249e-02,  2.2945e-02,
          2.3019e-01, -8.1735e-02],
        [ 1.9268e+00,  5.0045e+00,  8.1524e-01,  5.9447e-02, -7.7572e-02,
          1.1656e+00,  1.1224e+00,  1.0866e-01,  2.8523e-02,  2.2428e-02,
          2.3429e-01, -8.1211e-02]], grad_fn=<SqueezeBackward0>)
torch.Size([990, 12])
tensor([[1.7960, 6.8058, 1.1993,  ..., 0.3133, 0.3945, 0.8958],
        [1.7492, 6.8117, 1.1990,  ..., 0.3013, 0.4044, 0.9210],
        [1.7214, 6.8217, 1.1990,  ..., 0.2953, 0.4136, 0.9336],
        ...,
        [1.6434, 5.8510, 0.9198,  ..., 0.5399, 0.3526, 0.9308],
        [1.6422, 5.8464, 0.9197,  ..., 0.5650, 0.3486, 0.9301],
        [1.6414, 5.8430, 0.9197,  ..., 0.5654, 0.3457, 0.9291]],
       grad_fn=<SqueezeBackward0>)
torch.Size([797, 12])
tensor([[ 1.4408,  3.9889,  0.7625,  ...,  0.0766,  0.3115, -0.1084],
        [ 1.4235,  3.9838,  0.7619,  ...,  0.0701,  0.3119, -0.0942],
        [ 1.4085,  3.9863,  0.7617,  ...,  0.0664,  0.3168, -0.0852],
        ...,
        [ 1.3973,  3.7970,  1.1848,  ...,  0.1297,  0.3861, -0.0584],
        [ 1.3984,  3.8105,  1.1804,  ...,  0.1363,  0.3918, -0.0605],
        [ 1.3991,  3.8110,  1.1804,  ...,  0.1363,  0.3913, -0.0608]],
       grad_fn=<SqueezeBackward0>)
torch.Size([314, 12])
tensor([[ 1.9376,  4.4455,  0.6702,  ...,  0.0204,  0.2637, -0.1068],
        [ 1.9230,  4.4449,  0.6697,  ...,  0.0143,  0.2694, -0.0963],
        [ 1.9108,  4.4488,  0.6696,  ...,  0.0112,  0.2747, -0.0876],
        ...,
        [ 1.9195,  3.3625,  0.9614,  ..., -0.0096,  0.3629, -0.0592],
        [ 1.9226,  3.3773,  0.9928,  ..., -0.0096,  0.3332, -0.0592],
        [ 1.9167,  3.3795,  1.0056,  ..., -0.0181,  0.3204, -0.0601]],
       grad_fn=<SqueezeBackward0>)
torch.Size([952, 12])
tensor([[ 1.9774,  6.3790,  0.5969,  ...,  0.2454,  0.5637, -0.0938],
        [ 1.9647,  6.3726,  0.5964,  ...,  0.2394,  0.5655, -0.0691],
        [ 1.9567,  6.3786,  0.5965,  ...,  0.2364,  0.5728, -0.0581],
        ...,
        [ 1.8722,  3.7346,  0.8224,  ...,  0.6619,  0.9244, -0.0444],
        [ 1.8678,  3.7338,  0.8192,  ...,  0.6430,  0.9128, -0.0459],
        [ 1.8676,  3.7350,  0.8192,  ...,  0.6431,  0.9123, -0.0470]],
       grad_fn=<SqueezeBackward0>)
torch.Size([762, 12])
tensor([[ 1.9069,  4.9115,  0.8774,  ...,  0.2947,  0.8212, -0.0947],
        [ 1.8958,  4.9110,  0.8771,  ...,  0.2892,  0.8246, -0.0676],
        [ 1.8890,  4.9186,  0.8775,  ...,  0.2869,  0.8299, -0.0522],
        ...,
        [ 1.8557,  4.8735,  1.1869,  ...,  0.3657,  0.6466, -0.0615],
        [ 1.8589,  4.8802,  1.1876,  ...,  0.3624,  0.5165, -0.0631],
        [ 1.8564,  4.8786,  1.1875,  ...,  0.3625,  0.5157, -0.0659]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1097, 12])
tensor([[1.9375, 6.7968, 1.1032,  ..., 0.2739, 0.6721, 0.8972],
        [1.8938, 6.7935, 1.1029,  ..., 0.2647, 0.6741, 0.9304],
        [1.8699, 6.8114, 1.1032,  ..., 0.2587, 0.6863, 0.9471],
        ...,
        [1.8591, 6.7960, 1.1747,  ..., 0.3017, 0.8895, 0.9295],
        [1.8603, 6.7968, 1.1747,  ..., 0.3016, 0.8902, 0.9291],
        [1.8608, 6.7968, 1.1747,  ..., 0.3016, 0.8903, 0.9287]],
       grad_fn=<SqueezeBackward0>)
torch.Size([792, 12])
tensor([[ 1.8421,  4.2212,  0.7508,  ...,  0.0785,  0.1927, -0.0964],
        [ 1.8287,  4.2207,  0.7504,  ...,  0.0729,  0.1957, -0.0808],
        [ 1.8177,  4.2254,  0.7503,  ...,  0.0699,  0.2023, -0.0725],
        ...,
        [ 1.7940,  3.8815,  1.0026,  ...,  0.0592,  0.3517, -0.0563],
        [ 1.7817,  3.7983,  1.0169,  ...,  0.0571,  0.2470, -0.0566],
        [ 1.7803,  3.7975,  1.0168,  ...,  0.0572,  0.2462, -0.0573]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1077, 12])
tensor([[1.8571, 6.9414, 0.9720,  ..., 0.0651, 0.3690, 0.8982],
        [1.8146, 6.9479, 0.9717,  ..., 0.0536, 0.3797, 0.9243],
        [1.7908, 6.9637, 0.9718,  ..., 0.0475, 0.3910, 0.9393],
        ...,
        [1.7096, 6.7867, 0.9916,  ..., 0.2298, 0.8980, 0.9290],
        [1.7094, 6.7858, 0.9916,  ..., 0.2298, 0.8977, 0.9289],
        [1.7113, 6.7901, 0.9917,  ..., 0.2295, 0.8994, 0.9294]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1237, 12])
tensor([[1.8111, 5.6611, 0.9340,  ..., 0.2333, 0.9551, 0.8960],
        [1.7820, 5.6689, 0.9338,  ..., 0.2244, 0.9637, 0.9294],
        [1.7591, 5.6721, 0.9341,  ..., 0.2210, 0.9647, 0.9588],
        ...,
        [1.7162, 5.5433, 0.8449,  ..., 0.3389, 0.7301, 0.9317],
        [1.7156, 5.5418, 0.8449,  ..., 0.3391, 0.7294, 0.9315],
        [1.7158, 5.5420, 0.8449,  ..., 0.3390, 0.7296, 0.9313]],
       grad_fn=<SqueezeBackward0>)
torch.Size([147, 12])
tensor([[ 1.6132,  3.9106,  0.6533,  ...,  0.2303,  0.3764, -0.0985],
        [ 1.6009,  3.9101,  0.6528,  ...,  0.2247,  0.3791, -0.0802],
        [ 1.5908,  3.9161,  0.6528,  ...,  0.2216,  0.3866, -0.0713],
        ...,
        [ 1.5905,  3.9712,  0.9383,  ...,  0.2435,  0.3786, -0.0653],
        [ 1.5897,  3.9675,  0.9489,  ...,  0.2430,  0.3787, -0.0634],
        [ 1.5896,  3.9672,  0.9489,  ...,  0.2429,  0.3792, -0.0624]],
       grad_fn=<SqueezeBackward0>)
torch.Size([807, 12])
tensor([[ 1.8986,  4.1662,  0.7667,  ...,  0.1559,  0.2531, -0.0982],
        [ 1.8841,  4.1674,  0.7661,  ...,  0.1496,  0.2623, -0.0918],
        [ 1.8725,  4.1735,  0.7660,  ...,  0.1461,  0.2685, -0.0823],
        ...,
        [ 1.5979,  3.8107,  0.9339,  ...,  0.4529,  0.4228, -0.0519],
        [ 1.5959,  3.7885,  0.9513,  ...,  0.4514,  0.4061, -0.0513],
        [ 1.5941,  3.7868,  0.9513,  ...,  0.4516,  0.4038, -0.0501]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1337, 12])
tensor([[ 1.9108,  5.0090,  0.9462,  ..., -0.0332,  0.2780,  0.8903],
        [ 1.8826,  4.9982,  0.9456,  ..., -0.0414,  0.2729,  0.9265],
        [ 1.8610,  5.0090,  0.9457,  ..., -0.0460,  0.2812,  0.9433],
        ...,
        [ 1.7615,  4.7642,  1.1010,  ...,  0.0779,  0.2664,  0.9327],
        [ 1.7631,  4.7655,  1.1010,  ...,  0.0777,  0.2675,  0.9323],
        [ 1.7635,  4.7660,  1.1010,  ...,  0.0776,  0.2676,  0.9324]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1277, 12])
tensor([[1.8491, 6.7117, 0.9832,  ..., 0.1151, 0.4840, 0.8999],
        [1.8083, 6.7172, 0.9829,  ..., 0.1041, 0.4937, 0.9270],
        [1.7830, 6.7270, 0.9830,  ..., 0.0992, 0.5018, 0.9396],
        ...,
        [1.6520, 6.8139, 0.9195,  ..., 0.3298, 1.3876, 0.9350],
        [1.6546, 6.8167, 0.9195,  ..., 0.3295, 1.3891, 0.9343],
        [1.6560, 6.8195, 0.9196,  ..., 0.3293, 1.3902, 0.9345]],
       grad_fn=<SqueezeBackward0>)
torch.Size([787, 12])
tensor([[ 1.9926,  4.9987,  0.7103,  ..., -0.0699,  0.6263, -0.0855],
        [ 1.9841,  4.9958,  0.7101,  ..., -0.0743,  0.6293, -0.0564],
        [ 1.9776,  4.9929,  0.7102,  ..., -0.0761,  0.6313, -0.0376],
        ...,
        [ 1.9930,  5.2991,  0.5655,  ...,  0.1306,  1.3567, -0.0413],
        [ 1.9932,  5.2983,  0.5655,  ...,  0.1182,  1.3567, -0.0409],
        [ 1.9935,  5.2985,  0.5656,  ...,  0.1181,  1.3571, -0.0409]],
       grad_fn=<SqueezeBackward0>)
torch.Size([15, 12])
tensor([[ 1.9501e+00,  4.4638e+00,  9.8261e-01,  1.1118e-01, -3.0713e-03,
          1.7324e-01,  1.3234e+00,  1.7658e-02, -5.6606e-02,  6.0927e-02,
          3.7844e-01,  8.8770e-01],
        [ 1.9235e+00,  4.4478e+00,  9.8197e-01,  1.1258e-01, -4.5945e-02,
          1.7482e-01,  1.3263e+00,  5.7669e-02, -2.3898e-02,  5.3383e-02,
          3.7048e-01,  9.2256e-01],
        [ 1.9053e+00,  4.4494e+00,  1.0198e+00,  9.8724e-02, -7.7766e-02,
          1.7613e-01,  1.4088e+00,  9.4763e-02,  8.3248e-03,  5.4501e-02,
          3.7186e-01,  9.3452e-01],
        [ 1.9006e+00,  4.4583e+00,  1.0200e+00,  9.2608e-02, -8.8939e-02,
          1.7629e-01,  1.4067e+00,  1.0686e-01,  2.0348e-02,  5.2233e-02,
          3.7977e-01,  9.3881e-01],
        [ 1.9115e+00,  4.4730e+00,  1.1095e+00,  9.3007e-02, -8.9141e-02,
          1.7575e-01,  1.5630e+00,  1.1252e-01,  1.5220e-02,  5.6245e-02,
          3.7535e-01,  9.3288e-01],
        [ 1.9120e+00,  4.4766e+00,  1.1096e+00,  9.4429e-02, -8.8481e-02,
          1.7532e-01,  1.5622e+00,  1.1253e-01,  1.3308e-02,  5.5685e-02,
          3.7944e-01,  9.3082e-01],
        [ 1.9087e+00,  4.4522e+00,  1.1735e+00,  9.1509e-02, -8.8345e-02,
          1.7508e-01,  1.8059e+00,  1.1706e-01,  9.1214e-03,  6.1267e-02,
          3.5775e-01,  9.2909e-01],
        [ 1.9064e+00,  4.4526e+00,  1.1736e+00,  9.3085e-02, -8.7640e-02,
          1.7487e-01,  1.8062e+00,  1.1861e-01,  6.6998e-03,  6.1287e-02,
          3.5868e-01,  9.2716e-01],
        [ 1.8912e+00,  4.3935e+00,  1.2442e+00,  9.0514e-02, -8.5854e-02,
          1.7457e-01,  1.9738e+00,  1.2011e-01,  5.0755e-03,  7.0346e-02,
          3.4939e-01,  9.2734e-01],
        [ 1.8884e+00,  4.3923e+00,  1.2442e+00,  9.1662e-02, -8.3981e-02,
          1.7445e-01,  1.9747e+00,  1.1923e-01,  3.3479e-03,  7.0472e-02,
          3.4734e-01,  9.2856e-01],
        [ 1.8716e+00,  4.3569e+00,  1.2950e+00,  9.0028e-02, -8.2769e-02,
          1.7440e-01,  2.0479e+00,  1.1965e-01,  4.3280e-04,  7.0768e-02,
          3.4088e-01,  9.2989e-01],
        [ 1.8685e+00,  4.3548e+00,  1.2951e+00,  9.1363e-02, -8.1456e-02,
          1.7434e-01,  2.0487e+00,  1.1953e-01, -1.4191e-03,  7.1006e-02,
          3.3852e-01,  9.3129e-01],
        [ 1.8102e+00,  4.3364e+00,  1.2438e+00,  9.1789e-02, -8.1561e-02,
          1.7449e-01,  1.7228e+00,  1.2017e-01, -2.9937e-03,  7.1252e-02,
          3.1924e-01,  9.3098e-01],
        [ 1.8100e+00,  4.3365e+00,  1.2439e+00,  9.2200e-02, -8.2397e-02,
          1.7454e-01,  1.7227e+00,  1.2099e-01, -3.7175e-03,  7.1246e-02,
          3.1986e-01,  9.3080e-01],
        [ 1.8097e+00,  4.3365e+00,  1.2439e+00,  9.2856e-02, -8.3523e-02,
          1.7457e-01,  1.8831e+00,  1.2315e-01, -4.6452e-03,  7.1305e-02,
          3.2116e-01,  9.2950e-01]], grad_fn=<SqueezeBackward0>)
torch.Size([830, 12])
tensor([[1.9273, 5.5547, 1.2126,  ..., 0.2964, 0.5804, 0.8917],
        [1.8902, 5.5445, 1.2121,  ..., 0.2880, 0.5767, 0.9263],
        [1.8646, 5.5563, 1.2122,  ..., 0.2826, 0.5853, 0.9466],
        ...,
        [1.2998, 3.5138, 0.5566,  ..., 1.0456, 0.4510, 0.9353],
        [1.2896, 3.5097, 0.5565,  ..., 1.0465, 0.4451, 0.9309],
        [1.2820, 3.5080, 0.5566,  ..., 1.0471, 0.4403, 0.9278]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1257, 12])
tensor([[1.8129, 6.2061, 0.9415,  ..., 0.0626, 0.5669, 0.8998],
        [1.7770, 6.2086, 0.9412,  ..., 0.0526, 0.5736, 0.9297],
        [1.7548, 6.2242, 0.9414,  ..., 0.0473, 0.5849, 0.9450],
        ...,
        [1.6648, 6.3689, 0.9193,  ..., 0.1469, 1.3116, 0.9360],
        [1.6637, 6.3650, 0.9192,  ..., 0.1471, 1.3101, 0.9353],
        [1.6647, 6.3651, 0.9192,  ..., 0.1470, 1.3104, 0.9346]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1197, 12])
tensor([[1.8979, 6.7168, 0.9197,  ..., 0.1963, 0.5045, 0.8986],
        [1.8589, 6.7228, 0.9193,  ..., 0.1854, 0.5154, 0.9241],
        [1.8354, 6.7407, 0.9196,  ..., 0.1793, 0.5282, 0.9405],
        ...,
        [1.7585, 6.4897, 0.8699,  ..., 0.2239, 0.8136, 0.9310],
        [1.7579, 6.4888, 0.8698,  ..., 0.2239, 0.8131, 0.9311],
        [1.7573, 6.4868, 0.8698,  ..., 0.2241, 0.8123, 0.9307]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1546, 12])
tensor([[1.3143, 6.5096, 0.9991,  ..., 0.1293, 0.4027, 0.8943],
        [1.2701, 6.5181, 0.9989,  ..., 0.1164, 0.4132, 0.9226],
        [1.2392, 6.5225, 0.9990,  ..., 0.1113, 0.4171, 0.9413],
        ...,
        [1.6637, 8.5289, 1.2985,  ..., 0.5031, 0.7405, 0.9300],
        [1.6611, 8.5258, 1.2985,  ..., 0.5035, 0.7396, 0.9302],
        [1.6609, 8.5253, 1.2985,  ..., 0.5034, 0.7399, 0.9299]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1277, 12])
tensor([[1.8344, 6.5148, 1.1139,  ..., 0.1169, 0.3386, 0.8921],
        [1.7918, 6.5282, 1.1135,  ..., 0.1027, 0.3551, 0.9194],
        [1.7623, 6.5344, 1.1136,  ..., 0.0982, 0.3610, 0.9317],
        ...,
        [1.6056, 5.7678, 1.5096,  ..., 0.1460, 0.2513, 0.9329],
        [1.6074, 5.7704, 1.5096,  ..., 0.1457, 0.2528, 0.9333],
        [1.6075, 5.7714, 1.5096,  ..., 0.1456, 0.2525, 0.9347]],
       grad_fn=<SqueezeBackward0>)
torch.Size([957, 12])
tensor([[1.7414, 5.5820, 1.1579,  ..., 0.2288, 0.3420, 0.8892],
        [1.7033, 5.5743, 1.1574,  ..., 0.2187, 0.3399, 0.9231],
        [1.6765, 5.5834, 1.1574,  ..., 0.2133, 0.3488, 0.9353],
        ...,
        [1.6489, 5.6400, 1.3176,  ..., 0.3095, 0.4486, 0.9329],
        [1.6500, 5.6409, 1.3176,  ..., 0.3094, 0.4495, 0.9323],
        [1.6504, 5.6404, 1.3175,  ..., 0.3095, 0.4494, 0.9317]],
       grad_fn=<SqueezeBackward0>)
torch.Size([947, 12])
tensor([[ 1.9170,  5.8450,  0.6348,  ...,  0.0474,  0.3302, -0.0955],
        [ 1.9040,  5.8419,  0.6342,  ...,  0.0408,  0.3365, -0.0807],
        [ 1.8966,  5.8502,  0.6343,  ...,  0.0373,  0.3446, -0.0689],
        ...,
        [ 1.8465,  4.3793,  0.9142,  ...,  0.6505,  0.7138, -0.0540],
        [ 1.8482,  4.3733,  0.9190,  ...,  0.6026,  0.6946, -0.0533],
        [ 1.8474,  4.3729,  0.9190,  ...,  0.6027,  0.6945, -0.0540]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1177, 12])
tensor([[1.8042, 5.4837, 0.8197,  ..., 0.2298, 0.9241, 0.8963],
        [1.7783, 5.4898, 0.8195,  ..., 0.2209, 0.9310, 0.9298],
        [1.7545, 5.4956, 0.8198,  ..., 0.2174, 0.9336, 0.9589],
        ...,
        [1.7175, 5.4533, 0.7542,  ..., 0.3796, 1.2056, 0.9348],
        [1.7171, 5.4514, 0.7542,  ..., 0.3797, 1.2047, 0.9344],
        [1.7175, 5.4523, 0.7542,  ..., 0.3796, 1.2053, 0.9344]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1147, 12])
tensor([[ 1.9493,  6.2328,  0.6658,  ...,  0.0511,  0.3046, -0.1022],
        [ 1.9340,  6.2305,  0.6653,  ...,  0.0438,  0.3097, -0.0856],
        [ 1.9225,  6.2352,  0.6653,  ...,  0.0403,  0.3154, -0.0741],
        ...,
        [ 1.8241,  4.4596,  1.1567,  ...,  0.2566,  0.2620, -0.0682],
        [ 1.8244,  4.4677,  1.1650,  ...,  0.2524,  0.2605, -0.0689],
        [ 1.8255,  4.4686,  1.1650,  ...,  0.2522,  0.2621, -0.0705]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1257, 12])
tensor([[ 1.8189,  6.1474,  1.1978,  ..., -0.0611,  0.3091,  0.8928],
        [ 1.7765,  6.1517,  1.1975,  ..., -0.0726,  0.3161,  0.9255],
        [ 1.7499,  6.1612,  1.1975,  ..., -0.0776,  0.3231,  0.9414],
        ...,
        [ 1.6848,  5.8696,  1.1013,  ...,  0.1603,  0.9841,  0.9375],
        [ 1.6858,  5.8695,  1.1012,  ...,  0.1603,  0.9844,  0.9365],
        [ 1.6868,  5.8689,  1.1012,  ...,  0.1603,  0.9845,  0.9355]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1317, 12])
tensor([[1.8519, 6.9097, 1.0671,  ..., 0.0761, 0.3406, 0.8957],
        [1.8066, 6.9087, 1.0668,  ..., 0.0658, 0.3446, 0.9262],
        [1.7805, 6.9174, 1.0668,  ..., 0.0607, 0.3522, 0.9379],
        ...,
        [1.6859, 6.0973, 0.8190,  ..., 0.2982, 0.8363, 0.9335],
        [1.6867, 6.0951, 0.8190,  ..., 0.2982, 0.8358, 0.9323],
        [1.6891, 6.0994, 0.8190,  ..., 0.2978, 0.8380, 0.9322]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1337, 12])
tensor([[1.8833, 6.2786, 1.0006,  ..., 0.0392, 0.3579, 0.8934],
        [1.8412, 6.2761, 1.0001,  ..., 0.0291, 0.3623, 0.9198],
        [1.8167, 6.2933, 1.0002,  ..., 0.0221, 0.3758, 0.9351],
        ...,
        [1.7435, 6.2171, 0.8541,  ..., 0.1751, 0.4904, 0.9301],
        [1.7419, 6.2121, 0.8540,  ..., 0.1755, 0.4882, 0.9293],
        [1.7439, 6.2149, 0.8540,  ..., 0.1751, 0.4900, 0.9289]],
       grad_fn=<SqueezeBackward0>)
torch.Size([497, 12])
tensor([[ 1.9786,  4.0371,  0.7231,  ...,  0.0284,  0.3484, -0.1017],
        [ 1.9658,  4.0384,  0.7227,  ...,  0.0231,  0.3513, -0.0864],
        [ 1.9544,  4.0428,  0.7227,  ...,  0.0203,  0.3571, -0.0783],
        ...,
        [ 1.9758,  4.2049,  0.7150,  ...,  0.1857,  1.0841, -0.0503],
        [ 1.9752,  4.2054,  0.7166,  ...,  0.1614,  1.1105, -0.0476],
        [ 1.9750,  4.2024,  0.7166,  ...,  0.1613,  1.1103, -0.0435]],
       grad_fn=<SqueezeBackward0>)
torch.Size([787, 12])
tensor([[ 1.9105,  4.6952,  0.7825,  ...,  0.1124,  0.4138, -0.0951],
        [ 1.8979,  4.6942,  0.7820,  ...,  0.1064,  0.4190, -0.0776],
        [ 1.8893,  4.7017,  0.7821,  ...,  0.1034,  0.4269, -0.0678],
        ...,
        [ 1.9448,  5.0892,  1.1361,  ...,  0.3844,  0.7187, -0.0603],
        [ 1.9368,  5.1002,  1.1588,  ...,  0.3973,  0.7247, -0.0600],
        [ 1.9335,  5.0965,  1.1587,  ...,  0.3976,  0.7222, -0.0615]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1197, 12])
tensor([[1.8245, 5.1061, 0.8877,  ..., 0.1279, 0.3797, 0.8934],
        [1.7994, 5.1003, 0.8873,  ..., 0.1192, 0.3774, 0.9279],
        [1.7767, 5.1084, 0.8874,  ..., 0.1152, 0.3842, 0.9419],
        ...,
        [1.7507, 5.0261, 0.9028,  ..., 0.1511, 0.5676, 0.9350],
        [1.7505, 5.0240, 0.9028,  ..., 0.1512, 0.5665, 0.9345],
        [1.7512, 5.0233, 0.9027,  ..., 0.1512, 0.5665, 0.9339]],
       grad_fn=<SqueezeBackward0>)
torch.Size([887, 12])
tensor([[ 1.9877,  4.5135,  0.4991,  ...,  0.2608,  0.9843, -0.0860],
        [ 1.9774,  4.5121,  0.4990,  ...,  0.2565,  0.9852, -0.0553],
        [ 1.9739,  4.5153,  0.4992,  ...,  0.2547,  0.9920, -0.0475],
        ...,
        [ 1.8896,  4.9862,  1.0775,  ...,  0.1428,  0.2968, -0.0698],
        [ 1.8877,  4.9904,  1.1068,  ...,  0.1415,  0.2824, -0.0680],
        [ 1.8855,  4.9881,  1.1068,  ...,  0.1418,  0.2806, -0.0672]],
       grad_fn=<SqueezeBackward0>)
torch.Size([348, 12])
tensor([[1.8048, 4.9370, 0.8873,  ..., 0.1311, 0.6574, 0.8947],
        [1.7799, 4.9270, 0.8868,  ..., 0.1237, 0.6538, 0.9287],
        [1.7584, 4.9362, 0.8871,  ..., 0.1193, 0.6594, 0.9557],
        ...,
        [1.8438, 6.1491, 0.6828,  ..., 0.3174, 1.5141, 0.9425],
        [1.8443, 6.1485, 0.6828,  ..., 0.3178, 1.5135, 0.9392],
        [1.8439, 6.1506, 0.6828,  ..., 0.3178, 1.5138, 0.9377]],
       grad_fn=<SqueezeBackward0>)
torch.Size([2157, 12])
tensor([[1.8123, 6.6362, 1.1596,  ..., 0.1242, 0.3910, 0.8989],
        [1.7720, 6.6501, 1.1594,  ..., 0.1112, 0.4060, 0.9287],
        [1.7463, 6.6622, 1.1596,  ..., 0.1063, 0.4143, 0.9435],
        ...,
        [1.7050, 6.5891, 0.9028,  ..., 0.2555, 1.1020, 0.9329],
        [1.7041, 6.5859, 0.9027,  ..., 0.2558, 1.1008, 0.9320],
        [1.7046, 6.5836, 0.9027,  ..., 0.2559, 1.1003, 0.9309]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1197, 12])
tensor([[1.8106, 5.0211, 0.9604,  ..., 0.1192, 0.5697, 0.8920],
        [1.7820, 5.0119, 0.9599,  ..., 0.1112, 0.5667, 0.9268],
        [1.7605, 5.0175, 0.9601,  ..., 0.1069, 0.5705, 0.9516],
        ...,
        [1.7408, 5.0671, 0.8929,  ..., 0.1768, 0.5697, 0.9353],
        [1.7419, 5.0688, 0.8929,  ..., 0.1766, 0.5707, 0.9351],
        [1.7424, 5.0669, 0.8929,  ..., 0.1767, 0.5700, 0.9343]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1097, 12])
tensor([[1.8302, 6.9110, 1.1095,  ..., 0.0620, 0.3800, 0.8975],
        [1.7839, 6.9051, 1.1092,  ..., 0.0528, 0.3801, 0.9285],
        [1.7597, 6.9182, 1.1092,  ..., 0.0467, 0.3905, 0.9413],
        ...,
        [1.6716, 6.5802, 0.8284,  ..., 0.5385, 1.9572, 0.9402],
        [1.6714, 6.5797, 0.8284,  ..., 0.5383, 1.9575, 0.9424],
        [1.6715, 6.5786, 0.8284,  ..., 0.5382, 1.9576, 0.9436]],
       grad_fn=<SqueezeBackward0>)
torch.Size([75, 12])
tensor([[ 1.8346e+00,  4.7249e+00,  1.3660e+00,  1.0342e-01,  8.3604e-03,
          1.5584e-01, -1.5116e+00, -6.3385e-02,  9.7253e-01, -3.4386e-02,
          2.3877e-01, -9.2387e-02],
        [ 1.8200e+00,  4.7111e+00,  1.3757e+00,  1.0371e-01, -2.7665e-02,
          1.5791e-01, -1.4041e+00, -3.6779e-02,  9.9641e-01, -3.8234e-02,
          2.4969e-01, -6.3504e-02],
        [ 1.7996e+00,  4.6847e+00,  1.3771e+00,  1.0014e-01, -5.1633e-02,
          1.5918e-01, -6.1082e-01, -1.3866e-02,  1.0092e+00, -4.2641e-02,
          2.3590e-01, -4.6090e-02],
        [ 1.7842e+00,  4.6495e+00,  1.3769e+00,  8.9005e-02, -7.1760e-02,
          1.6078e-01, -1.3046e+00,  4.9383e-03,  1.0198e+00, -4.7662e-02,
          2.4632e-01, -3.9102e-02],
        [ 1.7961e+00,  4.7073e+00,  1.3831e+00,  9.2749e-02, -7.2350e-02,
          1.5994e-01, -1.0571e+00,  9.3210e-03,  1.0219e+00, -4.5782e-02,
          2.7055e-01, -4.5358e-02],
        [ 1.8036e+00,  4.7140e+00,  1.3711e+00,  9.2350e-02, -7.3848e-02,
          1.5930e-01, -2.8008e-01,  1.1933e-02,  1.0215e+00, -4.5665e-02,
          2.5880e-01, -4.9531e-02],
        [ 1.8070e+00,  4.7280e+00,  1.3678e+00,  8.6287e-02, -7.5102e-02,
          1.5959e-01, -1.4953e+00,  9.1952e-03,  1.0220e+00, -4.2332e-02,
          2.4981e-01, -5.2105e-02],
        [ 1.8057e+00,  4.7080e+00,  1.3744e+00,  8.9723e-02, -7.7084e-02,
          1.5935e-01, -9.5189e-01,  1.0928e-02,  1.0226e+00, -3.9961e-02,
          2.6326e-01, -5.2900e-02],
        [ 1.8010e+00,  4.7039e+00,  1.3751e+00,  9.1857e-02, -7.6820e-02,
          1.5899e-01, -6.8806e-01,  9.1165e-03,  1.0269e+00, -4.1948e-02,
          2.7073e-01, -5.5238e-02],
        [ 1.7933e+00,  4.6369e+00,  1.3855e+00,  8.5891e-02, -7.7433e-02,
          1.5893e-01, -5.8312e-01,  8.6466e-03,  1.0261e+00, -4.5845e-02,
          2.5865e-01, -5.6034e-02],
        [ 1.7913e+00,  4.6324e+00,  1.3908e+00,  8.6322e-02, -7.6430e-02,
          1.5897e-01, -5.1319e-01,  8.5190e-03,  1.0283e+00, -4.5915e-02,
          2.5778e-01, -5.7211e-02],
        [ 1.8170e+00,  4.7677e+00,  1.3852e+00,  8.8407e-02, -7.8613e-02,
          1.5952e-01, -1.5895e+00,  8.5315e-03,  1.0253e+00, -4.5402e-02,
          2.5690e-01, -5.6491e-02],
        [ 1.8181e+00,  4.7549e+00,  1.3686e+00,  9.0083e-02, -7.9231e-02,
          1.5923e-01, -6.8027e-01,  8.0974e-03,  1.0280e+00, -4.2469e-02,
          2.6274e-01, -5.6232e-02],
        [ 1.8131e+00,  4.7338e+00,  1.3770e+00,  8.6938e-02, -7.8188e-02,
          1.5882e-01, -2.5777e-01,  8.5782e-03,  1.0304e+00, -3.9404e-02,
          2.4947e-01, -5.7970e-02],
        [ 1.8217e+00,  4.7503e+00,  1.3718e+00,  8.5944e-02, -7.7868e-02,
          1.5905e-01, -8.0310e-01,  7.3798e-03,  1.0303e+00, -4.4215e-02,
          2.5148e-01, -5.8858e-02],
        [ 1.8038e+00,  4.6973e+00,  1.3732e+00,  8.6885e-02, -7.6794e-02,
          1.5909e-01, -1.0137e+00,  3.6550e-03,  1.0304e+00, -3.9977e-02,
          2.4893e-01, -5.8949e-02],
        [ 1.8014e+00,  4.6488e+00,  1.3924e+00,  8.2667e-02, -7.8616e-02,
          1.5927e-01, -1.2714e+00,  5.5940e-03,  1.0290e+00, -3.7551e-02,
          2.5684e-01, -5.7339e-02],
        [ 1.8079e+00,  4.7262e+00,  1.3986e+00,  8.3485e-02, -8.0023e-02,
          1.5950e-01, -1.9022e+00,  5.3511e-03,  1.0267e+00, -3.9927e-02,
          2.5796e-01, -5.5747e-02],
        [ 1.8181e+00,  4.7135e+00,  1.3819e+00,  8.7606e-02, -8.0599e-02,
          1.5884e-01, -4.7530e-01,  7.4484e-03,  1.0289e+00, -4.2546e-02,
          2.4383e-01, -5.5614e-02],
        [ 1.8152e+00,  4.7242e+00,  1.3778e+00,  8.3190e-02, -8.0395e-02,
          1.5890e-01, -9.2066e-01,  8.2487e-03,  1.0290e+00, -4.2670e-02,
          2.5506e-01, -5.6928e-02],
        [ 1.8178e+00,  4.7374e+00,  1.3724e+00,  8.1208e-02, -7.9631e-02,
          1.5893e-01, -1.0427e+00,  6.8699e-03,  1.0307e+00, -4.3150e-02,
          2.5346e-01, -5.7568e-02],
        [ 1.8183e+00,  4.7275e+00,  1.3744e+00,  8.4992e-02, -7.8779e-02,
          1.5884e-01, -1.3298e+00,  5.5593e-03,  1.0326e+00, -4.5740e-02,
          2.6746e-01, -5.8068e-02],
        [ 1.8222e+00,  4.7664e+00,  1.3626e+00,  8.2150e-02, -7.9878e-02,
          1.5854e-01, -3.8931e-01,  6.5066e-03,  1.0319e+00, -4.3929e-02,
          2.6433e-01, -5.7816e-02],
        [ 1.8079e+00,  4.7457e+00,  1.3861e+00,  8.2538e-02, -7.9473e-02,
          1.5876e-01, -2.4751e-01,  8.9081e-03,  1.0302e+00, -3.9237e-02,
          2.7273e-01, -5.8076e-02],
        [ 1.8026e+00,  4.7086e+00,  1.3778e+00,  8.1313e-02, -7.8560e-02,
          1.5933e-01, -1.4165e+00,  6.7068e-03,  1.0291e+00, -4.0990e-02,
          2.7161e-01, -5.7520e-02],
        [ 1.8138e+00,  4.7466e+00,  1.3839e+00,  8.3573e-02, -8.0240e-02,
          1.5954e-01, -1.7834e+00,  7.5312e-03,  1.0260e+00, -4.3849e-02,
          2.7080e-01, -5.5533e-02],
        [ 1.7997e+00,  4.6923e+00,  1.3959e+00,  8.1210e-02, -8.2276e-02,
          1.5941e-01, -1.0220e+00,  8.7531e-03,  1.0237e+00, -4.2548e-02,
          2.5908e-01, -5.3977e-02],
        [ 1.8059e+00,  4.7159e+00,  1.3896e+00,  8.1186e-02, -8.4051e-02,
          1.5978e-01, -1.9968e+00,  1.2523e-02,  1.0188e+00, -4.3832e-02,
          2.6174e-01, -5.2889e-02],
        [ 1.8067e+00,  4.7241e+00,  1.3902e+00,  8.5228e-02, -8.5632e-02,
          1.5970e-01, -1.5850e+00,  1.4860e-02,  1.0173e+00, -4.2530e-02,
          2.6502e-01, -5.2024e-02],
        [ 1.8043e+00,  4.7091e+00,  1.3920e+00,  8.1805e-02, -8.5102e-02,
          1.5941e-01, -1.3710e+00,  1.4848e-02,  1.0189e+00, -3.8167e-02,
          2.5338e-01, -5.2816e-02],
        [ 1.8108e+00,  4.7573e+00,  1.3805e+00,  8.1495e-02, -8.4973e-02,
          1.5920e-01, -1.0994e+00,  1.6144e-02,  1.0201e+00, -3.8311e-02,
          2.6759e-01, -5.3905e-02],
        [ 1.8134e+00,  4.7376e+00,  1.3758e+00,  8.5036e-02, -8.3786e-02,
          1.5906e-01, -8.0620e-01,  1.5602e-02,  1.0226e+00, -4.0624e-02,
          2.6284e-01, -5.5283e-02],
        [ 1.7953e+00,  4.6541e+00,  1.3907e+00,  7.9466e-02, -8.1654e-02,
          1.5911e-01, -1.4902e+00,  1.0200e-02,  1.0250e+00, -3.9038e-02,
          2.5917e-01, -5.6340e-02],
        [ 1.8176e+00,  4.7960e+00,  1.3886e+00,  8.1410e-02, -8.3014e-02,
          1.5915e-01, -1.3154e+00,  1.3577e-02,  1.0241e+00, -4.0258e-02,
          2.5927e-01, -5.6095e-02],
        [ 1.8147e+00,  4.7470e+00,  1.3868e+00,  8.3254e-02, -8.2934e-02,
          1.5912e-01, -1.1880e+00,  1.2461e-02,  1.0248e+00, -3.9035e-02,
          2.5085e-01, -5.6204e-02],
        [ 1.8113e+00,  4.7371e+00,  1.3856e+00,  7.8471e-02, -8.3910e-02,
          1.5924e-01, -1.0412e+00,  1.4716e-02,  1.0225e+00, -3.8403e-02,
          2.6429e-01, -5.5480e-02],
        [ 1.8124e+00,  4.7623e+00,  1.3834e+00,  7.9619e-02, -8.2997e-02,
          1.5935e-01, -1.2775e+00,  1.3261e-02,  1.0237e+00, -3.5539e-02,
          2.5785e-01, -5.5566e-02],
        [ 1.8139e+00,  4.7623e+00,  1.3856e+00,  8.1421e-02, -8.1968e-02,
          1.5937e-01, -2.3891e+00,  1.0279e-02,  1.0226e+00, -3.6371e-02,
          2.6306e-01, -5.5378e-02],
        [ 1.8120e+00,  4.7291e+00,  1.3882e+00,  8.3093e-02, -8.4364e-02,
          1.5893e-01, -6.7448e-01,  1.4991e-02,  1.0220e+00, -3.9721e-02,
          2.6869e-01, -5.4107e-02],
        [ 1.7934e+00,  4.6665e+00,  1.3918e+00,  7.7568e-02, -8.4253e-02,
          1.5926e-01, -1.0635e+00,  1.4344e-02,  1.0207e+00, -3.9035e-02,
          2.6576e-01, -5.4066e-02],
        [ 1.7978e+00,  4.6717e+00,  1.3995e+00,  8.0677e-02, -8.1711e-02,
          1.5919e-01, -1.2447e+00,  1.3273e-02,  1.0241e+00, -3.7754e-02,
          2.5514e-01, -5.4901e-02],
        [ 1.8144e+00,  4.7862e+00,  1.3928e+00,  8.4214e-02, -8.1590e-02,
          1.5918e-01, -1.8036e+00,  1.3349e-02,  1.0241e+00, -3.3002e-02,
          2.5565e-01, -5.5484e-02],
        [ 1.8078e+00,  4.7114e+00,  1.3871e+00,  7.7770e-02, -8.4031e-02,
          1.5923e-01, -1.4496e+00,  1.4206e-02,  1.0214e+00, -3.9670e-02,
          2.7131e-01, -5.4619e-02],
        [ 1.7922e+00,  4.6859e+00,  1.3923e+00,  7.8005e-02, -8.5617e-02,
          1.5939e-01, -1.1099e+00,  1.4034e-02,  1.0189e+00, -4.3318e-02,
          2.6596e-01, -5.3514e-02],
        [ 1.8083e+00,  4.7827e+00,  1.3863e+00,  8.4756e-02, -8.3913e-02,
          1.5926e-01, -9.8190e-01,  1.7903e-02,  1.0225e+00, -4.0252e-02,
          2.7001e-01, -5.4700e-02],
        [ 1.8122e+00,  4.7119e+00,  1.3857e+00,  8.1777e-02, -8.3512e-02,
          1.5929e-01, -1.2705e+00,  1.5277e-02,  1.0214e+00, -4.0840e-02,
          2.5631e-01, -5.5060e-02],
        [ 1.7927e+00,  4.6517e+00,  1.3996e+00,  7.6024e-02, -8.3775e-02,
          1.5947e-01, -1.2329e+00,  1.1288e-02,  1.0201e+00, -3.8226e-02,
          2.5175e-01, -5.4291e-02],
        [ 1.7947e+00,  4.7381e+00,  1.4202e+00,  8.1252e-02, -8.6162e-02,
          1.6000e-01, -2.3907e+00,  2.0628e-02,  1.0135e+00, -3.3142e-02,
          2.6671e-01, -5.2317e-02],
        [ 1.8197e+00,  4.8398e+00,  1.4047e+00,  8.5976e-02, -8.7483e-02,
          1.5959e-01, -5.9945e-01,  2.3439e-02,  1.0153e+00, -3.6478e-02,
          2.6128e-01, -5.1862e-02],
        [ 1.8086e+00,  4.7290e+00,  1.4058e+00,  8.1942e-02, -8.3792e-02,
          1.5913e-01, -1.8621e-01,  2.0531e-02,  1.0199e+00, -3.5957e-02,
          2.4467e-01, -5.4772e-02],
        [ 1.7862e+00,  4.6154e+00,  1.4145e+00,  7.5754e-02, -8.0255e-02,
          1.5925e-01, -1.0744e+00,  1.2118e-02,  1.0233e+00, -4.0124e-02,
          2.4829e-01, -5.6652e-02],
        [ 1.8049e+00,  4.6990e+00,  1.4125e+00,  8.3923e-02, -8.1607e-02,
          1.5967e-01, -1.5878e+00,  1.5965e-02,  1.0207e+00, -4.0860e-02,
          2.5216e-01, -5.5260e-02],
        [ 1.8096e+00,  4.6652e+00,  1.3915e+00,  8.1648e-02, -8.0671e-02,
          1.5930e-01, -6.0544e-01,  1.2063e-02,  1.0244e+00, -3.5842e-02,
          2.4621e-01, -5.5338e-02],
        [ 1.7831e+00,  4.6002e+00,  1.4124e+00,  7.6568e-02, -7.8821e-02,
          1.5905e-01, -7.8534e-01,  6.3617e-03,  1.0273e+00, -3.6190e-02,
          2.5777e-01, -5.6678e-02],
        [ 1.7979e+00,  4.7369e+00,  1.4149e+00,  8.0533e-02, -8.0812e-02,
          1.5956e-01, -2.3870e+00,  1.4594e-02,  1.0229e+00, -4.0674e-02,
          2.6955e-01, -5.5803e-02],
        [ 1.8143e+00,  4.7548e+00,  1.3904e+00,  8.2720e-02, -8.5905e-02,
          1.5977e-01, -1.5427e+00,  1.5173e-02,  1.0175e+00, -4.1213e-02,
          2.5575e-01, -5.3013e-02],
        [ 1.7924e+00,  4.6950e+00,  1.4224e+00,  7.7196e-02, -8.8345e-02,
          1.6006e-01, -1.6356e+00,  2.0341e-02,  1.0123e+00, -3.8123e-02,
          2.6275e-01, -5.0830e-02],
        [ 1.8066e+00,  4.7317e+00,  1.4073e+00,  8.0035e-02, -8.7537e-02,
          1.5989e-01, -1.4343e+00,  2.0068e-02,  1.0130e+00, -4.0099e-02,
          2.4885e-01, -5.0734e-02],
        [ 1.8058e+00,  4.7352e+00,  1.4084e+00,  8.5120e-02, -8.4723e-02,
          1.5939e-01, -1.2918e+00,  1.9382e-02,  1.0184e+00, -3.6894e-02,
          2.6364e-01, -5.2816e-02],
        [ 1.8131e+00,  4.7413e+00,  1.4058e+00,  8.0125e-02, -8.3328e-02,
          1.5901e-01, -1.1179e+00,  1.7129e-02,  1.0216e+00, -3.0829e-02,
          2.5511e-01, -5.4852e-02],
        [ 1.8135e+00,  4.7302e+00,  1.4003e+00,  7.8115e-02, -8.1481e-02,
          1.5863e-01, -5.7379e-01,  1.6145e-02,  1.0271e+00, -3.2170e-02,
          2.6972e-01, -5.7131e-02],
        [ 1.8037e+00,  4.6942e+00,  1.3896e+00,  7.7392e-02, -7.9021e-02,
          1.5857e-01, -1.1743e+00,  1.0021e-02,  1.0320e+00, -3.6674e-02,
          2.6659e-01, -5.9170e-02],
        [ 1.8187e+00,  4.7575e+00,  1.3943e+00,  8.0845e-02, -7.9625e-02,
          1.5840e-01, -3.3088e-01,  1.2500e-02,  1.0311e+00, -3.8139e-02,
          2.6565e-01, -5.9015e-02],
        [ 1.8224e+00,  4.7592e+00,  1.3960e+00,  7.2917e-02, -7.8120e-02,
          1.5888e-01, -1.7269e+00,  6.3337e-03,  1.0327e+00, -3.8035e-02,
          2.6057e-01, -5.9202e-02],
        [ 1.8215e+00,  4.7612e+00,  1.3951e+00,  7.6534e-02, -8.1076e-02,
          1.5901e-01, -1.3788e+00,  9.6308e-03,  1.0282e+00, -3.7313e-02,
          2.6284e-01, -5.7111e-02],
        [ 1.8061e+00,  4.6881e+00,  1.3948e+00,  7.4802e-02, -8.2380e-02,
          1.5918e-01, -1.4085e+00,  7.0894e-03,  1.0259e+00, -3.5585e-02,
          2.6852e-01, -5.5755e-02],
        [ 1.8178e+00,  4.7645e+00,  1.4014e+00,  7.6594e-02, -8.4220e-02,
          1.5931e-01, -1.1518e+00,  1.4572e-02,  1.0223e+00, -3.1382e-02,
          2.5396e-01, -5.4512e-02],
        [ 1.8172e+00,  4.7643e+00,  1.4031e+00,  7.7715e-02, -8.5375e-02,
          1.5967e-01, -1.6224e+00,  1.5643e-02,  1.0187e+00, -3.1774e-02,
          2.5770e-01, -5.3387e-02],
        [ 1.8166e+00,  4.7545e+00,  1.3915e+00,  7.9031e-02, -8.5889e-02,
          1.5964e-01, -1.0363e+00,  1.7850e-02,  1.0174e+00, -3.6875e-02,
          2.6093e-01, -5.2460e-02],
        [ 1.7892e+00,  4.6620e+00,  1.4190e+00,  7.6201e-02, -8.4465e-02,
          1.5963e-01, -1.2209e+00,  1.5237e-02,  1.0178e+00, -3.2850e-02,
          2.6322e-01, -5.2662e-02],
        [ 1.8094e+00,  4.7518e+00,  1.4123e+00,  7.8994e-02, -8.4575e-02,
          1.5974e-01, -1.5644e+00,  1.9618e-02,  1.0168e+00, -3.8809e-02,
          2.6027e-01, -5.2579e-02],
        [ 1.8096e+00,  4.7373e+00,  1.4121e+00,  8.2322e-02, -8.3007e-02,
          1.5933e-01, -9.6998e-01,  1.7692e-02,  1.0213e+00, -3.2776e-02,
          2.6140e-01, -5.3868e-02],
        [ 1.7972e+00,  4.6616e+00,  1.4042e+00,  7.7427e-02, -8.1080e-02,
          1.5888e-01, -5.3905e-01,  1.3090e-02,  1.0245e+00, -3.4190e-02,
          2.6102e-01, -5.5697e-02],
        [ 1.8001e+00,  4.6536e+00,  1.4352e+00,  7.6635e-02, -7.9606e-02,
          1.5921e-01, -2.1729e+00,  1.2485e-02,  1.0249e+00, -3.8074e-02,
          2.4759e-01, -5.6462e-02],
        [ 1.8262e+00,  4.8331e+00,  1.4408e+00,  8.2579e-02, -8.1551e-02,
          1.5889e-01, -1.0016e+00,  1.7854e-02,  1.0265e+00, -3.8182e-02,
          2.5310e-01, -5.6228e-02]], grad_fn=<SqueezeBackward0>)
torch.Size([547, 12])
tensor([[ 1.8330,  3.5445,  0.6928,  ...,  0.0544,  0.5626, -0.0907],
        [ 1.8263,  3.5507,  0.6927,  ...,  0.0497,  0.5700, -0.0728],
        [ 1.8192,  3.5538,  0.6928,  ...,  0.0478,  0.5728, -0.0578],
        ...,
        [ 1.9101,  3.9158,  0.7748,  ...,  0.3540,  1.1656, -0.0366],
        [ 1.9068,  3.9022,  0.7770,  ...,  0.3717,  1.1688, -0.0338],
        [ 1.9071,  3.8983,  0.7769,  ...,  0.3717,  1.1686, -0.0313]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1197, 12])
tensor([[1.7945, 6.3919, 0.9187,  ..., 0.0864, 0.6647, 0.8947],
        [1.7559, 6.3930, 0.9184,  ..., 0.0770, 0.6694, 0.9269],
        [1.7301, 6.4003, 0.9186,  ..., 0.0725, 0.6734, 0.9520],
        ...,
        [1.7091, 6.0901, 0.8720,  ..., 0.1060, 0.6480, 0.9342],
        [1.7077, 6.0909, 0.8720,  ..., 0.1061, 0.6478, 0.9354],
        [1.7055, 6.0875, 0.8719,  ..., 0.1063, 0.6461, 0.9355]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1337, 12])
tensor([[1.8854, 6.3063, 0.9861,  ..., 0.0342, 0.3797, 0.8973],
        [1.8455, 6.3092, 0.9858,  ..., 0.0237, 0.3869, 0.9263],
        [1.8212, 6.3185, 0.9858,  ..., 0.0189, 0.3950, 0.9383],
        ...,
        [1.6832, 6.0322, 0.9475,  ..., 0.2779, 0.4198, 0.9275],
        [1.6827, 6.0308, 0.9475,  ..., 0.2782, 0.4190, 0.9273],
        [1.6833, 6.0329, 0.9475,  ..., 0.2779, 0.4201, 0.9276]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1337, 12])
tensor([[ 1.8707,  6.1714,  1.0180,  ...,  0.0542,  0.4757,  0.8942],
        [ 1.8307,  6.1773,  1.0177,  ...,  0.0428,  0.4844,  0.9267],
        [ 1.8052,  6.1900,  1.0178,  ...,  0.0377,  0.4938,  0.9415],
        ...,
        [ 1.7188,  6.0018,  1.0359,  ..., -0.0120,  0.4742,  0.9291],
        [ 1.7185,  6.0004,  1.0359,  ..., -0.0119,  0.4737,  0.9286],
        [ 1.7189,  5.9999,  1.0359,  ..., -0.0119,  0.4737,  0.9280]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1157, 12])
tensor([[1.9101, 6.8979, 1.1253,  ..., 0.1677, 0.7344, 0.8933],
        [1.8681, 6.9037, 1.1250,  ..., 0.1573, 0.7419, 0.9247],
        [1.8361, 6.9009, 1.1252,  ..., 0.1541, 0.7398, 0.9473],
        ...,
        [1.7642, 6.1279, 0.8421,  ..., 0.3867, 0.7050, 0.9315],
        [1.7649, 6.1265, 0.8421,  ..., 0.3868, 0.7047, 0.9306],
        [1.7671, 6.1312, 0.8422,  ..., 0.3863, 0.7071, 0.9308]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1077, 12])
tensor([[1.3215, 6.2466, 1.1148,  ..., 0.0888, 0.2939, 0.8881],
        [1.2708, 6.2470, 1.1145,  ..., 0.0768, 0.2980, 0.9197],
        [1.2402, 6.2553, 1.1145,  ..., 0.0702, 0.3054, 0.9371],
        ...,
        [1.6215, 8.1494, 1.8028,  ..., 0.6311, 0.4503, 0.9299],
        [1.6220, 8.1499, 1.8028,  ..., 0.6310, 0.4510, 0.9294],
        [1.6226, 8.1504, 1.8028,  ..., 0.6310, 0.4516, 0.9290]],
       grad_fn=<SqueezeBackward0>)
/usr/local/Caskroom/miniconda/base/envs/plasma-aug/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 due to no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
Traceback (most recent call last):
  File "/Users/dhruvachayapathy/personal/research/mit-research/plasma-data-augmentation/src/main.py", line 90, in <module>
    best_model = train_post_hoc(train_dataloader=train_dataloader, val_dataloader=test_dataloader, model=model,optim=adam,loss_fn=loss_fn, save_metric=save_metric, num_epochs=post_hoc_num_epochs)
  File "/Users/dhruvachayapathy/personal/research/mit-research/plasma-data-augmentation/src/train.py", line 42, in train_post_hoc
    accuracy, f1, auc = compute_metrics(out,labels)
  File "/Users/dhruvachayapathy/personal/research/mit-research/plasma-data-augmentation/src/eval.py", line 10, in compute_metrics
    return accuracy_score(labels, binary_out), f1_score(labels, binary_out), roc_auc_score(labels, binary_out)
  File "/usr/local/Caskroom/miniconda/base/envs/plasma-aug/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/Caskroom/miniconda/base/envs/plasma-aug/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "/usr/local/Caskroom/miniconda/base/envs/plasma-aug/lib/python3.10/site-packages/sklearn/metrics/_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "/usr/local/Caskroom/miniconda/base/envs/plasma-aug/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.