torch.Size([762, 12])
tensor([[1.8734, 2.9655, 0.8885,  ..., 0.2677, 0.1523, 0.1186],
        [1.8304, 2.9656, 0.9128,  ..., 0.2755, 0.1733, 0.1154],
        [1.7978, 2.9728, 0.9415,  ..., 0.2780, 0.1835, 0.1100],
        ...,
        [1.7249, 3.0447, 0.8978,  ..., 0.5858, 0.8423, 0.0927],
        [1.7282, 3.0343, 0.8923,  ..., 0.5970, 0.8468, 0.0925],
        [1.7296, 3.0355, 0.8924,  ..., 0.5990, 0.8459, 0.0916]],
       grad_fn=<SqueezeBackward0>)
torch.Size([219, 12])
tensor([[1.5037, 4.1026, 1.1559,  ..., 0.3208, 0.1841, 0.1206],
        [1.4095, 3.8742, 1.2243,  ..., 0.3238, 0.1784, 0.1193],
        [1.4023, 3.8827, 1.2586,  ..., 0.3175, 0.1684, 0.1181],
        ...,
        [1.4308, 3.4917, 1.3989,  ..., 0.2392, 0.2611, 0.1123],
        [1.4329, 3.5082, 1.3987,  ..., 0.2367, 0.2629, 0.1142],
        [1.4220, 3.5128, 1.4010,  ..., 0.2418, 0.2732, 0.1135]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1017, 12])
tensor([[1.6601, 5.0789, 0.9755,  ..., 0.3400, 0.4578, 1.1242],
        [1.6124, 5.0729, 1.0031,  ..., 0.3318, 0.4791, 1.1248],
        [1.5761, 5.0753, 1.0328,  ..., 0.3246, 0.4898, 1.1231],
        ...,
        [1.5047, 5.1145, 1.1125,  ..., 0.3142, 0.5763, 1.1180],
        [1.5051, 5.1178, 1.1139,  ..., 0.3182, 0.5747, 1.1167],
        [1.5057, 5.1193, 1.1132,  ..., 0.3199, 0.5737, 1.1162]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1277, 12])
tensor([[1.7014, 6.5507, 1.3018,  ..., 0.3191, 0.2932, 1.1340],
        [1.6529, 6.5512, 1.3388,  ..., 0.3129, 0.3059, 1.1340],
        [1.6191, 6.5574, 1.3715,  ..., 0.3049, 0.3140, 1.1329],
        ...,
        [1.4705, 6.6429, 1.1500,  ..., 0.6565, 1.4229, 1.1293],
        [1.4707, 6.6420, 1.1491,  ..., 0.6564, 1.4232, 1.1295],
        [1.4710, 6.6395, 1.1475,  ..., 0.6564, 1.4242, 1.1300]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1011, 12])
tensor([[1.7008, 5.7372, 1.1268,  ..., 0.3842, 0.6492, 1.1286],
        [1.6496, 5.7333, 1.1573,  ..., 0.3731, 0.6690, 1.1298],
        [1.6147, 5.7388, 1.1882,  ..., 0.3652, 0.6779, 1.1284],
        ...,
        [1.4895, 5.5907, 1.3001,  ..., 0.4598, 0.6588, 1.1236],
        [1.5195, 5.6971, 1.2569,  ..., 0.4551, 0.5472, 1.1235],
        [1.5191, 5.6976, 1.2579,  ..., 0.4540, 0.5473, 1.1235]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1157, 12])
tensor([[1.7504, 4.9661, 0.7786,  ..., 0.1322, 0.1400, 0.1236],
        [1.7018, 4.9598, 0.8080,  ..., 0.1276, 0.1609, 0.1251],
        [1.6700, 4.9591, 0.8417,  ..., 0.1236, 0.1690, 0.1235],
        ...,
        [1.5962, 4.7226, 1.4451,  ..., 0.0936, 0.4138, 0.1225],
        [1.6112, 4.7742, 1.4292,  ..., 0.0959, 0.4208, 0.1225],
        [1.6107, 4.7721, 1.4289,  ..., 0.0930, 0.4220, 0.1233]],
       grad_fn=<SqueezeBackward0>)
torch.Size([409, 12])
tensor([[1.4802, 7.4386, 0.9557,  ..., 0.0654, 0.3009, 1.1325],
        [1.4273, 7.4404, 0.9957,  ..., 0.0555, 0.3161, 1.1335],
        [1.3961, 7.4456, 1.0308,  ..., 0.0451, 0.3254, 1.1328],
        ...,
        [1.5798, 5.4728, 1.1848,  ..., 0.2442, 0.5481, 1.1238],
        [1.5405, 5.3785, 1.3071,  ..., 0.2456, 0.4875, 1.1235],
        [1.5398, 5.3769, 1.3075,  ..., 0.2436, 0.4881, 1.1242]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1197, 12])
tensor([[1.7474, 6.8007, 1.1364,  ..., 0.2666, 0.5020, 1.1343],
        [1.6929, 6.7988, 1.1717,  ..., 0.2548, 0.5198, 1.1361],
        [1.6588, 6.8042, 1.2059,  ..., 0.2456, 0.5289, 1.1353],
        ...,
        [1.5691, 6.5835, 1.3716,  ..., 0.2253, 0.8018, 1.1303],
        [1.5691, 6.5828, 1.3714,  ..., 0.2254, 0.8021, 1.1304],
        [1.5691, 6.5824, 1.3715,  ..., 0.2255, 0.8023, 1.1304]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1177, 12])
tensor([[ 1.7582e+00,  6.5122e+00,  1.1923e+00,  ...,  6.3018e-02,
          3.5243e-01,  1.1334e+00],
        [ 1.7052e+00,  6.5138e+00,  1.2289e+00,  ...,  5.4855e-02,
          3.6738e-01,  1.1341e+00],
        [ 1.6730e+00,  6.5233e+00,  1.2627e+00,  ...,  4.9512e-02,
          3.7327e-01,  1.1321e+00],
        ...,
        [ 1.4768e+00,  5.7529e+00,  1.4934e+00,  ..., -2.6575e-03,
          3.7791e-01,  1.1268e+00],
        [ 1.4765e+00,  5.7509e+00,  1.4930e+00,  ..., -5.1657e-03,
          3.7901e-01,  1.1275e+00],
        [ 1.4764e+00,  5.7521e+00,  1.4944e+00,  ..., -3.6250e-03,
          3.7850e-01,  1.1271e+00]], grad_fn=<SqueezeBackward0>)
torch.Size([887, 12])
tensor([[1.8305, 5.6103, 0.7129,  ..., 0.2202, 0.1612, 0.1272],
        [1.7802, 5.6056, 0.7464,  ..., 0.2164, 0.1792, 0.1287],
        [1.7483, 5.6060, 0.7829,  ..., 0.2128, 0.1865, 0.1271],
        ...,
        [1.6830, 6.4888, 1.1120,  ..., 0.2550, 1.2466, 0.1323],
        [1.6752, 6.0572, 1.0948,  ..., 0.2220, 0.9446, 0.1320],
        [1.6750, 6.0581, 1.0957,  ..., 0.2221, 0.9450, 0.1313]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1197, 12])
tensor([[1.7251, 6.7263, 0.7408,  ..., 0.4784, 1.4021, 1.1320],
        [1.6708, 6.7247, 0.7735,  ..., 0.4639, 1.4204, 1.1338],
        [1.6353, 6.7298, 0.8057,  ..., 0.4513, 1.4305, 1.1334],
        ...,
        [1.5555, 6.6976, 0.9306,  ..., 0.7353, 1.1864, 1.1290],
        [1.5560, 6.6965, 0.9289,  ..., 0.7350, 1.1866, 1.1293],
        [1.5561, 6.6957, 0.9284,  ..., 0.7350, 1.1869, 1.1294]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1149, 12])
tensor([[1.7784, 6.9603, 1.0906,  ..., 0.2238, 0.3825, 1.1337],
        [1.7282, 6.9633, 1.1277,  ..., 0.2175, 0.3947, 1.1338],
        [1.6946, 6.9686, 1.1604,  ..., 0.2074, 0.4036, 1.1332],
        ...,
        [1.4177, 7.4450, 1.9469,  ..., 0.9724, 0.3178, 1.1293],
        [1.4180, 7.4459, 1.9442,  ..., 0.9716, 0.3170, 1.1293],
        [1.4180, 7.4477, 1.9448,  ..., 0.9717, 0.3168, 1.1286]],
       grad_fn=<SqueezeBackward0>)
torch.Size([797, 12])
tensor([[1.2923, 4.6789, 1.0041,  ..., 0.3013, 0.3207, 0.1267],
        [1.2477, 4.6764, 1.0351,  ..., 0.3014, 0.3376, 0.1268],
        [1.2159, 4.6746, 1.0681,  ..., 0.2951, 0.3470, 0.1260],
        ...,
        [1.1513, 4.3102, 1.6107,  ..., 0.3317, 0.2382, 0.1197],
        [1.1513, 4.3205, 1.4824,  ..., 0.3256, 0.3047, 0.1209],
        [1.1511, 4.3208, 1.4832,  ..., 0.3260, 0.3046, 0.1208]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1257, 12])
tensor([[1.7326, 5.6496, 1.0380,  ..., 0.2637, 0.3672, 1.1280],
        [1.6848, 5.6455, 1.0711,  ..., 0.2561, 0.3837, 1.1282],
        [1.6496, 5.6533, 1.1031,  ..., 0.2515, 0.3909, 1.1260],
        ...,
        [1.4947, 5.3968, 1.2190,  ..., 0.2619, 0.6455, 1.1198],
        [1.4951, 5.3978, 1.2186,  ..., 0.2631, 0.6449, 1.1194],
        [1.4951, 5.3966, 1.2175,  ..., 0.2616, 0.6454, 1.1200]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1058, 12])
tensor([[1.7384, 4.6260, 0.8052,  ..., 0.4527, 1.0676, 1.1210],
        [1.6985, 4.6227, 0.8259,  ..., 0.4466, 1.0886, 1.1189],
        [1.6652, 4.6202, 0.8453,  ..., 0.4367, 1.1044, 1.1169],
        ...,
        [1.3292, 4.0944, 1.4709,  ..., 0.7766, 0.4198, 1.1133],
        [1.3343, 4.0404, 1.4190,  ..., 0.7744, 0.4032, 1.1115],
        [1.3340, 4.0390, 1.4181,  ..., 0.7728, 0.4036, 1.1122]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1237, 12])
tensor([[1.6884, 5.7339, 1.1838,  ..., 0.2972, 0.3764, 1.1281],
        [1.6363, 5.7279, 1.2145,  ..., 0.2863, 0.3975, 1.1299],
        [1.5988, 5.7296, 1.2469,  ..., 0.2766, 0.4092, 1.1296],
        ...,
        [1.4812, 5.6191, 1.4222,  ..., 0.2831, 0.4383, 1.1227],
        [1.4814, 5.6199, 1.4223,  ..., 0.2842, 0.4379, 1.1224],
        [1.4815, 5.6198, 1.4217,  ..., 0.2839, 0.4379, 1.1225]],
       grad_fn=<SqueezeBackward0>)
torch.Size([75, 12])
tensor([[ 1.6375,  4.6367,  1.4478,  0.1008, -0.1071, -0.1749, -1.7243,  0.1500,
          1.1412,  0.2072,  0.2068,  0.1273],
        [ 1.5947,  4.6374,  1.4575,  0.0893, -0.1088, -0.1748, -1.5350,  0.1381,
          1.1433,  0.1961,  0.2324,  0.1285],
        [ 1.5690,  4.6874,  1.4745,  0.0807, -0.1099, -0.1747, -0.9094,  0.1266,
          1.1453,  0.1782,  0.2587,  0.1295],
        [ 1.5429,  4.6675,  1.5066,  0.0726, -0.1122, -0.1746, -1.3691,  0.1254,
          1.1442,  0.1759,  0.2626,  0.1279],
        [ 1.5313,  4.6827,  1.5174,  0.0665, -0.1126, -0.1744, -1.1360,  0.1198,
          1.1447,  0.1624,  0.2715,  0.1278],
        [ 1.5190,  4.6624,  1.5406,  0.0641, -0.1129, -0.1742, -1.1176,  0.1165,
          1.1447,  0.1578,  0.2544,  0.1274],
        [ 1.5102,  4.6502,  1.5555,  0.0611, -0.1141, -0.1742, -1.1586,  0.1186,
          1.1435,  0.1546,  0.2497,  0.1261],
        [ 1.5077,  4.6601,  1.5607,  0.0576, -0.1151, -0.1741, -0.8998,  0.1212,
          1.1427,  0.1515,  0.2523,  0.1253],
        [ 1.5039,  4.6661,  1.5691,  0.0559, -0.1152, -0.1740, -0.5490,  0.1210,
          1.1429,  0.1439,  0.2513,  0.1255],
        [ 1.5034,  4.6665,  1.5694,  0.0582, -0.1144, -0.1739, -1.4649,  0.1148,
          1.1439,  0.1409,  0.2499,  0.1261],
        [ 1.5002,  4.6674,  1.5773,  0.0539, -0.1152, -0.1739, -1.5541,  0.1178,
          1.1429,  0.1408,  0.2527,  0.1249],
        [ 1.5059,  4.6927,  1.5581,  0.0523, -0.1163, -0.1739, -0.5284,  0.1208,
          1.1422,  0.1388,  0.2636,  0.1244],
        [ 1.4985,  4.6442,  1.5773,  0.0553, -0.1154, -0.1738, -1.0264,  0.1147,
          1.1440,  0.1340,  0.2471,  0.1258],
        [ 1.4986,  4.6559,  1.5884,  0.0552, -0.1164, -0.1738, -1.4609,  0.1191,
          1.1427,  0.1357,  0.2365,  0.1245],
        [ 1.4981,  4.6285,  1.5897,  0.0581, -0.1156, -0.1738, -1.0713,  0.1142,
          1.1441,  0.1339,  0.2447,  0.1255],
        [ 1.4948,  4.6246,  1.5885,  0.0567, -0.1155, -0.1737, -0.8643,  0.1129,
          1.1444,  0.1320,  0.2480,  0.1258],
        [ 1.4939,  4.6015,  1.5905,  0.0561, -0.1163, -0.1738, -0.8057,  0.1172,
          1.1432,  0.1330,  0.2348,  0.1249],
        [ 1.4991,  4.6329,  1.5880,  0.0529, -0.1162, -0.1738, -1.6512,  0.1169,
          1.1434,  0.1344,  0.2558,  0.1249],
        [ 1.5079,  4.6623,  1.5709,  0.0557, -0.1163, -0.1738, -0.9511,  0.1154,
          1.1437,  0.1336,  0.2585,  0.1251],
        [ 1.5043,  4.6820,  1.5794,  0.0514, -0.1173, -0.1738, -0.7200,  0.1208,
          1.1426,  0.1352,  0.2606,  0.1243],
        [ 1.5045,  4.6633,  1.5901,  0.0512, -0.1181, -0.1738, -1.2450,  0.1241,
          1.1419,  0.1341,  0.2480,  0.1236],
        [ 1.5060,  4.6514,  1.5930,  0.0526, -0.1190, -0.1739, -1.3529,  0.1255,
          1.1414,  0.1309,  0.2384,  0.1230],
        [ 1.5059,  4.6259,  1.5966,  0.0611, -0.1178, -0.1737, -0.6156,  0.1172,
          1.1440,  0.1315,  0.2383,  0.1251],
        [ 1.5087,  4.6546,  1.5989,  0.0585, -0.1169, -0.1737, -1.5274,  0.1137,
          1.1446,  0.1317,  0.2453,  0.1255],
        [ 1.5100,  4.6231,  1.5909,  0.0564, -0.1170, -0.1737, -1.4928,  0.1143,
          1.1441,  0.1316,  0.2544,  0.1249],
        [ 1.5152,  4.6586,  1.5861,  0.0537, -0.1184, -0.1738, -1.1269,  0.1203,
          1.1428,  0.1287,  0.2540,  0.1237],
        [ 1.5114,  4.6457,  1.5936,  0.0579, -0.1183, -0.1738, -0.8436,  0.1185,
          1.1436,  0.1313,  0.2544,  0.1244],
        [ 1.5156,  4.6571,  1.5877,  0.0590, -0.1182, -0.1738, -1.0565,  0.1186,
          1.1437,  0.1317,  0.2576,  0.1246],
        [ 1.5113,  4.6059,  1.6023,  0.0629, -0.1170, -0.1737, -0.8168,  0.1134,
          1.1450,  0.1257,  0.2442,  0.1259],
        [ 1.5082,  4.5738,  1.6195,  0.0613, -0.1179, -0.1737, -1.2598,  0.1173,
          1.1435,  0.1292,  0.2205,  0.1246],
        [ 1.5038,  4.5741,  1.6412,  0.0600, -0.1175, -0.1737, -0.4793,  0.1187,
          1.1438,  0.1336,  0.2195,  0.1252],
        [ 1.5031,  4.5921,  1.6295,  0.0558, -0.1167, -0.1737, -0.4402,  0.1176,
          1.1441,  0.1326,  0.2450,  0.1259],
        [ 1.5118,  4.6149,  1.6173,  0.0587, -0.1161, -0.1736, -1.3408,  0.1149,
          1.1440,  0.1250,  0.2297,  0.1258],
        [ 1.5142,  4.6084,  1.6113,  0.0577, -0.1164, -0.1737, -2.2036,  0.1152,
          1.1434,  0.1275,  0.2409,  0.1247],
        [ 1.5149,  4.6213,  1.6076,  0.0564, -0.1158, -0.1737, -0.9860,  0.1103,
          1.1450,  0.1284,  0.2583,  0.1258],
        [ 1.5154,  4.6080,  1.6130,  0.0598, -0.1160, -0.1737, -0.4072,  0.1115,
          1.1450,  0.1301,  0.2365,  0.1259],
        [ 1.5031,  4.5330,  1.6303,  0.0625, -0.1147, -0.1736, -1.2742,  0.1046,
          1.1462,  0.1221,  0.2312,  0.1269],
        [ 1.5123,  4.5982,  1.6178,  0.0574, -0.1149, -0.1737, -1.3650,  0.1096,
          1.1450,  0.1279,  0.2496,  0.1261],
        [ 1.5153,  4.6087,  1.6178,  0.0572, -0.1145, -0.1737, -1.2297,  0.1072,
          1.1453,  0.1228,  0.2488,  0.1263],
        [ 1.5165,  4.6337,  1.6141,  0.0541, -0.1161, -0.1738, -0.9809,  0.1150,
          1.1436,  0.1287,  0.2478,  0.1249],
        [ 1.5133,  4.6168,  1.6250,  0.0568, -0.1169, -0.1738, -0.9518,  0.1192,
          1.1430,  0.1315,  0.2400,  0.1245],
        [ 1.5179,  4.6217,  1.6113,  0.0522, -0.1182, -0.1739, -1.0240,  0.1230,
          1.1421,  0.1366,  0.2469,  0.1236],
        [ 1.5143,  4.6226,  1.6251,  0.0531, -0.1190, -0.1739, -0.5016,  0.1263,
          1.1418,  0.1344,  0.2375,  0.1235],
        [ 1.5061,  4.6006,  1.6416,  0.0524, -0.1196, -0.1738, -0.5781,  0.1291,
          1.1413,  0.1363,  0.2286,  0.1233],
        [ 1.5136,  4.5959,  1.6180,  0.0590, -0.1178, -0.1737, -0.9371,  0.1201,
          1.1436,  0.1286,  0.2251,  0.1253],
        [ 1.5132,  4.6141,  1.6246,  0.0589, -0.1161, -0.1736, -0.5450,  0.1153,
          1.1447,  0.1264,  0.2363,  0.1264],
        [ 1.5127,  4.6138,  1.6267,  0.0570, -0.1142, -0.1735, -1.4498,  0.1081,
          1.1456,  0.1225,  0.2506,  0.1272],
        [ 1.5196,  4.6471,  1.6111,  0.0527, -0.1144, -0.1736, -1.6906,  0.1124,
          1.1442,  0.1281,  0.2471,  0.1259],
        [ 1.5188,  4.6241,  1.6165,  0.0512, -0.1158, -0.1737, -0.9717,  0.1161,
          1.1431,  0.1320,  0.2488,  0.1248],
        [ 1.5114,  4.5994,  1.6305,  0.0514, -0.1168, -0.1738, -0.9835,  0.1197,
          1.1429,  0.1291,  0.2344,  0.1245],
        [ 1.5147,  4.6106,  1.6371,  0.0505, -0.1180, -0.1738, -1.1453,  0.1225,
          1.1424,  0.1355,  0.2240,  0.1237],
        [ 1.5175,  4.5845,  1.6181,  0.0573, -0.1173, -0.1738, -0.5232,  0.1183,
          1.1439,  0.1314,  0.2222,  0.1251],
        [ 1.5080,  4.5710,  1.6402,  0.0566, -0.1168, -0.1737, -1.3358,  0.1137,
          1.1444,  0.1276,  0.2342,  0.1254],
        [ 1.5184,  4.6149,  1.6167,  0.0550, -0.1160, -0.1737, -1.5537,  0.1116,
          1.1449,  0.1300,  0.2400,  0.1257],
        [ 1.5224,  4.6351,  1.6092,  0.0546, -0.1160, -0.1737, -0.8695,  0.1129,
          1.1447,  0.1274,  0.2543,  0.1256],
        [ 1.5186,  4.6205,  1.6113,  0.0533, -0.1166, -0.1737, -0.9656,  0.1157,
          1.1440,  0.1327,  0.2532,  0.1252],
        [ 1.5174,  4.6169,  1.6193,  0.0507, -0.1180, -0.1738, -1.1648,  0.1205,
          1.1424,  0.1360,  0.2432,  0.1238],
        [ 1.5201,  4.6321,  1.6176,  0.0505, -0.1182, -0.1738, -1.6647,  0.1209,
          1.1430,  0.1348,  0.2484,  0.1239],
        [ 1.5180,  4.6209,  1.6108,  0.0537, -0.1177, -0.1738, -0.8456,  0.1157,
          1.1445,  0.1309,  0.2611,  0.1250],
        [ 1.5215,  4.6433,  1.6146,  0.0522, -0.1187, -0.1738, -0.5631,  0.1204,
          1.1430,  0.1338,  0.2520,  0.1241],
        [ 1.5242,  4.6471,  1.6168,  0.0487, -0.1200, -0.1739, -2.1237,  0.1259,
          1.1415,  0.1380,  0.2406,  0.1224],
        [ 1.5262,  4.6527,  1.6015,  0.0527, -0.1191, -0.1738, -1.3579,  0.1181,
          1.1440,  0.1296,  0.2506,  0.1241],
        [ 1.5193,  4.6322,  1.6112,  0.0554, -0.1192, -0.1738, -0.6693,  0.1177,
          1.1443,  0.1362,  0.2546,  0.1245],
        [ 1.5213,  4.6460,  1.6135,  0.0537, -0.1193, -0.1738, -0.8146,  0.1210,
          1.1436,  0.1329,  0.2502,  0.1242],
        [ 1.5190,  4.6117,  1.6173,  0.0521, -0.1193, -0.1738, -1.2225,  0.1212,
          1.1432,  0.1345,  0.2476,  0.1240],
        [ 1.5222,  4.6463,  1.6171,  0.0521, -0.1190, -0.1738, -0.6736,  0.1224,
          1.1432,  0.1332,  0.2500,  0.1243],
        [ 1.5169,  4.6200,  1.6283,  0.0549, -0.1181, -0.1737, -1.0792,  0.1188,
          1.1439,  0.1319,  0.2460,  0.1250],
        [ 1.5179,  4.6421,  1.6311,  0.0523, -0.1181, -0.1737, -0.9554,  0.1215,
          1.1431,  0.1324,  0.2327,  0.1245],
        [ 1.5159,  4.6107,  1.6358,  0.0474, -0.1182, -0.1738, -1.0833,  0.1218,
          1.1428,  0.1359,  0.2382,  0.1243],
        [ 1.5203,  4.6433,  1.6232,  0.0496, -0.1182, -0.1738, -1.4259,  0.1209,
          1.1430,  0.1335,  0.2359,  0.1242],
        [ 1.5189,  4.6227,  1.6240,  0.0520, -0.1181, -0.1738, -1.3952,  0.1189,
          1.1435,  0.1337,  0.2439,  0.1243],
        [ 1.5193,  4.6157,  1.6338,  0.0520, -0.1174, -0.1737, -1.2775,  0.1132,
          1.1449,  0.1325,  0.2403,  0.1252],
        [ 1.5170,  4.5978,  1.6465,  0.0535, -0.1180, -0.1738, -0.4935,  0.1173,
          1.1440,  0.1322,  0.2210,  0.1247],
        [ 1.5179,  4.5891,  1.6513,  0.0565, -0.1169, -0.1737, -1.5803,  0.1119,
          1.1452,  0.1339,  0.2057,  0.1256],
        [ 1.5207,  4.6106,  1.6366,  0.0485, -0.1173, -0.1738, -1.4380,  0.1152,
          1.1441,  0.1380,  0.2395,  0.1246]], grad_fn=<SqueezeBackward0>)
torch.Size([787, 12])
tensor([[1.8700, 5.1096, 0.8019,  ..., 0.1179, 0.6459, 0.1234],
        [1.8239, 5.1006, 0.8288,  ..., 0.1078, 0.6675, 0.1252],
        [1.7893, 5.1011, 0.8571,  ..., 0.1001, 0.6769, 0.1248],
        ...,
        [1.6844, 5.0526, 1.0235,  ..., 0.1662, 0.9836, 0.1206],
        [1.6803, 5.0740, 1.0309,  ..., 0.1697, 0.9766, 0.1201],
        [1.6806, 5.0719, 1.0289,  ..., 0.1683, 0.9773, 0.1206]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1257, 12])
tensor([[1.7162, 6.0728, 1.1144,  ..., 0.2375, 0.2420, 1.1297],
        [1.6680, 6.0698, 1.1504,  ..., 0.2312, 0.2564, 1.1300],
        [1.6327, 6.0707, 1.1865,  ..., 0.2206, 0.2661, 1.1295],
        ...,
        [1.4339, 5.3531, 1.5514,  ..., 0.4004, 0.3883, 1.1222],
        [1.4341, 5.3548, 1.5520,  ..., 0.4026, 0.3874, 1.1216],
        [1.4339, 5.3522, 1.5506,  ..., 0.3992, 0.3886, 1.1227]],
       grad_fn=<SqueezeBackward0>)
torch.Size([772, 12])
tensor([[1.8012, 4.2584, 0.7313,  ..., 0.4232, 1.0788, 0.1190],
        [1.7629, 4.2538, 0.7501,  ..., 0.4191, 1.0979, 0.1186],
        [1.7326, 4.2506, 0.7702,  ..., 0.4105, 1.1092, 0.1175],
        ...,
        [1.6469, 4.2137, 0.8708,  ..., 0.2758, 0.9657, 0.1104],
        [1.6462, 4.2112, 0.8708,  ..., 0.2727, 0.9670, 0.1113],
        [1.6461, 4.2128, 0.8728,  ..., 0.2750, 0.9665, 0.1104]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1257, 12])
tensor([[1.6948, 5.3344, 1.1308,  ..., 0.3473, 0.3678, 1.1254],
        [1.6464, 5.3284, 1.1600,  ..., 0.3391, 0.3878, 1.1263],
        [1.6091, 5.3296, 1.1912,  ..., 0.3305, 0.3992, 1.1255],
        ...,
        [1.4407, 4.9513, 1.7323,  ..., 0.4482, 0.2994, 1.1149],
        [1.4408, 4.9510, 1.7315,  ..., 0.4477, 0.2995, 1.1151],
        [1.4401, 4.9470, 1.7301,  ..., 0.4426, 0.3015, 1.1169]],
       grad_fn=<SqueezeBackward0>)
torch.Size([812, 12])
tensor([[1.7446, 4.8585, 0.7737,  ..., 0.2543, 0.1863, 0.1212],
        [1.6984, 4.8550, 0.8034,  ..., 0.2541, 0.2037, 0.1218],
        [1.6658, 4.8551, 0.8370,  ..., 0.2511, 0.2117, 0.1201],
        ...,
        [1.5754, 4.9166, 1.1587,  ..., 0.3343, 0.8089, 0.1219],
        [1.5718, 4.8939, 1.1845,  ..., 0.3355, 0.7674, 0.1209],
        [1.5719, 4.8900, 1.1817,  ..., 0.3300, 0.7698, 0.1222]],
       grad_fn=<SqueezeBackward0>)
torch.Size([787, 12])
tensor([[1.7740, 4.6159, 0.8560,  ..., 0.3644, 0.4022, 0.1213],
        [1.7333, 4.6129, 0.8811,  ..., 0.3645, 0.4189, 0.1209],
        [1.6983, 4.6076, 0.9091,  ..., 0.3542, 0.4313, 0.1214],
        ...,
        [1.6570, 4.9543, 1.0632,  ..., 0.6154, 1.0794, 0.1185],
        [1.6508, 4.9912, 1.0372,  ..., 0.6120, 1.1241, 0.1178],
        [1.6514, 4.9903, 1.0350,  ..., 0.6121, 1.1246, 0.1174]],
       grad_fn=<SqueezeBackward0>)
torch.Size([201, 12])
tensor([[1.8884, 3.0665, 0.8489,  ..., 0.2725, 0.3569, 0.1192],
        [1.8521, 3.0636, 0.8660,  ..., 0.2772, 0.3799, 0.1166],
        [1.8171, 3.0594, 0.8857,  ..., 0.2745, 0.3954, 0.1146],
        ...,
        [1.6442, 2.9745, 1.0864,  ..., 0.1083, 0.3635, 0.1048],
        [1.6449, 2.9734, 1.0933,  ..., 0.1068, 0.3202, 0.1054],
        [1.6413, 2.9739, 1.0595,  ..., 0.1096, 0.3049, 0.1040]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1317, 12])
tensor([[1.7552, 7.2329, 1.1938,  ..., 0.3783, 0.4293, 1.1337],
        [1.7009, 7.2333, 1.2318,  ..., 0.3684, 0.4454, 1.1350],
        [1.6669, 7.2379, 1.2675,  ..., 0.3580, 0.4554, 1.1345],
        ...,
        [1.4853, 6.2601, 0.9581,  ..., 0.5683, 1.3319, 1.1274],
        [1.4858, 6.2582, 0.9559,  ..., 0.5681, 1.3326, 1.1278],
        [1.4862, 6.2549, 0.9540,  ..., 0.5681, 1.3338, 1.1284]],
       grad_fn=<SqueezeBackward0>)
torch.Size([587, 12])
tensor([[1.8748, 5.1877, 0.8952,  ..., 0.2003, 0.1779, 0.1246],
        [1.8274, 5.1835, 0.9257,  ..., 0.1977, 0.1958, 0.1256],
        [1.7922, 5.1804, 0.9603,  ..., 0.1891, 0.2063, 0.1255],
        ...,
        [1.6173, 4.2945, 1.4200,  ..., 0.1803, 0.3306, 0.1194],
        [1.6200, 4.2777, 1.4136,  ..., 0.1787, 0.3400, 0.1201],
        [1.6204, 4.2819, 1.4159,  ..., 0.1847, 0.3380, 0.1183]],
       grad_fn=<SqueezeBackward0>)
torch.Size([847, 12])
tensor([[1.7107, 5.2799, 0.7141,  ..., 0.2035, 0.2036, 0.1237],
        [1.6655, 5.2770, 0.7451,  ..., 0.2023, 0.2198, 0.1242],
        [1.6320, 5.2742, 0.7790,  ..., 0.1942, 0.2294, 0.1239],
        ...,
        [1.5564, 4.9935, 1.1950,  ..., 0.1648, 0.2649, 0.1189],
        [1.5576, 4.9307, 1.2025,  ..., 0.1483, 0.2518, 0.1193],
        [1.5574, 4.9309, 1.2035,  ..., 0.1490, 0.2517, 0.1190]],
       grad_fn=<SqueezeBackward0>)
torch.Size([256, 12])
tensor([[1.7980, 5.9469, 1.0679,  ..., 0.2676, 0.3190, 1.1285],
        [1.7475, 5.9415, 1.1014,  ..., 0.2586, 0.3369, 1.1297],
        [1.7118, 5.9440, 1.1363,  ..., 0.2503, 0.3460, 1.1287],
        ...,
        [1.6844, 5.2465, 0.7620,  ..., 0.4934, 1.2248, 1.1159],
        [1.6867, 5.2501, 0.7596,  ..., 0.4989, 1.2236, 1.1127],
        [1.6887, 5.2501, 0.7552,  ..., 0.5001, 1.2239, 1.1112]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1017, 12])
tensor([[1.7012, 6.9712, 1.2456,  ..., 0.1561, 0.2798, 1.1357],
        [1.6496, 6.9764, 1.2840,  ..., 0.1506, 0.2918, 1.1356],
        [1.6159, 6.9801, 1.3174,  ..., 0.1384, 0.3020, 1.1354],
        ...,
        [1.5064, 7.1313, 1.6047,  ..., 0.8129, 0.7227, 1.1315],
        [1.5063, 7.1308, 1.6050,  ..., 0.8130, 0.7230, 1.1315],
        [1.5059, 7.1334, 1.6074,  ..., 0.8132, 0.7221, 1.1310]],
       grad_fn=<SqueezeBackward0>)
torch.Size([75, 12])
tensor([[ 1.6782,  3.5548,  1.3309,  0.1059, -0.1066, -0.1734,  0.2010,  0.1448,
          1.1430,  0.2286,  0.2105,  0.1274],
        [ 1.6375,  3.5399,  1.3566,  0.0967, -0.1151, -0.1733, -1.0367,  0.1371,
          1.1446,  0.2223,  0.2414,  0.1263],
        [ 1.6172,  3.5349,  1.3813,  0.0874, -0.1241, -0.1733, -2.0035,  0.1410,
          1.1411,  0.2185,  0.2541,  0.1212],
        [ 1.6018,  3.5314,  1.3876,  0.0865, -0.1290, -0.1730, -1.1100,  0.1340,
          1.1432,  0.2087,  0.2714,  0.1201],
        [ 1.5898,  3.5597,  1.3904,  0.0800, -0.1337, -0.1729, -0.5139,  0.1398,
          1.1424,  0.2087,  0.2755,  0.1172],
        [ 1.5735,  3.5477,  1.4094,  0.0831, -0.1364, -0.1728, -0.9010,  0.1403,
          1.1427,  0.2046,  0.2693,  0.1160],
        [ 1.5648,  3.5328,  1.4150,  0.0821, -0.1378, -0.1725, -0.9161,  0.1356,
          1.1442,  0.1964,  0.2734,  0.1161],
        [ 1.5581,  3.5332,  1.4187,  0.0788, -0.1386, -0.1723, -0.9008,  0.1323,
          1.1453,  0.1929,  0.2860,  0.1162],
        [ 1.5488,  3.5252,  1.4292,  0.0795, -0.1386, -0.1721, -0.3589,  0.1279,
          1.1469,  0.1889,  0.2709,  0.1172],
        [ 1.5527,  3.5516,  1.4182,  0.0814, -0.1384, -0.1719, -1.1450,  0.1234,
          1.1476,  0.1844,  0.2673,  0.1177],
        [ 1.5384,  3.5261,  1.4444,  0.0786, -0.1385, -0.1719, -0.3808,  0.1269,
          1.1471,  0.1869,  0.2797,  0.1174],
        [ 1.5441,  3.5308,  1.4208,  0.0785, -0.1383, -0.1718, -0.7177,  0.1243,
          1.1473,  0.1846,  0.2743,  0.1178],
        [ 1.5407,  3.5038,  1.4345,  0.0789, -0.1384, -0.1717, -1.6719,  0.1220,
          1.1471,  0.1822,  0.2788,  0.1174],
        [ 1.5462,  3.5298,  1.4201,  0.0790, -0.1383, -0.1718,  0.2558,  0.1243,
          1.1473,  0.1845,  0.2866,  0.1179],
        [ 1.5434,  3.5491,  1.4253,  0.0766, -0.1384, -0.1718, -0.5868,  0.1264,
          1.1470,  0.1864,  0.2893,  0.1177],
        [ 1.5459,  3.5303,  1.4299,  0.0773, -0.1380, -0.1717, -1.8118,  0.1212,
          1.1471,  0.1776,  0.2744,  0.1177],
        [ 1.5516,  3.5286,  1.4317,  0.0782, -0.1389, -0.1718, -1.6976,  0.1260,
          1.1454,  0.1784,  0.2771,  0.1160],
        [ 1.5499,  3.5351,  1.4400,  0.0741, -0.1408, -0.1720, -0.8678,  0.1360,
          1.1435,  0.1869,  0.2804,  0.1137],
        [ 1.5580,  3.5427,  1.3961,  0.0765, -0.1421, -0.1720, -1.2071,  0.1357,
          1.1437,  0.1845,  0.2717,  0.1130],
        [ 1.5593,  3.5375,  1.4343,  0.0751, -0.1437, -0.1722, -2.2998,  0.1446,
          1.1402,  0.1864,  0.2733,  0.1096],
        [ 1.5641,  3.5426,  1.4307,  0.0795, -0.1450, -0.1722, -1.4872,  0.1460,
          1.1408,  0.1879,  0.2759,  0.1087],
        [ 1.5612,  3.5384,  1.4208,  0.0750, -0.1461, -0.1722,  0.3305,  0.1484,
          1.1421,  0.1949,  0.2618,  0.1088],
        [ 1.5583,  3.5695,  1.4148,  0.0737, -0.1461, -0.1721, -0.1005,  0.1505,
          1.1428,  0.1984,  0.2722,  0.1097],
        [ 1.5485,  3.5313,  1.4290,  0.0787, -0.1447, -0.1719, -1.2130,  0.1418,
          1.1452,  0.1901,  0.2694,  0.1124],
        [ 1.5553,  3.5215,  1.3950,  0.0810, -0.1438, -0.1717, -0.7465,  0.1351,
          1.1463,  0.1829,  0.2587,  0.1139],
        [ 1.5469,  3.5050,  1.4358,  0.0789, -0.1430, -0.1717, -1.0558,  0.1325,
          1.1467,  0.1834,  0.2727,  0.1145],
        [ 1.5483,  3.5220,  1.4366,  0.0747, -0.1438, -0.1718, -1.1014,  0.1419,
          1.1435,  0.1834,  0.2670,  0.1122],
        [ 1.5550,  3.5353,  1.4174,  0.0790, -0.1431, -0.1718, -1.0900,  0.1365,
          1.1452,  0.1810,  0.2714,  0.1137],
        [ 1.5519,  3.4694,  1.3994,  0.0800, -0.1435, -0.1718, -1.5466,  0.1341,
          1.1449,  0.1760,  0.2701,  0.1130],
        [ 1.5578,  3.5292,  1.4190,  0.0776, -0.1443, -0.1719, -0.5687,  0.1415,
          1.1439,  0.1830,  0.2624,  0.1118],
        [ 1.5614,  3.5445,  1.4124,  0.0774, -0.1439, -0.1718, -0.9971,  0.1374,
          1.1455,  0.1848,  0.2688,  0.1131],
        [ 1.5560,  3.5022,  1.4104,  0.0820, -0.1439, -0.1718, -0.9060,  0.1365,
          1.1457,  0.1815,  0.2628,  0.1132],
        [ 1.5619,  3.5170,  1.4047,  0.0823, -0.1433, -0.1716, -1.4740,  0.1306,
          1.1470,  0.1813,  0.2715,  0.1142],
        [ 1.5669,  3.5417,  1.3906,  0.0757, -0.1438, -0.1717, -0.8200,  0.1360,
          1.1457,  0.1825,  0.2824,  0.1131],
        [ 1.5667,  3.5473,  1.3939,  0.0742, -0.1445, -0.1719, -0.6194,  0.1426,
          1.1441,  0.1855,  0.2738,  0.1119],
        [ 1.5593,  3.4874,  1.3921,  0.0784, -0.1447, -0.1719, -1.3668,  0.1424,
          1.1437,  0.1840,  0.2574,  0.1115],
        [ 1.5638,  3.5198,  1.4045,  0.0768, -0.1447, -0.1718, -1.6069,  0.1424,
          1.1437,  0.1803,  0.2802,  0.1114],
        [ 1.5577,  3.4819,  1.3911,  0.0760, -0.1451, -0.1718, -0.5470,  0.1416,
          1.1446,  0.1819,  0.2752,  0.1116],
        [ 1.5648,  3.5227,  1.3848,  0.0757, -0.1458, -0.1719, -0.6626,  0.1475,
          1.1430,  0.1861,  0.2570,  0.1101],
        [ 1.5708,  3.5089,  1.3791,  0.0781, -0.1457, -0.1719, -2.3316,  0.1456,
          1.1422,  0.1810,  0.2786,  0.1097],
        [ 1.5764,  3.5207,  1.3598,  0.0765, -0.1459, -0.1719, -0.8622,  0.1432,
          1.1439,  0.1814,  0.2734,  0.1104],
        [ 1.5624,  3.4952,  1.3864,  0.0796, -0.1457, -0.1717, -0.3489,  0.1397,
          1.1462,  0.1836,  0.2661,  0.1120],
        [ 1.5712,  3.5271,  1.3560,  0.0786, -0.1455, -0.1717,  0.0524,  0.1411,
          1.1461,  0.1856,  0.2578,  0.1124],
        [ 1.5573,  3.4765,  1.3627,  0.0760, -0.1448, -0.1717, -0.6017,  0.1415,
          1.1460,  0.1833,  0.2697,  0.1130],
        [ 1.5540,  3.5045,  1.3812,  0.0728, -0.1444, -0.1718, -0.0081,  0.1479,
          1.1441,  0.1869,  0.2773,  0.1126],
        [ 1.5619,  3.5153,  1.3779,  0.0756, -0.1435, -0.1717, -1.7388,  0.1419,
          1.1444,  0.1768,  0.2697,  0.1135],
        [ 1.5605,  3.4946,  1.3806,  0.0757, -0.1432, -0.1717, -0.9184,  0.1425,
          1.1440,  0.1756,  0.2762,  0.1134],
        [ 1.5525,  3.4543,  1.3814,  0.0736, -0.1429, -0.1717, -0.7151,  0.1376,
          1.1454,  0.1766,  0.2732,  0.1143],
        [ 1.5565,  3.5126,  1.4317,  0.0717, -0.1438, -0.1718, -1.5401,  0.1462,
          1.1424,  0.1803,  0.2710,  0.1116],
        [ 1.5574,  3.4884,  1.4284,  0.0777, -0.1438, -0.1718, -1.8130,  0.1429,
          1.1433,  0.1748,  0.2674,  0.1118],
        [ 1.5678,  3.4432,  1.3509,  0.0753, -0.1443, -0.1718, -0.7841,  0.1368,
          1.1451,  0.1770,  0.2751,  0.1122],
        [ 1.5698,  3.5233,  1.4056,  0.0751, -0.1452, -0.1719, -0.9114,  0.1446,
          1.1443,  0.1841,  0.2853,  0.1109],
        [ 1.5652,  3.5025,  1.3980,  0.0753, -0.1454, -0.1719, -1.6285,  0.1444,
          1.1441,  0.1817,  0.2799,  0.1106],
        [ 1.5657,  3.4450,  1.3658,  0.0757, -0.1463, -0.1719, -1.2136,  0.1476,
          1.1427,  0.1833,  0.2640,  0.1090],
        [ 1.5673,  3.4890,  1.3593,  0.0745, -0.1467, -0.1719, -0.7691,  0.1495,
          1.1434,  0.1866,  0.2741,  0.1092],
        [ 1.5667,  3.4901,  1.3611,  0.0768, -0.1463, -0.1718, -0.5597,  0.1450,
          1.1456,  0.1851,  0.2736,  0.1111],
        [ 1.5605,  3.4349,  1.3673,  0.0752, -0.1466, -0.1718, -1.1712,  0.1476,
          1.1441,  0.1830,  0.2566,  0.1099],
        [ 1.5475,  3.4340,  1.3959,  0.0755, -0.1464, -0.1718, -1.1724,  0.1493,
          1.1441,  0.1828,  0.2625,  0.1101],
        [ 1.5669,  3.4568,  1.3621,  0.0778, -0.1462, -0.1717, -1.8569,  0.1433,
          1.1446,  0.1806,  0.2667,  0.1105],
        [ 1.5732,  3.4632,  1.3592,  0.0789, -0.1465, -0.1717, -1.3239,  0.1437,
          1.1446,  0.1816,  0.2737,  0.1100],
        [ 1.5619,  3.4238,  1.3573,  0.0788, -0.1464, -0.1716, -0.5871,  0.1392,
          1.1468,  0.1814,  0.2718,  0.1114],
        [ 1.5688,  3.4532,  1.3558,  0.0789, -0.1468, -0.1717, -1.8977,  0.1432,
          1.1450,  0.1821,  0.2737,  0.1098],
        [ 1.5619,  3.4470,  1.3821,  0.0790, -0.1468, -0.1717, -1.6420,  0.1441,
          1.1451,  0.1839,  0.2696,  0.1098],
        [ 1.5741,  3.4088,  1.3322,  0.0781, -0.1474, -0.1718, -0.7163,  0.1441,
          1.1451,  0.1840,  0.2737,  0.1091],
        [ 1.5556,  3.4875,  1.3924,  0.0737, -0.1479, -0.1719, -0.2329,  0.1552,
          1.1440,  0.1946,  0.2770,  0.1083],
        [ 1.5511,  3.4112,  1.3818,  0.0765, -0.1477, -0.1718, -1.5530,  0.1526,
          1.1435,  0.1867,  0.2569,  0.1084],
        [ 1.5653,  3.4481,  1.3609,  0.0751, -0.1476, -0.1718, -1.4584,  0.1511,
          1.1433,  0.1845,  0.2700,  0.1085],
        [ 1.5491,  3.4258,  1.3873,  0.0762, -0.1468, -0.1717, -0.5160,  0.1468,
          1.1460,  0.1812,  0.2699,  0.1108],
        [ 1.5581,  3.4301,  1.3675,  0.0742, -0.1473, -0.1718, -0.8071,  0.1493,
          1.1444,  0.1855,  0.2566,  0.1094],
        [ 1.5513,  3.4446,  1.4009,  0.0742, -0.1473, -0.1718, -1.4609,  0.1555,
          1.1424,  0.1862,  0.2614,  0.1083],
        [ 1.5453,  3.4137,  1.3981,  0.0723, -0.1470, -0.1718, -0.7817,  0.1546,
          1.1431,  0.1844,  0.2589,  0.1090],
        [ 1.5599,  3.4101,  1.3662,  0.0742, -0.1472, -0.1718, -1.2037,  0.1510,
          1.1431,  0.1816,  0.2715,  0.1089],
        [ 1.5445,  3.4817,  1.4398,  0.0740, -0.1471, -0.1719, -1.3732,  0.1584,
          1.1421,  0.1848,  0.2626,  0.1082],
        [ 1.5582,  3.4451,  1.3725,  0.0769, -0.1464, -0.1717, -0.7905,  0.1469,
          1.1454,  0.1793,  0.2594,  0.1108],
        [ 1.5457,  3.4401,  1.4015,  0.0708, -0.1467, -0.1718, -0.5826,  0.1542,
          1.1443,  0.1852,  0.2789,  0.1099]], grad_fn=<SqueezeBackward0>)
torch.Size([179, 12])
tensor([[1.7835, 6.0895, 1.2076,  ..., 0.3783, 0.3796, 1.1297],
        [1.7340, 6.0844, 1.2405,  ..., 0.3706, 0.3960, 1.1310],
        [1.7005, 6.0841, 1.2770,  ..., 0.3620, 0.4042, 1.1299],
        ...,
        [1.3638, 7.2147, 1.1888,  ..., 1.0760, 0.4260, 1.1243],
        [1.3652, 7.6631, 1.2736,  ..., 1.1193, 0.4583, 1.1246],
        [1.3653, 7.6638, 1.2739,  ..., 1.1197, 0.4578, 1.1246]],
       grad_fn=<SqueezeBackward0>)
torch.Size([532, 12])
tensor([[ 1.1882,  7.3517,  1.0227,  ...,  0.1786,  0.3341,  1.1351],
        [ 1.1356,  7.3544,  1.0631,  ...,  0.1687,  0.3493,  1.1359],
        [ 1.1042,  7.3579,  1.0978,  ...,  0.1565,  0.3603,  1.1355],
        ...,
        [ 1.4755, 10.2190,  1.9588,  ...,  0.8601,  0.8263,  1.1338],
        [ 1.4757, 10.2196,  1.9584,  ...,  0.8601,  0.8261,  1.1337],
        [ 1.4760, 10.2213,  1.9574,  ...,  0.8598,  0.8252,  1.1335]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1232, 12])
tensor([[1.6837, 5.2559, 1.1267,  ..., 0.3557, 0.4220, 1.1258],
        [1.6385, 5.2522, 1.1564,  ..., 0.3500, 0.4388, 1.1254],
        [1.6012, 5.2528, 1.1862,  ..., 0.3399, 0.4506, 1.1249],
        ...,
        [1.4274, 5.0436, 1.6542,  ..., 0.6525, 0.4763, 1.1165],
        [1.4245, 5.0612, 1.6773,  ..., 0.6602, 0.4708, 1.1143],
        [1.4250, 5.0574, 1.6736,  ..., 0.6561, 0.4726, 1.1157]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1257, 12])
tensor([[1.7358, 5.9982, 1.0071,  ..., 0.0870, 0.1385, 1.1297],
        [1.6831, 5.9975, 1.0421,  ..., 0.0794, 0.1558, 1.1303],
        [1.6481, 6.0040, 1.0761,  ..., 0.0726, 0.1642, 1.1288],
        ...,
        [1.4483, 5.1313, 1.3990,  ..., 0.0499, 0.2078, 1.1174],
        [1.4482, 5.1275, 1.3964,  ..., 0.0454, 0.2096, 1.1190],
        [1.4481, 5.1279, 1.3972,  ..., 0.0460, 0.2096, 1.1187]],
       grad_fn=<SqueezeBackward0>)
torch.Size([815, 12])
tensor([[1.7602, 5.7422, 0.9183,  ..., 0.4271, 0.6526, 1.1261],
        [1.7107, 5.7385, 0.9473,  ..., 0.4172, 0.6718, 1.1271],
        [1.6740, 5.7408, 0.9769,  ..., 0.4067, 0.6831, 1.1266],
        ...,
        [1.6200, 6.2796, 1.2428,  ..., 0.4986, 0.3102, 1.1207],
        [1.6368, 6.4444, 1.2474,  ..., 0.4966, 0.3026, 1.1213],
        [1.6370, 6.4449, 1.2479,  ..., 0.4978, 0.3025, 1.1210]],
       grad_fn=<SqueezeBackward0>)
torch.Size([887, 12])
tensor([[1.8223, 5.2297, 0.6931,  ..., 0.2168, 0.1466, 0.1251],
        [1.7720, 5.2254, 0.7258,  ..., 0.2142, 0.1654, 0.1263],
        [1.7373, 5.2250, 0.7626,  ..., 0.2090, 0.1743, 0.1252],
        ...,
        [1.6092, 5.4342, 1.3288,  ..., 0.2803, 0.9078, 0.1275],
        [1.6188, 5.4157, 1.3485,  ..., 0.2791, 0.8650, 0.1279],
        [1.6183, 5.4188, 1.3507,  ..., 0.2791, 0.8639, 0.1273]],
       grad_fn=<SqueezeBackward0>)
torch.Size([54, 12])
tensor([[ 1.2809,  2.7803,  1.0054,  0.1155, -0.1137, -0.1727,  0.9875,  0.2176,
          1.1377,  0.2741,  0.2509,  0.1219],
        [ 1.2346,  2.7804,  1.0300,  0.1041, -0.1212, -0.1727,  2.1493,  0.2229,
          1.1368,  0.2781,  0.2575,  0.1211],
        [ 1.1949,  2.7785,  1.0592,  0.0967, -0.1276, -0.1726,  1.1050,  0.2226,
          1.1368,  0.2796,  0.2818,  0.1192],
        [ 1.1685,  2.7813,  1.0870,  0.0855, -0.1316, -0.1724,  1.1259,  0.2238,
          1.1349,  0.2764,  0.2962,  0.1163],
        [ 1.1505,  2.7837,  1.1090,  0.0764, -0.1332, -0.1723,  1.5915,  0.2243,
          1.1333,  0.2674,  0.2982,  0.1151],
        [ 1.1394,  2.7866,  1.1250,  0.0714, -0.1343, -0.1721,  1.2550,  0.2236,
          1.1323,  0.2606,  0.2804,  0.1136],
        [ 1.1314,  2.7872,  1.1363,  0.0695, -0.1338, -0.1720,  1.4108,  0.2211,
          1.1326,  0.2505,  0.3076,  0.1140],
        [ 1.1263,  2.7893,  1.1450,  0.0644, -0.1338, -0.1718,  1.3450,  0.2198,
          1.1322,  0.2477,  0.3057,  0.1135],
        [ 1.1225,  2.7923,  1.1526,  0.0617, -0.1331, -0.1717,  1.8833,  0.2205,
          1.1309,  0.2438,  0.2935,  0.1133],
        [ 1.1198,  2.7918,  1.1564,  0.0607, -0.1325, -0.1716,  1.2512,  0.2173,
          1.1319,  0.2362,  0.3028,  0.1138],
        [ 1.1177,  2.7896,  1.1592,  0.0577, -0.1313, -0.1715,  1.0793,  0.2123,
          1.1336,  0.2336,  0.3086,  0.1149],
        [ 1.1160,  2.7919,  1.1638,  0.0530, -0.1305, -0.1715,  1.7889,  0.2134,
          1.1323,  0.2264,  0.2984,  0.1147],
        [ 1.1149,  2.7914,  1.1654,  0.0541, -0.1298, -0.1714,  1.2670,  0.2107,
          1.1331,  0.2285,  0.2969,  0.1152],
        [ 1.1135,  2.7885,  1.1668,  0.0515, -0.1281, -0.1713,  1.2387,  0.2058,
          1.1347,  0.2262,  0.3139,  0.1166],
        [ 1.1132,  2.7906,  1.1689,  0.0460, -0.1282, -0.1713,  1.1968,  0.2061,
          1.1340,  0.2293,  0.3112,  0.1157],
        [ 1.1127,  2.7919,  1.1705,  0.0442, -0.1272, -0.1713,  1.7651,  0.2072,
          1.1332,  0.2289,  0.3016,  0.1161],
        [ 1.1121,  2.7935,  1.1725,  0.0458, -0.1265, -0.1713,  1.9209,  0.2091,
          1.1322,  0.2260,  0.2995,  0.1161],
        [ 1.1117,  2.7908,  1.1720,  0.0415, -0.1261, -0.1713,  1.0369,  0.2042,
          1.1341,  0.2278,  0.3113,  0.1167],
        [ 1.1111,  2.7909,  1.1737,  0.0393, -0.1253, -0.1712,  1.5264,  0.2035,
          1.1339,  0.2221,  0.3122,  0.1169],
        [ 1.1112,  2.7960,  1.1771,  0.0363, -0.1252, -0.1714,  2.5510,  0.2110,
          1.1301,  0.2223,  0.3049,  0.1155],
        [ 1.1111,  2.7911,  1.1746,  0.0370, -0.1248, -0.1713,  0.6665,  0.2031,
          1.1336,  0.2251,  0.3113,  0.1167],
        [ 1.1107,  2.7911,  1.1760,  0.0327, -0.1239, -0.1712,  1.5918,  0.2024,
          1.1335,  0.2241,  0.3066,  0.1170],
        [ 1.1108,  2.7926,  1.1761,  0.0320, -0.1239, -0.1713,  1.4405,  0.2031,
          1.1331,  0.2277,  0.3072,  0.1166],
        [ 1.1108,  2.7911,  1.1752,  0.0312, -0.1234, -0.1713,  1.2664,  0.2004,
          1.1342,  0.2270,  0.3122,  0.1172],
        [ 1.1104,  2.7899,  1.1756,  0.0270, -0.1225, -0.1712,  1.4561,  0.1988,
          1.1347,  0.2203,  0.3191,  0.1179],
        [ 1.1103,  2.7914,  1.1764,  0.0267, -0.1227, -0.1712,  1.4939,  0.2001,
          1.1340,  0.2216,  0.3095,  0.1175],
        [ 1.1104,  2.7926,  1.1768,  0.0262, -0.1224, -0.1713,  1.6151,  0.2014,
          1.1335,  0.2224,  0.3104,  0.1173],
        [ 1.1111,  2.7931,  1.1754,  0.0228, -0.1235, -0.1713,  1.0561,  0.2010,
          1.1337,  0.2232,  0.3124,  0.1166],
        [ 1.1113,  2.7901,  1.1736,  0.0236, -0.1228, -0.1713,  1.1198,  0.1973,
          1.1352,  0.2212,  0.3143,  0.1176],
        [ 1.1112,  2.7940,  1.1759,  0.0219, -0.1226, -0.1714,  2.2230,  0.2042,
          1.1324,  0.2285,  0.3095,  0.1169],
        [ 1.1116,  2.7950,  1.1748,  0.0204, -0.1237, -0.1714,  1.3627,  0.2047,
          1.1325,  0.2292,  0.3071,  0.1163],
        [ 1.1121,  2.7967,  1.1745,  0.0160, -0.1243, -0.1714,  1.6242,  0.2068,
          1.1317,  0.2227,  0.3167,  0.1157],
        [ 1.1120,  2.7953,  1.1739,  0.0152, -0.1239, -0.1714,  1.6667,  0.2062,
          1.1322,  0.2269,  0.3221,  0.1164],
        [ 1.1125,  2.7948,  1.1727,  0.0122, -0.1250, -0.1714,  1.0044,  0.2049,
          1.1328,  0.2296,  0.3258,  0.1158],
        [ 1.1126,  2.7940,  1.1721,  0.0077, -0.1247, -0.1714,  1.4516,  0.2044,
          1.1331,  0.2259,  0.3184,  0.1163],
        [ 1.1123,  2.7969,  1.1750,  0.0097, -0.1243, -0.1715,  2.5515,  0.2106,
          1.1302,  0.2229,  0.3232,  0.1159],
        [ 1.1126,  2.7994,  1.1749,  0.0137, -0.1256, -0.1715,  1.7377,  0.2129,
          1.1293,  0.2232,  0.3243,  0.1147],
        [ 1.1129,  2.7967,  1.1729,  0.0163, -0.1261, -0.1715,  1.0513,  0.2091,
          1.1313,  0.2255,  0.3086,  0.1151],
        [ 1.1130,  2.7988,  1.1739,  0.0184, -0.1263, -0.1715,  1.9533,  0.2120,
          1.1298,  0.2267,  0.2990,  0.1145],
        [ 1.1124,  2.7951,  1.1731,  0.0243, -0.1252, -0.1714,  1.6096,  0.2085,
          1.1317,  0.2268,  0.2924,  0.1161],
        [ 1.1111,  2.7940,  1.1758,  0.0264, -0.1239, -0.1713,  2.0052,  0.2082,
          1.1315,  0.2181,  0.3182,  0.1168],
        [ 1.1108,  2.7932,  1.1779,  0.0290, -0.1238, -0.1713,  2.4121,  0.2095,
          1.1305,  0.2136,  0.3007,  0.1168],
        [ 1.1099,  2.7919,  1.1797,  0.0338, -0.1232, -0.1712,  2.0370,  0.2077,
          1.1310,  0.2149,  0.3014,  0.1171],
        [ 1.1100,  2.7958,  1.1810,  0.0305, -0.1244, -0.1713,  1.6612,  0.2091,
          1.1299,  0.2138,  0.3081,  0.1152],
        [ 1.1113,  2.7968,  1.1800,  0.0295, -0.1249, -0.1714,  2.5537,  0.2119,
          1.1285,  0.2228,  0.3042,  0.1146],
        [ 1.1113,  2.7951,  1.1795,  0.0318, -0.1244, -0.1714,  2.3768,  0.2115,
          1.1288,  0.2156,  0.2977,  0.1154],
        [ 1.1098,  2.7965,  1.1818,  0.0322, -0.1238, -0.1713,  1.0868,  0.2084,
          1.1298,  0.2087,  0.3085,  0.1153],
        [ 1.1088,  2.7953,  1.1831,  0.0285, -0.1223, -0.1712,  1.5027,  0.2049,
          1.1309,  0.2153,  0.3034,  0.1163],
        [ 1.1089,  2.7932,  1.1835,  0.0274, -0.1213, -0.1712,  2.3868,  0.2054,
          1.1306,  0.2127,  0.3034,  0.1171],
        [ 1.1092,  2.7963,  1.1835,  0.0248, -0.1225, -0.1712,  1.6832,  0.2066,
          1.1300,  0.2159,  0.2984,  0.1157],
        [ 1.1096,  2.7999,  1.1832,  0.0207, -0.1232, -0.1713,  1.1896,  0.2072,
          1.1295,  0.2236,  0.2990,  0.1144],
        [ 1.1108,  2.8009,  1.1812,  0.0183, -0.1234, -0.1714,  2.2548,  0.2104,
          1.1284,  0.2219,  0.2887,  0.1144],
        [ 1.1114,  2.7986,  1.1792,  0.0257, -0.1232, -0.1714,  2.4011,  0.2113,
          1.1286,  0.2230,  0.2921,  0.1154],
        [ 1.1103,  2.7983,  1.1802,  0.0265, -0.1231, -0.1713,  1.3277,  0.2087,
          1.1299,  0.2195,  0.2916,  0.1157]], grad_fn=<SqueezeBackward0>)
torch.Size([1677, 12])
tensor([[1.7222, 7.2668, 1.0655,  ..., 0.1817, 0.3238, 1.1354],
        [1.6695, 7.2708, 1.1042,  ..., 0.1740, 0.3371, 1.1358],
        [1.6369, 7.2760, 1.1381,  ..., 0.1631, 0.3464, 1.1352],
        ...,
        [1.4739, 6.6384, 1.2652,  ..., 0.3675, 0.7577, 1.1311],
        [1.4737, 6.6384, 1.2658,  ..., 0.3677, 0.7578, 1.1310],
        [1.4733, 6.6410, 1.2678,  ..., 0.3678, 0.7569, 1.1305]],
       grad_fn=<SqueezeBackward0>)
torch.Size([231, 12])
tensor([[1.6117, 5.1237, 1.3438,  ..., 0.1843, 0.1760, 0.1285],
        [1.5779, 5.1310, 1.3568,  ..., 0.1629, 0.1972, 0.1295],
        [1.5463, 5.1330, 1.3738,  ..., 0.1570, 0.2340, 0.1294],
        ...,
        [1.4685, 4.4998, 1.6791,  ..., 0.2310, 0.2428, 0.1251],
        [1.4717, 4.5018, 1.6602,  ..., 0.2264, 0.2324, 0.1248],
        [1.4689, 4.4733, 1.6753,  ..., 0.2317, 0.2242, 0.1236]],
       grad_fn=<SqueezeBackward0>)
torch.Size([997, 12])
tensor([[1.8386, 5.2175, 0.8860,  ..., 0.2584, 0.3083, 0.1243],
        [1.7921, 5.2118, 0.9144,  ..., 0.2547, 0.3270, 0.1256],
        [1.7601, 5.2100, 0.9470,  ..., 0.2495, 0.3353, 0.1245],
        ...,
        [1.6255, 5.7295, 1.4516,  ..., 0.1712, 0.3289, 0.1243],
        [1.6435, 6.0096, 1.4708,  ..., 0.1781, 0.3322, 0.1240],
        [1.6444, 6.0084, 1.4680,  ..., 0.1779, 0.3324, 0.1244]],
       grad_fn=<SqueezeBackward0>)
torch.Size([127, 12])
tensor([[1.8769, 9.8926, 0.5985,  ..., 0.4849, 1.5227, 0.1374],
        [1.8253, 9.8913, 0.6449,  ..., 0.4705, 1.5372, 0.1391],
        [1.7973, 9.8970, 0.6811,  ..., 0.4599, 1.5456, 0.1383],
        ...,
        [1.6496, 9.4127, 0.7473,  ..., 0.5791, 2.3956, 0.1351],
        [1.6547, 9.5012, 0.7634,  ..., 0.5927, 2.3553, 0.1347],
        [1.6550, 9.5023, 0.7629,  ..., 0.5926, 2.3548, 0.1346]],
       grad_fn=<SqueezeBackward0>)
torch.Size([602, 12])
tensor([[1.8181, 4.8780, 0.7326,  ..., 0.1961, 0.2157, 0.1244],
        [1.7716, 4.8775, 0.7640,  ..., 0.1987, 0.2316, 0.1241],
        [1.7381, 4.8778, 0.7988,  ..., 0.1951, 0.2396, 0.1226],
        ...,
        [1.6579, 3.2595, 1.0568,  ..., 0.1261, 0.3466, 0.1067],
        [1.6470, 3.2791, 1.0689,  ..., 0.1292, 0.3529, 0.1051],
        [1.6471, 3.2775, 1.0663,  ..., 0.1274, 0.3537, 0.1064]],
       grad_fn=<SqueezeBackward0>)
torch.Size([90, 12])
tensor([[1.8765, 3.5521, 0.6345,  ..., 0.2158, 0.5767, 0.1204],
        [1.8375, 3.5437, 0.6498,  ..., 0.2141, 0.6039, 0.1199],
        [1.8080, 3.5434, 0.6689,  ..., 0.2137, 0.6152, 0.1160],
        ...,
        [1.6018, 3.1626, 0.8178,  ..., 0.1230, 0.5818, 0.0923],
        [1.6016, 3.1562, 0.8232,  ..., 0.1244, 0.5759, 0.0910],
        [1.6011, 3.1472, 0.8197,  ..., 0.1205, 0.5757, 0.0924]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1067, 12])
tensor([[1.7895, 6.4581, 0.8269,  ..., 0.2462, 0.3549, 0.1246],
        [1.7403, 6.4509, 0.8611,  ..., 0.2345, 0.3741, 0.1268],
        [1.7097, 6.4559, 0.8933,  ..., 0.2296, 0.3806, 0.1258],
        ...,
        [1.5740, 4.3292, 1.1731,  ..., 0.7019, 0.8315, 0.1119],
        [1.5732, 4.3050, 1.1460,  ..., 0.7020, 0.8412, 0.1112],
        [1.5731, 4.3029, 1.1447,  ..., 0.6993, 0.8420, 0.1122]],
       grad_fn=<SqueezeBackward0>)
torch.Size([767, 12])
tensor([[1.8908, 6.3722, 0.8584,  ..., 0.2188, 1.1106, 0.1329],
        [1.8373, 6.3633, 0.8920,  ..., 0.2026, 1.1316, 0.1360],
        [1.8028, 6.3675, 0.9250,  ..., 0.1938, 1.1393, 0.1358],
        ...,
        [1.7172, 6.9659, 0.8558,  ..., 0.2203, 1.0276, 0.1312],
        [1.7113, 7.0070, 0.8759,  ..., 0.2279, 1.0373, 0.1315],
        [1.7109, 7.0060, 0.8764,  ..., 0.2279, 1.0377, 0.1316]],
       grad_fn=<SqueezeBackward0>)
torch.Size([757, 12])
tensor([[1.7065, 5.9141, 1.2528,  ..., 0.3023, 0.4424, 1.1300],
        [1.6553, 5.9132, 1.2855,  ..., 0.2941, 0.4594, 1.1307],
        [1.6200, 5.9175, 1.3174,  ..., 0.2850, 0.4690, 1.1299],
        ...,
        [1.5177, 5.8629, 1.0966,  ..., 0.4182, 1.1329, 1.1226],
        [1.5178, 5.8602, 1.0955,  ..., 0.4178, 1.1341, 1.1231],
        [1.5172, 5.8645, 1.0993,  ..., 0.4201, 1.1326, 1.1218]],
       grad_fn=<SqueezeBackward0>)
torch.Size([942, 12])
tensor([[1.8192, 4.2738, 0.8892,  ..., 0.5856, 0.7477, 1.1242],
        [1.7784, 4.2721, 0.9097,  ..., 0.5845, 0.7677, 1.1215],
        [1.7446, 4.2720, 0.9330,  ..., 0.5786, 0.7802, 1.1178],
        ...,
        [1.6579, 3.5494, 0.8390,  ..., 0.7488, 0.2294, 1.0910],
        [1.6480, 3.6560, 0.8919,  ..., 0.8046, 0.2474, 1.0919],
        [1.6469, 3.6548, 0.8928,  ..., 0.8029, 0.2473, 1.0937]],
       grad_fn=<SqueezeBackward0>)
torch.Size([358, 12])
tensor([[1.7625, 5.3267, 1.1309,  ..., 0.2525, 0.3724, 1.1265],
        [1.7154, 5.3226, 1.1610,  ..., 0.2468, 0.3898, 1.1266],
        [1.6783, 5.3238, 1.1929,  ..., 0.2382, 0.4003, 1.1256],
        ...,
        [1.4910, 5.0046, 1.5405,  ..., 0.4083, 0.4272, 1.1193],
        [1.5380, 5.0133, 1.3780,  ..., 0.3887, 0.1875, 1.1190],
        [1.5381, 5.0127, 1.3781,  ..., 0.3870, 0.1890, 1.1189]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1157, 12])
tensor([[1.6219, 5.3898, 1.0795,  ..., 0.3185, 0.6374, 1.1255],
        [1.5742, 5.3871, 1.1073,  ..., 0.3105, 0.6563, 1.1258],
        [1.5378, 5.3883, 1.1354,  ..., 0.3003, 0.6686, 1.1252],
        ...,
        [1.4799, 5.6816, 0.9807,  ..., 0.5026, 1.1795, 1.1230],
        [1.4794, 5.6839, 0.9836,  ..., 0.5036, 1.1789, 1.1223],
        [1.4797, 5.6809, 0.9814,  ..., 0.5028, 1.1799, 1.1231]],
       grad_fn=<SqueezeBackward0>)
torch.Size([452, 12])
tensor([[1.7678, 9.9807, 0.6908,  ..., 0.2464, 0.6031, 0.1357],
        [1.7230, 9.9781, 0.7373,  ..., 0.2380, 0.6145, 0.1364],
        [1.6972, 9.9782, 0.7749,  ..., 0.2275, 0.6219, 0.1357],
        ...,
        [1.6617, 7.6973, 0.7072,  ..., 0.6138, 1.8944, 0.1325],
        [1.6725, 7.8376, 0.7058,  ..., 0.6050, 1.8876, 0.1329],
        [1.6725, 7.8350, 0.7046,  ..., 0.6049, 1.8885, 0.1334]],
       grad_fn=<SqueezeBackward0>)
torch.Size([25, 12])
tensor([[ 1.7900,  5.9275,  0.9711,  0.1231, -0.0990, -0.1722,  0.5188,  0.2187,
          0.1432,  0.2031,  0.5804,  1.1310],
        [ 1.7362,  5.9220,  1.0020,  0.1150, -0.1020, -0.1722,  0.5392,  0.2139,
          0.1446,  0.1911,  0.6014,  1.1330],
        [ 1.6901,  5.8781,  1.0375,  0.1042, -0.1047, -0.1720,  0.3762,  0.2151,
          0.1444,  0.1831,  0.6080,  1.1329],
        [ 1.6688,  5.8866,  1.0647,  0.0936, -0.1087, -0.1718,  0.3893,  0.2185,
          0.1422,  0.1768,  0.6122,  1.1307],
        [ 1.6486,  5.8455,  1.0853,  0.0844, -0.1093, -0.1716,  0.2860,  0.2188,
          0.1419,  0.1705,  0.6099,  1.1299],
        [ 1.6413,  5.8484,  1.0970,  0.0806, -0.1097, -0.1713,  0.2913,  0.2151,
          0.1419,  0.1617,  0.6128,  1.1293],
        [ 1.6288,  5.8053,  1.1087,  0.0747, -0.1082, -0.1711,  0.2895,  0.2156,
          0.1419,  0.1554,  0.6083,  1.1289],
        [ 1.6267,  5.8106,  1.1150,  0.0705, -0.1097, -0.1711,  0.2922,  0.2183,
          0.1405,  0.1549,  0.6075,  1.1273],
        [ 1.6176,  5.7683,  1.1214,  0.0646, -0.1115, -0.1710,  0.4240,  0.2229,
          0.1399,  0.1565,  0.6006,  1.1265],
        [ 1.6169,  5.7698,  1.1225,  0.0642, -0.1120, -0.1710,  0.4248,  0.2230,
          0.1398,  0.1551,  0.6004,  1.1262],
        [ 1.6077,  5.7211,  1.1259,  0.0625, -0.1130, -0.1708,  0.6174,  0.2212,
          0.1414,  0.1553,  0.5961,  1.1276],
        [ 1.6069,  5.7225,  1.1286,  0.0613, -0.1136, -0.1708,  0.6176,  0.2232,
          0.1407,  0.1560,  0.5958,  1.1270],
        [ 1.6057,  5.7264,  1.1351,  0.0634, -0.1116, -0.1706,  0.8275,  0.2190,
          0.1414,  0.1470,  0.5940,  1.1279],
        [ 1.6049,  5.7263,  1.1369,  0.0634, -0.1115, -0.1706,  0.8273,  0.2193,
          0.1413,  0.1463,  0.5941,  1.1279],
        [ 1.6047,  5.7363,  1.1451,  0.0631, -0.1128, -0.1706,  0.8634,  0.2215,
          0.1401,  0.1471,  0.5902,  1.1270],
        [ 1.6045,  5.7358,  1.1449,  0.0638, -0.1126, -0.1706,  0.8632,  0.2210,
          0.1403,  0.1461,  0.5902,  1.1274],
        [ 1.6040,  5.7415,  1.1508,  0.0664, -0.1107, -0.1705,  0.7902,  0.2163,
          0.1412,  0.1400,  0.5885,  1.1281],
        [ 1.6034,  5.7399,  1.1514,  0.0672, -0.1098, -0.1704,  0.7901,  0.2137,
          0.1417,  0.1375,  0.5895,  1.1287],
        [ 1.6032,  5.7485,  1.1590,  0.0665, -0.1120, -0.1704,  0.6801,  0.2130,
          0.1412,  0.1346,  0.5865,  1.1283],
        [ 1.6030,  5.7474,  1.1589,  0.0670, -0.1113, -0.1703,  0.6801,  0.2109,
          0.1417,  0.1329,  0.5871,  1.1287],
        [ 1.6031,  5.7560,  1.1659,  0.0660, -0.1099, -0.1704,  0.5716,  0.2098,
          0.1414,  0.1335,  0.5841,  1.1284],
        [ 1.6036,  5.7594,  1.1667,  0.0633, -0.1112, -0.1705,  0.5723,  0.2141,
          0.1400,  0.1375,  0.5825,  1.1272],
        [ 1.6039,  5.7580,  1.1647,  0.0649, -0.1097, -0.1705,  0.5149,  0.2113,
          0.1409,  0.1353,  0.5830,  1.1278],
        [ 1.6045,  5.7611,  1.1654,  0.0625, -0.1110, -0.1706,  0.5154,  0.2151,
          0.1397,  0.1391,  0.5816,  1.1267],
        [ 1.6053,  5.7630,  1.1644,  0.0615, -0.1132, -0.1707,  0.4657,  0.2171,
          0.1392,  0.1412,  0.5804,  1.1261]], grad_fn=<SqueezeBackward0>)
torch.Size([1027, 12])
tensor([[1.8599, 3.0224, 0.8881,  ..., 0.2550, 0.2377, 0.1199],
        [1.8165, 3.0214, 0.9120,  ..., 0.2619, 0.2592, 0.1172],
        [1.7825, 3.0269, 0.9406,  ..., 0.2636, 0.2699, 0.1126],
        ...,
        [1.7176, 3.1683, 0.9223,  ..., 0.5883, 0.8884, 0.0958],
        [1.7250, 3.1690, 0.9157,  ..., 0.5912, 0.8766, 0.0949],
        [1.7263, 3.1700, 0.9149,  ..., 0.5926, 0.8754, 0.0946]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1317, 12])
tensor([[1.7168, 6.9710, 1.1990,  ..., 0.2154, 0.3252, 1.1353],
        [1.6645, 6.9738, 1.2359,  ..., 0.2071, 0.3397, 1.1358],
        [1.6300, 6.9754, 1.2690,  ..., 0.1932, 0.3516, 1.1361],
        ...,
        [1.5095, 6.9915, 0.9586,  ..., 0.5743, 1.6648, 1.1331],
        [1.5092, 6.9935, 0.9604,  ..., 0.5745, 1.6641, 1.1327],
        [1.5096, 6.9919, 0.9585,  ..., 0.5743, 1.6646, 1.1331]],
       grad_fn=<SqueezeBackward0>)
torch.Size([907, 12])
tensor([[1.8232, 4.9306, 0.8697,  ..., 0.2334, 0.2061, 0.1222],
        [1.7750, 4.9240, 0.8980,  ..., 0.2290, 0.2266, 0.1238],
        [1.7434, 4.9237, 0.9308,  ..., 0.2260, 0.2345, 0.1222],
        ...,
        [1.7445, 5.2888, 1.0862,  ..., 0.3746, 1.0242, 0.1238],
        [1.7393, 5.2332, 1.0550,  ..., 0.3824, 1.0648, 0.1236],
        [1.7395, 5.2329, 1.0543,  ..., 0.3823, 1.0648, 0.1237]],
       grad_fn=<SqueezeBackward0>)
torch.Size([987, 12])
tensor([[1.7314, 4.7376, 0.8272,  ..., 0.2645, 0.2576, 0.1218],
        [1.6858, 4.7331, 0.8551,  ..., 0.2624, 0.2766, 0.1225],
        [1.6528, 4.7310, 0.8868,  ..., 0.2562, 0.2862, 0.1218],
        ...,
        [1.5243, 4.8128, 1.0343,  ..., 0.4899, 0.9071, 0.1170],
        [1.4900, 4.7950, 0.9909,  ..., 0.4769, 0.8508, 0.1181],
        [1.4890, 4.7950, 0.9938,  ..., 0.4765, 0.8507, 0.1185]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1197, 12])
tensor([[ 1.6965,  5.2999,  1.0477,  ...,  0.0298,  0.5147,  1.1253],
        [ 1.6473,  5.2962,  1.0763,  ...,  0.0224,  0.5339,  1.1261],
        [ 1.6080,  5.2961,  1.1064,  ...,  0.0116,  0.5469,  1.1262],
        ...,
        [ 1.4927,  5.1560,  1.0402,  ..., -0.0392,  1.1130,  1.1215],
        [ 1.4929,  5.1595,  1.0427,  ..., -0.0348,  1.1114,  1.1200],
        [ 1.4930,  5.1587,  1.0416,  ..., -0.0359,  1.1116,  1.1205]],
       grad_fn=<SqueezeBackward0>)
torch.Size([787, 12])
tensor([[1.8431, 5.0299, 0.8769,  ..., 0.1355, 0.5928, 0.1228],
        [1.7991, 5.0224, 0.9037,  ..., 0.1267, 0.6127, 0.1239],
        [1.7653, 5.0231, 0.9305,  ..., 0.1187, 0.6222, 0.1235],
        ...,
        [1.7817, 5.4244, 1.0960,  ..., 0.2126, 1.2420, 0.1214],
        [1.7426, 5.2596, 1.0307,  ..., 0.2407, 1.0608, 0.1217],
        [1.7428, 5.2618, 1.0326,  ..., 0.2414, 1.0606, 0.1211]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1277, 12])
tensor([[1.7450, 5.7783, 1.0451,  ..., 0.3003, 0.4422, 1.1284],
        [1.6998, 5.7758, 1.0780,  ..., 0.2945, 0.4563, 1.1279],
        [1.6612, 5.7770, 1.1086,  ..., 0.2827, 0.4682, 1.1282],
        ...,
        [1.4637, 5.8835, 1.0720,  ..., 0.4602, 0.9528, 1.1242],
        [1.4641, 5.8817, 1.0699,  ..., 0.4598, 0.9532, 1.1247],
        [1.4639, 5.8836, 1.0715,  ..., 0.4603, 0.9526, 1.1242]],
       grad_fn=<SqueezeBackward0>)
torch.Size([557, 12])
tensor([[1.6542, 6.4772, 1.1975,  ..., 0.4067, 0.5831, 1.1330],
        [1.6045, 6.4754, 1.2336,  ..., 0.3971, 0.5976, 1.1337],
        [1.5702, 6.4810, 1.2664,  ..., 0.3876, 0.6063, 1.1330],
        ...,
        [1.4843, 6.1690, 1.3637,  ..., 0.3508, 0.5600, 1.1281],
        [1.4839, 6.1694, 1.3652,  ..., 0.3510, 0.5600, 1.1280],
        [1.4836, 6.1713, 1.3669,  ..., 0.3511, 0.5593, 1.1276]],
       grad_fn=<SqueezeBackward0>)
torch.Size([747, 12])
tensor([[1.8654, 4.7973, 0.6403,  ..., 0.4211, 1.1921, 0.1215],
        [1.8219, 4.7899, 0.6612,  ..., 0.4137, 1.2126, 0.1230],
        [1.7900, 4.7874, 0.6870,  ..., 0.4056, 1.2220, 0.1222],
        ...,
        [1.6635, 4.8305, 0.9805,  ..., 0.6837, 0.8453, 0.1165],
        [1.6651, 4.8878, 0.9893,  ..., 0.7159, 0.8614, 0.1163],
        [1.6652, 4.8877, 0.9884,  ..., 0.7154, 0.8613, 0.1165]],
       grad_fn=<SqueezeBackward0>)
torch.Size([371, 12])
tensor([[1.6979, 5.5855, 1.1430,  ..., 0.2615, 0.3093, 1.1276],
        [1.6486, 5.5846, 1.1736,  ..., 0.2557, 0.3264, 1.1277],
        [1.6132, 5.5905, 1.2045,  ..., 0.2502, 0.3352, 1.1259],
        ...,
        [1.4258, 5.1274, 1.5268,  ..., 0.2339, 0.5135, 1.1207],
        [1.4357, 5.1404, 1.4465,  ..., 0.2380, 0.4841, 1.1210],
        [1.4362, 5.1421, 1.4468,  ..., 0.2408, 0.4834, 1.1201]],
       grad_fn=<SqueezeBackward0>)
torch.Size([467, 12])
tensor([[1.6602, 5.1927, 1.0503,  ..., 0.3521, 0.6048, 1.1248],
        [1.6156, 5.1917, 1.0784,  ..., 0.3468, 0.6210, 1.1238],
        [1.5809, 5.1973, 1.1056,  ..., 0.3404, 0.6300, 1.1216],
        ...,
        [1.5162, 5.5125, 0.8960,  ..., 0.4734, 1.3195, 1.1188],
        [1.5167, 5.5167, 0.8979,  ..., 0.4773, 1.3181, 1.1170],
        [1.5171, 5.5129, 0.8941,  ..., 0.4732, 1.3201, 1.1182]],
       grad_fn=<SqueezeBackward0>)
torch.Size([772, 12])
tensor([[1.7880, 4.3609, 0.9054,  ..., 0.2862, 0.2237, 0.1189],
        [1.7433, 4.3553, 0.9304,  ..., 0.2847, 0.2441, 0.1197],
        [1.7107, 4.3542, 0.9602,  ..., 0.2815, 0.2534, 0.1183],
        ...,
        [1.5226, 3.8601, 0.9918,  ..., 0.5760, 0.9551, 0.1063],
        [1.5275, 3.8612, 0.9915,  ..., 0.5760, 0.9497, 0.1064],
        [1.5272, 3.8584, 0.9900,  ..., 0.5722, 0.9510, 0.1078]],
       grad_fn=<SqueezeBackward0>)
torch.Size([373, 12])
tensor([[1.8493, 4.1920, 0.6821,  ..., 0.4083, 0.8310, 0.1202],
        [1.8066, 4.1856, 0.7027,  ..., 0.4058, 0.8518, 0.1209],
        [1.7701, 4.1806, 0.7284,  ..., 0.3970, 0.8647, 0.1210],
        ...,
        [1.6345, 3.6756, 1.2411,  ..., 0.1191, 0.4720, 0.1110],
        [1.6352, 3.6763, 1.2358,  ..., 0.1216, 0.4887, 0.1106],
        [1.6352, 3.6725, 1.2312,  ..., 0.1018, 0.4922, 0.1113]],
       grad_fn=<SqueezeBackward0>)
torch.Size([75, 12])
tensor([[ 1.6425,  4.7037,  1.3345,  0.1106, -0.1046, -0.1731, -0.8499,  0.1437,
          1.1408,  0.3336,  0.2258,  0.1276],
        [ 1.6008,  4.6949,  1.3682,  0.1033, -0.1084, -0.1730, -1.7263,  0.1327,
          1.1430,  0.3220,  0.2393,  0.1285],
        [ 1.5729,  4.6871,  1.3868,  0.0987, -0.1110, -0.1729, -1.1871,  0.1246,
          1.1438,  0.3061,  0.2640,  0.1282],
        [ 1.5502,  4.6840,  1.4170,  0.0890, -0.1139, -0.1728, -0.6647,  0.1253,
          1.1425,  0.3050,  0.2621,  0.1266],
        [ 1.5358,  4.6970,  1.4328,  0.0840, -0.1162, -0.1726, -0.8544,  0.1269,
          1.1413,  0.2960,  0.2696,  0.1250],
        [ 1.5336,  4.6898,  1.4319,  0.0823, -0.1180, -0.1725, -1.1095,  0.1270,
          1.1404,  0.2890,  0.2676,  0.1236],
        [ 1.5292,  4.6971,  1.4351,  0.0812, -0.1182, -0.1723, -1.3482,  0.1220,
          1.1414,  0.2782,  0.2807,  0.1238],
        [ 1.5198,  4.6680,  1.4671,  0.0763, -0.1203, -0.1723, -1.1719,  0.1259,
          1.1399,  0.2774,  0.2662,  0.1219],
        [ 1.5195,  4.6669,  1.4640,  0.0779, -0.1222, -0.1723, -1.7573,  0.1292,
          1.1389,  0.2763,  0.2608,  0.1201],
        [ 1.5225,  4.6302,  1.4613,  0.0827, -0.1224, -0.1722, -1.6577,  0.1210,
          1.1415,  0.2700,  0.2579,  0.1214],
        [ 1.5200,  4.6353,  1.4627,  0.0861, -0.1224, -0.1720, -1.1136,  0.1148,
          1.1433,  0.2665,  0.2705,  0.1225],
        [ 1.5193,  4.6490,  1.4629,  0.0864, -0.1232, -0.1720, -1.8999,  0.1167,
          1.1428,  0.2664,  0.2779,  0.1216],
        [ 1.5275,  4.6193,  1.4517,  0.0925, -0.1231, -0.1720, -1.2205,  0.1124,
          1.1438,  0.2592,  0.2697,  0.1223],
        [ 1.5256,  4.6137,  1.4499,  0.0928, -0.1234, -0.1719, -1.5969,  0.1104,
          1.1441,  0.2596,  0.2807,  0.1224],
        [ 1.5197,  4.6045,  1.4690,  0.0903, -0.1244, -0.1720, -0.4911,  0.1171,
          1.1429,  0.2643,  0.2802,  0.1217],
        [ 1.5228,  4.6369,  1.4563,  0.0924, -0.1245, -0.1720, -1.2422,  0.1206,
          1.1422,  0.2640,  0.2820,  0.1214],
        [ 1.5261,  4.6341,  1.4557,  0.0889, -0.1255, -0.1720, -1.1923,  0.1260,
          1.1406,  0.2702,  0.2696,  0.1202],
        [ 1.5174,  4.5991,  1.4737,  0.0872, -0.1259, -0.1720, -1.5349,  0.1243,
          1.1409,  0.2695,  0.2703,  0.1202],
        [ 1.5142,  4.6165,  1.4859,  0.0881, -0.1268, -0.1720, -0.9707,  0.1296,
          1.1402,  0.2729,  0.2736,  0.1194],
        [ 1.5238,  4.6395,  1.4589,  0.0899, -0.1265, -0.1720, -1.2592,  0.1261,
          1.1412,  0.2643,  0.2751,  0.1202],
        [ 1.5253,  4.6251,  1.4651,  0.0899, -0.1261, -0.1719, -1.4960,  0.1216,
          1.1422,  0.2598,  0.2732,  0.1209],
        [ 1.5194,  4.6334,  1.4760,  0.0868, -0.1272, -0.1720, -1.7939,  0.1263,
          1.1408,  0.2708,  0.2781,  0.1193],
        [ 1.5239,  4.6546,  1.4564,  0.0905, -0.1267, -0.1719, -0.1953,  0.1246,
          1.1420,  0.2674,  0.2921,  0.1207],
        [ 1.5242,  4.6451,  1.4644,  0.0900, -0.1265, -0.1719, -1.0681,  0.1250,
          1.1418,  0.2643,  0.2758,  0.1208],
        [ 1.5207,  4.6454,  1.4757,  0.0886, -0.1260, -0.1719, -1.4167,  0.1244,
          1.1415,  0.2644,  0.2822,  0.1208],
        [ 1.5199,  4.6387,  1.4757,  0.0914, -0.1246, -0.1718, -0.9202,  0.1197,
          1.1430,  0.2645,  0.2866,  0.1223],
        [ 1.5221,  4.6548,  1.4611,  0.0882, -0.1241, -0.1718, -0.6243,  0.1201,
          1.1427,  0.2630,  0.2936,  0.1225],
        [ 1.5196,  4.6371,  1.4753,  0.0906, -0.1224, -0.1717, -0.8820,  0.1149,
          1.1436,  0.2600,  0.2817,  0.1237],
        [ 1.5159,  4.6411,  1.4822,  0.0857, -0.1228, -0.1718, -1.6968,  0.1199,
          1.1418,  0.2671,  0.2896,  0.1221],
        [ 1.5170,  4.6499,  1.4803,  0.0826, -0.1230, -0.1718, -1.0338,  0.1210,
          1.1416,  0.2675,  0.3042,  0.1219],
        [ 1.5167,  4.6451,  1.4837,  0.0845, -0.1218, -0.1718, -1.3569,  0.1141,
          1.1435,  0.2669,  0.2977,  0.1234],
        [ 1.5164,  4.6454,  1.4854,  0.0844, -0.1223, -0.1718, -1.9270,  0.1152,
          1.1429,  0.2735,  0.3008,  0.1224],
        [ 1.5143,  4.6259,  1.4941,  0.0876, -0.1226, -0.1719, -1.3368,  0.1141,
          1.1433,  0.2719,  0.2910,  0.1224],
        [ 1.5198,  4.6600,  1.4812,  0.0847, -0.1237, -0.1719, -0.6128,  0.1186,
          1.1424,  0.2781,  0.3056,  0.1218],
        [ 1.5214,  4.6536,  1.4799,  0.0856, -0.1238, -0.1719, -1.2293,  0.1194,
          1.1423,  0.2814,  0.3026,  0.1218],
        [ 1.5257,  4.6796,  1.4753,  0.0876, -0.1239, -0.1719, -1.5832,  0.1207,
          1.1420,  0.2811,  0.3109,  0.1215],
        [ 1.5245,  4.6762,  1.4725,  0.0898, -0.1230, -0.1718, -0.5781,  0.1162,
          1.1433,  0.2776,  0.3098,  0.1229],
        [ 1.5202,  4.6498,  1.4832,  0.0880, -0.1225, -0.1718, -0.9590,  0.1141,
          1.1434,  0.2752,  0.3052,  0.1233],
        [ 1.5238,  4.6675,  1.4763,  0.0921, -0.1209, -0.1717, -1.4595,  0.1100,
          1.1444,  0.2766,  0.3049,  0.1242],
        [ 1.5230,  4.6526,  1.4775,  0.0906, -0.1205, -0.1717, -1.5562,  0.1086,
          1.1442,  0.2768,  0.3124,  0.1240],
        [ 1.5202,  4.6652,  1.4792,  0.0886, -0.1199, -0.1717, -0.8759,  0.1062,
          1.1448,  0.2770,  0.3222,  0.1247],
        [ 1.5157,  4.6580,  1.4996,  0.0892, -0.1197, -0.1717, -0.8485,  0.1088,
          1.1443,  0.2817,  0.3015,  0.1246],
        [ 1.5250,  4.6578,  1.4853,  0.0897, -0.1200, -0.1718, -1.5746,  0.1106,
          1.1433,  0.2779,  0.3015,  0.1237],
        [ 1.5210,  4.6595,  1.4926,  0.0875, -0.1202, -0.1718, -0.7511,  0.1126,
          1.1431,  0.2807,  0.3047,  0.1236],
        [ 1.5187,  4.7014,  1.4955,  0.0842, -0.1207, -0.1719, -0.1120,  0.1190,
          1.1420,  0.2894,  0.3137,  0.1233],
        [ 1.5244,  4.6904,  1.4839,  0.0841, -0.1215, -0.1719, -1.8814,  0.1216,
          1.1407,  0.2772,  0.3014,  0.1219],
        [ 1.5272,  4.6957,  1.4756,  0.0858, -0.1211, -0.1719, -1.2648,  0.1170,
          1.1420,  0.2776,  0.3093,  0.1227],
        [ 1.5163,  4.6634,  1.5053,  0.0808, -0.1226, -0.1719, -1.4413,  0.1212,
          1.1410,  0.2847,  0.2967,  0.1213],
        [ 1.5166,  4.6768,  1.5061,  0.0838, -0.1230, -0.1719, -0.8276,  0.1222,
          1.1413,  0.2863,  0.3088,  0.1215],
        [ 1.5201,  4.6700,  1.4994,  0.0835, -0.1246, -0.1720, -1.6209,  0.1260,
          1.1401,  0.2903,  0.2980,  0.1199],
        [ 1.5143,  4.6461,  1.5073,  0.0852, -0.1240, -0.1719, -1.3178,  0.1195,
          1.1422,  0.2800,  0.3074,  0.1215],
        [ 1.5190,  4.6894,  1.5059,  0.0837, -0.1256, -0.1720, -1.3649,  0.1260,
          1.1407,  0.2878,  0.3320,  0.1198],
        [ 1.5258,  4.7055,  1.4851,  0.0905, -0.1248, -0.1719, -0.8398,  0.1216,
          1.1423,  0.2847,  0.3391,  0.1215],
        [ 1.5268,  4.7093,  1.4773,  0.0917, -0.1238, -0.1718, -1.2600,  0.1163,
          1.1435,  0.2883,  0.3474,  0.1227],
        [ 1.5214,  4.6872,  1.4864,  0.0925, -0.1226, -0.1717, -0.9995,  0.1118,
          1.1442,  0.2908,  0.3536,  0.1237],
        [ 1.5239,  4.7059,  1.4862,  0.0959, -0.1217, -0.1717, -0.5091,  0.1138,
          1.1440,  0.2939,  0.3609,  0.1241],
        [ 1.5226,  4.6948,  1.4896,  0.0926, -0.1209, -0.1717, -0.8593,  0.1145,
          1.1436,  0.2992,  0.3583,  0.1242],
        [ 1.5189,  4.6762,  1.5005,  0.0902, -0.1202, -0.1717, -0.9146,  0.1136,
          1.1433,  0.3015,  0.3510,  0.1244],
        [ 1.5141,  4.6605,  1.5162,  0.0906, -0.1201, -0.1717, -0.9946,  0.1167,
          1.1427,  0.3074,  0.3486,  0.1239],
        [ 1.5181,  4.6794,  1.5060,  0.0878, -0.1212, -0.1718, -1.1192,  0.1212,
          1.1412,  0.3134,  0.3538,  0.1226],
        [ 1.5207,  4.6894,  1.5066,  0.0855, -0.1221, -0.1719, -0.8012,  0.1241,
          1.1406,  0.3171,  0.3431,  0.1220],
        [ 1.5223,  4.6997,  1.5017,  0.0848, -0.1226, -0.1719, -2.2198,  0.1221,
          1.1408,  0.3214,  0.3493,  0.1214],
        [ 1.5269,  4.7077,  1.4940,  0.0897, -0.1235, -0.1719, -0.3916,  0.1242,
          1.1410,  0.3211,  0.3589,  0.1214],
        [ 1.5270,  4.7291,  1.4888,  0.0859, -0.1244, -0.1719, -0.8856,  0.1260,
          1.1405,  0.3263,  0.3637,  0.1209],
        [ 1.5250,  4.7094,  1.5030,  0.0877, -0.1242, -0.1719, -0.9133,  0.1254,
          1.1409,  0.3250,  0.3451,  0.1213],
        [ 1.5221,  4.6909,  1.5095,  0.0936, -0.1227, -0.1718, -0.7668,  0.1192,
          1.1428,  0.3217,  0.3479,  0.1232],
        [ 1.5210,  4.7011,  1.5142,  0.0891, -0.1232, -0.1718, -0.2916,  0.1244,
          1.1413,  0.3309,  0.3534,  0.1224],
        [ 1.5232,  4.6828,  1.5073,  0.0901, -0.1214, -0.1717, -1.2677,  0.1161,
          1.1429,  0.3243,  0.3447,  0.1239],
        [ 1.5210,  4.7116,  1.5098,  0.0911, -0.1204, -0.1716, -1.1147,  0.1145,
          1.1431,  0.3291,  0.3722,  0.1242],
        [ 1.5239,  4.7100,  1.4941,  0.0907, -0.1192, -0.1716, -1.3548,  0.1097,
          1.1439,  0.3194,  0.3808,  0.1248],
        [ 1.5228,  4.7155,  1.4937,  0.0856, -0.1198, -0.1717, -0.4094,  0.1137,
          1.1428,  0.3262,  0.3931,  0.1241],
        [ 1.5218,  4.6977,  1.5009,  0.0865, -0.1204, -0.1718, -1.1997,  0.1174,
          1.1420,  0.3246,  0.3783,  0.1234],
        [ 1.5242,  4.7196,  1.4938,  0.0904, -0.1196, -0.1717, -1.0884,  0.1144,
          1.1429,  0.3297,  0.3925,  0.1241],
        [ 1.5225,  4.7292,  1.4979,  0.0881, -0.1205, -0.1718, -0.7295,  0.1184,
          1.1420,  0.3290,  0.3908,  0.1234],
        [ 1.5192,  4.7487,  1.4989,  0.0852, -0.1206, -0.1718,  0.1532,  0.1227,
          1.1413,  0.3553,  0.4108,  0.1234]], grad_fn=<SqueezeBackward0>)
torch.Size([1317, 12])
tensor([[1.7095, 6.9059, 1.1983,  ..., 0.2553, 0.3947, 1.1317],
        [1.6572, 6.9057, 1.2338,  ..., 0.2442, 0.4114, 1.1331],
        [1.6240, 6.9087, 1.2668,  ..., 0.2324, 0.4220, 1.1329],
        ...,
        [1.4568, 5.9867, 1.1307,  ..., 0.4624, 0.9662, 1.1270],
        [1.4563, 5.9887, 1.1327,  ..., 0.4625, 0.9657, 1.1266],
        [1.4565, 5.9884, 1.1321,  ..., 0.4624, 0.9656, 1.1267]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1117, 12])
tensor([[1.6742, 4.8570, 0.9721,  ..., 0.2844, 0.5956, 1.1222],
        [1.6326, 4.8552, 0.9987,  ..., 0.2806, 0.6118, 1.1204],
        [1.5961, 4.8549, 1.0241,  ..., 0.2704, 0.6246, 1.1196],
        ...,
        [1.5339, 5.0732, 0.8623,  ..., 0.4357, 1.1990, 1.1010],
        [1.5341, 5.0738, 0.8623,  ..., 0.4361, 1.1988, 1.1007],
        [1.5338, 5.0698, 0.8599,  ..., 0.4324, 1.2005, 1.1024]],
       grad_fn=<SqueezeBackward0>)
torch.Size([819, 12])
tensor([[1.7981, 7.1100, 1.2384,  ..., 0.3804, 0.4671, 1.1342],
        [1.7443, 7.1073, 1.2752,  ..., 0.3681, 0.4843, 1.1360],
        [1.7111, 7.1127, 1.3098,  ..., 0.3589, 0.4930, 1.1353],
        ...,
        [1.3661, 6.1561, 1.2319,  ..., 0.7703, 0.3690, 1.1276],
        [1.3539, 6.3947, 1.3885,  ..., 0.8598, 0.3813, 1.1272],
        [1.3538, 6.3933, 1.3872,  ..., 0.8583, 0.3816, 1.1279]],
       grad_fn=<SqueezeBackward0>)
torch.Size([784, 12])
tensor([[1.8340, 4.1217, 0.7103,  ..., 0.3484, 0.7147, 0.1199],
        [1.7927, 4.1159, 0.7304,  ..., 0.3459, 0.7357, 0.1201],
        [1.7598, 4.1126, 0.7540,  ..., 0.3392, 0.7471, 0.1193],
        ...,
        [1.6315, 3.6989, 1.2644,  ..., 0.1095, 0.4910, 0.1109],
        [1.6326, 3.6963, 1.2913,  ..., 0.1091, 0.4544, 0.1111],
        [1.6318, 3.6980, 1.2887,  ..., 0.1131, 0.4634, 0.1098]],
       grad_fn=<SqueezeBackward0>)
torch.Size([727, 12])
tensor([[1.7490, 3.6517, 0.8201,  ..., 0.4830, 0.5894, 0.1215],
        [1.7098, 3.6441, 0.8369,  ..., 0.4805, 0.6144, 0.1212],
        [1.6810, 3.6431, 0.8569,  ..., 0.4786, 0.6252, 0.1181],
        ...,
        [1.3634, 3.5355, 1.1171,  ..., 0.6151, 0.5456, 0.1084],
        [1.3592, 3.4887, 1.0883,  ..., 0.6178, 0.5734, 0.1077],
        [1.3594, 3.4900, 1.0892,  ..., 0.6195, 0.5726, 0.1070]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1357, 12])
tensor([[1.7853, 4.9895, 1.0528,  ..., 0.2698, 0.3717, 1.1237],
        [1.7391, 4.9861, 1.0806,  ..., 0.2654, 0.3899, 1.1233],
        [1.7055, 4.9880, 1.1121,  ..., 0.2595, 0.3981, 1.1206],
        ...,
        [1.5096, 4.9258, 1.1505,  ..., 0.4181, 0.4717, 1.1144],
        [1.5097, 4.9289, 1.1529,  ..., 0.4221, 0.4704, 1.1128],
        [1.5103, 4.9306, 1.1528,  ..., 0.4241, 0.4694, 1.1122]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1052, 12])
tensor([[1.8189, 4.9000, 0.7084,  ..., 0.1647, 0.2795, 0.1213],
        [1.7744, 4.8986, 0.7378,  ..., 0.1663, 0.2952, 0.1212],
        [1.7419, 4.8979, 0.7707,  ..., 0.1618, 0.3033, 0.1200],
        ...,
        [1.5067, 4.1066, 0.9959,  ..., 0.4222, 0.8548, 0.0998],
        [1.4578, 3.8867, 0.9071,  ..., 0.4316, 0.6843, 0.1002],
        [1.4530, 3.8923, 0.9123,  ..., 0.4366, 0.6814, 0.1017]],
       grad_fn=<SqueezeBackward0>)
torch.Size([587, 12])
tensor([[1.8168, 4.4911, 0.7098,  ..., 0.4211, 1.1102, 0.1200],
        [1.7742, 4.4820, 0.7287,  ..., 0.4127, 1.1335, 0.1215],
        [1.7433, 4.4800, 0.7526,  ..., 0.4062, 1.1434, 0.1201],
        ...,
        [1.6198, 4.2184, 1.1335,  ..., 0.3281, 0.4721, 0.1141],
        [1.6078, 4.2237, 1.1470,  ..., 0.2958, 0.4452, 0.1144],
        [1.6086, 4.2241, 1.1460,  ..., 0.2966, 0.4454, 0.1139]],
       grad_fn=<SqueezeBackward0>)
torch.Size([4177, 12])
tensor([[1.7406, 7.4589, 1.1233,  ..., 0.2403, 0.6242, 1.1362],
        [1.6859, 7.4585, 1.1609,  ..., 0.2276, 0.6409, 1.1380],
        [1.6534, 7.4637, 1.1954,  ..., 0.2170, 0.6501, 1.1374],
        ...,
        [1.5339, 6.8180, 1.3589,  ..., 0.2060, 0.6154, 1.1311],
        [1.5336, 6.8206, 1.3605,  ..., 0.2061, 0.6145, 1.1306],
        [1.5340, 6.8192, 1.3586,  ..., 0.2058, 0.6148, 1.1310]],
       grad_fn=<SqueezeBackward0>)
torch.Size([180, 12])
tensor([[1.6603, 5.7917, 1.1575,  ..., 0.2471, 0.4170, 1.1302],
        [1.6098, 5.7897, 1.1911,  ..., 0.2390, 0.4339, 1.1307],
        [1.5732, 5.7933, 1.2236,  ..., 0.2291, 0.4441, 1.1301],
        ...,
        [1.4980, 5.9098, 1.1954,  ..., 0.3206, 0.4525, 1.1234],
        [1.4987, 5.8420, 1.1811,  ..., 0.3147, 0.4546, 1.1229],
        [1.4982, 5.8372, 1.1783,  ..., 0.3081, 0.4569, 1.1250]],
       grad_fn=<SqueezeBackward0>)
torch.Size([792, 12])
tensor([[1.7417, 4.2179, 0.8090,  ..., 0.2825, 0.1997, 0.1196],
        [1.6964, 4.2147, 0.8364,  ..., 0.2844, 0.2185, 0.1195],
        [1.6598, 4.2135, 0.8693,  ..., 0.2805, 0.2291, 0.1184],
        ...,
        [1.5427, 3.8390, 1.2042,  ..., 0.2443, 0.3974, 0.1142],
        [1.5427, 3.8300, 1.2175,  ..., 0.2368, 0.3885, 0.1149],
        [1.5429, 3.8290, 1.2176,  ..., 0.2366, 0.3895, 0.1147]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1277, 12])
tensor([[1.7156, 6.0405, 1.0643,  ..., 0.2503, 0.5576, 1.1302],
        [1.6645, 6.0397, 1.0958,  ..., 0.2417, 0.5747, 1.1310],
        [1.6278, 6.0419, 1.1268,  ..., 0.2305, 0.5862, 1.1309],
        ...,
        [1.4725, 6.0247, 1.2220,  ..., 0.1948, 0.7254, 1.1274],
        [1.4724, 6.0273, 1.2236,  ..., 0.1967, 0.7243, 1.1267],
        [1.4727, 6.0274, 1.2229,  ..., 0.1967, 0.7241, 1.1267]],
       grad_fn=<SqueezeBackward0>)
torch.Size([937, 12])
tensor([[1.7677, 6.4793, 1.2504,  ..., 0.2637, 0.3693, 1.1300],
        [1.7165, 6.4767, 1.2854,  ..., 0.2540, 0.3857, 1.1312],
        [1.6836, 6.4843, 1.3186,  ..., 0.2487, 0.3924, 1.1297],
        ...,
        [1.6241, 6.8884, 1.1419,  ..., 0.8038, 0.3424, 1.1251],
        [1.6235, 6.8860, 1.1428,  ..., 0.8021, 0.3437, 1.1257],
        [1.6232, 6.8848, 1.1435,  ..., 0.8017, 0.3442, 1.1259]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1277, 12])
tensor([[1.7382, 6.6184, 1.0721,  ..., 0.2119, 0.3052, 1.1315],
        [1.6884, 6.6187, 1.1086,  ..., 0.2048, 0.3189, 1.1318],
        [1.6547, 6.6251, 1.1416,  ..., 0.1971, 0.3269, 1.1307],
        ...,
        [1.5353, 6.2093, 1.3494,  ..., 0.2813, 0.4261, 1.1258],
        [1.5354, 6.2103, 1.3501,  ..., 0.2827, 0.4256, 1.1253],
        [1.5350, 6.2072, 1.3487,  ..., 0.2785, 0.4272, 1.1265]],
       grad_fn=<SqueezeBackward0>)
torch.Size([917, 12])
tensor([[1.7712, 5.3561, 0.8015,  ..., 0.2445, 0.4528, 0.1258],
        [1.7256, 5.3513, 0.8310,  ..., 0.2407, 0.4699, 0.1269],
        [1.6910, 5.3468, 0.8640,  ..., 0.2302, 0.4804, 0.1272],
        ...,
        [1.6753, 5.8076, 0.9048,  ..., 0.3454, 0.7111, 0.1258],
        [1.6871, 5.7769, 0.8808,  ..., 0.3451, 0.7332, 0.1256],
        [1.6873, 5.7756, 0.8797,  ..., 0.3449, 0.7335, 0.1259]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1257, 12])
tensor([[1.7301, 5.6231, 1.0309,  ..., 0.2387, 0.3731, 1.1276],
        [1.6783, 5.6187, 1.0624,  ..., 0.2293, 0.3932, 1.1288],
        [1.6413, 5.6228, 1.0948,  ..., 0.2214, 0.4032, 1.1277],
        ...,
        [1.4973, 5.4765, 1.3229,  ..., 0.3021, 0.4880, 1.1216],
        [1.4968, 5.4735, 1.3221,  ..., 0.2983, 0.4896, 1.1228],
        [1.4969, 5.4765, 1.3244,  ..., 0.3021, 0.4883, 1.1215]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1059, 12])
tensor([[1.7825, 5.2739, 0.7216,  ..., 0.4449, 0.9786, 1.1216],
        [1.7379, 5.2684, 0.7454,  ..., 0.4358, 0.9985, 1.1220],
        [1.7023, 5.2698, 0.7714,  ..., 0.4272, 1.0099, 1.1205],
        ...,
        [1.4454, 5.3235, 1.9013,  ..., 1.0009, 0.4711, 1.1204],
        [1.4465, 5.3265, 1.9016,  ..., 1.0064, 0.4700, 1.1186],
        [1.4471, 5.3286, 1.9012,  ..., 1.0085, 0.4690, 1.1178]],
       grad_fn=<SqueezeBackward0>)
torch.Size([75, 12])
tensor([[ 1.6741,  4.3489,  1.3851,  0.1242, -0.1048, -0.1719, -1.6489,  0.1535,
          1.1398,  0.2826,  0.2106,  0.1257],
        [ 1.6299,  4.3422,  1.4323,  0.1168, -0.1083, -0.1718, -1.0550,  0.1442,
          1.1422,  0.2758,  0.2394,  0.1269],
        [ 1.5994,  4.3150,  1.4418,  0.1095, -0.1130, -0.1717, -0.7061,  0.1420,
          1.1418,  0.2718,  0.2450,  0.1257],
        [ 1.5734,  4.2908,  1.4574,  0.1028, -0.1165, -0.1715, -1.5403,  0.1359,
          1.1423,  0.2659,  0.2619,  0.1245],
        [ 1.5728,  4.3758,  1.4642,  0.0986, -0.1191, -0.1714, -1.0504,  0.1363,
          1.1418,  0.2591,  0.2789,  0.1232],
        [ 1.5690,  4.3838,  1.4531,  0.0957, -0.1223, -0.1713, -1.1932,  0.1406,
          1.1401,  0.2534,  0.2807,  0.1208],
        [ 1.5636,  4.4029,  1.4608,  0.0981, -0.1222, -0.1711, -0.5308,  0.1343,
          1.1422,  0.2440,  0.2817,  0.1223],
        [ 1.5543,  4.3645,  1.4816,  0.0953, -0.1241, -0.1710, -1.2505,  0.1376,
          1.1406,  0.2432,  0.2720,  0.1205],
        [ 1.5558,  4.3912,  1.4788,  0.0997, -0.1231, -0.1708, -0.7272,  0.1310,
          1.1427,  0.2408,  0.2787,  0.1222],
        [ 1.5472,  4.3746,  1.4862,  0.0942, -0.1241, -0.1708, -0.5144,  0.1366,
          1.1411,  0.2400,  0.2769,  0.1211],
        [ 1.5503,  4.3891,  1.4637,  0.0891, -0.1256, -0.1708, -1.9636,  0.1392,
          1.1396,  0.2358,  0.2707,  0.1191],
        [ 1.5572,  4.4249,  1.4752,  0.0903, -0.1273, -0.1709, -1.6888,  0.1433,
          1.1389,  0.2355,  0.2775,  0.1176],
        [ 1.5523,  4.3819,  1.4374,  0.0914, -0.1281, -0.1708, -0.3636,  0.1409,
          1.1402,  0.2330,  0.2867,  0.1185],
        [ 1.5517,  4.4139,  1.4820,  0.0880, -0.1294, -0.1708, -0.7188,  0.1467,
          1.1392,  0.2389,  0.2793,  0.1175],
        [ 1.5481,  4.3817,  1.4883,  0.0947, -0.1288, -0.1707, -1.4049,  0.1409,
          1.1407,  0.2394,  0.2585,  0.1187],
        [ 1.5521,  4.3957,  1.4869,  0.0956, -0.1290, -0.1707, -0.8560,  0.1421,
          1.1405,  0.2363,  0.2536,  0.1185],
        [ 1.5491,  4.4087,  1.4905,  0.0926, -0.1280, -0.1706, -0.1194,  0.1409,
          1.1413,  0.2304,  0.2689,  0.1199],
        [ 1.5432,  4.3552,  1.4628,  0.0935, -0.1270, -0.1705, -1.5379,  0.1337,
          1.1422,  0.2210,  0.2646,  0.1206],
        [ 1.5569,  4.4561,  1.4752,  0.0967, -0.1263, -0.1705, -1.6112,  0.1327,
          1.1423,  0.2298,  0.2770,  0.1206],
        [ 1.5609,  4.4465,  1.4624,  0.0955, -0.1258, -0.1705, -0.9527,  0.1303,
          1.1429,  0.2313,  0.2873,  0.1211],
        [ 1.5456,  4.3712,  1.4346,  0.0884, -0.1269, -0.1706, -0.9179,  0.1333,
          1.1416,  0.2256,  0.2889,  0.1200],
        [ 1.5492,  4.3971,  1.4932,  0.0916, -0.1274, -0.1707, -1.9414,  0.1371,
          1.1411,  0.2313,  0.2649,  0.1191],
        [ 1.5608,  4.4364,  1.4741,  0.0938, -0.1279, -0.1707, -1.4343,  0.1351,
          1.1417,  0.2346,  0.2655,  0.1191],
        [ 1.5555,  4.4093,  1.4651,  0.0881, -0.1296, -0.1708, -0.4954,  0.1417,
          1.1402,  0.2329,  0.2684,  0.1178],
        [ 1.5561,  4.4234,  1.4734,  0.0936, -0.1287, -0.1706, -0.5846,  0.1388,
          1.1417,  0.2350,  0.2720,  0.1195],
        [ 1.5633,  4.4430,  1.4549,  0.0951, -0.1288, -0.1706, -1.5400,  0.1394,
          1.1409,  0.2354,  0.2856,  0.1188],
        [ 1.5706,  4.4789,  1.4374,  0.0945, -0.1288, -0.1706, -0.9486,  0.1397,
          1.1408,  0.2411,  0.2948,  0.1189],
        [ 1.5539,  4.4291,  1.4641,  0.0939, -0.1277, -0.1705, -0.2395,  0.1369,
          1.1419,  0.2284,  0.2840,  0.1205],
        [ 1.5626,  4.4715,  1.4705,  0.0932, -0.1274, -0.1705, -1.7956,  0.1377,
          1.1415,  0.2273,  0.2762,  0.1200],
        [ 1.5622,  4.4605,  1.4717,  0.0953, -0.1265, -0.1705, -1.8184,  0.1323,
          1.1427,  0.2323,  0.2741,  0.1206],
        [ 1.5586,  4.4374,  1.4603,  0.0892, -0.1278, -0.1706, -0.9191,  0.1362,
          1.1414,  0.2294,  0.2733,  0.1193],
        [ 1.5603,  4.4576,  1.4681,  0.0919, -0.1279, -0.1706, -1.0606,  0.1370,
          1.1416,  0.2359,  0.2867,  0.1194],
        [ 1.5646,  4.4496,  1.4550,  0.0956, -0.1272, -0.1705, -0.6724,  0.1328,
          1.1427,  0.2374,  0.2872,  0.1207],
        [ 1.5550,  4.4072,  1.4644,  0.0940, -0.1268, -0.1705, -1.0858,  0.1315,
          1.1429,  0.2329,  0.2724,  0.1210],
        [ 1.5511,  4.4425,  1.4969,  0.0906, -0.1270, -0.1706, -1.2574,  0.1366,
          1.1417,  0.2325,  0.2677,  0.1201],
        [ 1.5539,  4.4281,  1.4918,  0.0921, -0.1274, -0.1706, -0.3000,  0.1416,
          1.1405,  0.2319,  0.2568,  0.1195],
        [ 1.5535,  4.4259,  1.4814,  0.0906, -0.1258, -0.1705, -0.4601,  0.1351,
          1.1422,  0.2312,  0.2691,  0.1215],
        [ 1.5537,  4.4594,  1.4819,  0.0878, -0.1255, -0.1705, -0.7690,  0.1378,
          1.1412,  0.2304,  0.2761,  0.1211],
        [ 1.5586,  4.4713,  1.4712,  0.0901, -0.1253, -0.1706, -1.1998,  0.1387,
          1.1404,  0.2360,  0.2822,  0.1204],
        [ 1.5564,  4.4493,  1.4708,  0.0899, -0.1248, -0.1705, -0.2911,  0.1386,
          1.1407,  0.2384,  0.2924,  0.1210],
        [ 1.5479,  4.4085,  1.4582,  0.0841, -0.1251, -0.1706, -1.4591,  0.1370,
          1.1406,  0.2337,  0.2762,  0.1205],
        [ 1.5546,  4.4465,  1.4887,  0.0845, -0.1259, -0.1707, -1.7620,  0.1409,
          1.1398,  0.2324,  0.2726,  0.1192],
        [ 1.5594,  4.4593,  1.4779,  0.0913, -0.1252, -0.1706, -0.9656,  0.1330,
          1.1423,  0.2258,  0.2784,  0.1209],
        [ 1.5602,  4.4699,  1.4701,  0.0875, -0.1257, -0.1706, -0.2221,  0.1351,
          1.1418,  0.2274,  0.2911,  0.1208],
        [ 1.5584,  4.4655,  1.4753,  0.0881, -0.1244, -0.1705, -1.2777,  0.1304,
          1.1430,  0.2286,  0.2858,  0.1219],
        [ 1.5582,  4.4237,  1.4628,  0.0923, -0.1244, -0.1705, -1.4157,  0.1295,
          1.1425,  0.2290,  0.2825,  0.1214],
        [ 1.5565,  4.4289,  1.4723,  0.0888, -0.1252, -0.1706, -0.4900,  0.1351,
          1.1414,  0.2302,  0.2760,  0.1207],
        [ 1.5573,  4.4758,  1.4826,  0.0846, -0.1252, -0.1706, -1.1230,  0.1359,
          1.1414,  0.2349,  0.2825,  0.1207],
        [ 1.5629,  4.4874,  1.4759,  0.0855, -0.1261, -0.1707, -1.5820,  0.1398,
          1.1401,  0.2297,  0.2716,  0.1193],
        [ 1.5629,  4.4857,  1.4782,  0.0829, -0.1277, -0.1708, -2.0500,  0.1434,
          1.1390,  0.2385,  0.2761,  0.1174],
        [ 1.5633,  4.4831,  1.4675,  0.0822, -0.1293, -0.1708, -0.6529,  0.1453,
          1.1391,  0.2456,  0.2855,  0.1170],
        [ 1.5623,  4.4862,  1.4762,  0.0881, -0.1294, -0.1708, -0.8610,  0.1441,
          1.1404,  0.2394,  0.2774,  0.1181],
        [ 1.5685,  4.4636,  1.4569,  0.0947, -0.1283, -0.1706, -1.1599,  0.1358,
          1.1423,  0.2406,  0.2823,  0.1198],
        [ 1.5680,  4.5026,  1.4611,  0.0889, -0.1292, -0.1707, -0.7375,  0.1425,
          1.1403,  0.2429,  0.2855,  0.1185],
        [ 1.5618,  4.5089,  1.4697,  0.0891, -0.1275, -0.1705, -1.0242,  0.1380,
          1.1421,  0.2341,  0.2956,  0.1204],
        [ 1.5648,  4.4913,  1.4698,  0.0920, -0.1267, -0.1705, -1.3051,  0.1354,
          1.1423,  0.2301,  0.2805,  0.1207],
        [ 1.5639,  4.4863,  1.4652,  0.0894, -0.1267, -0.1705, -0.5118,  0.1369,
          1.1416,  0.2330,  0.2834,  0.1205],
        [ 1.5608,  4.4706,  1.4571,  0.0879, -0.1256, -0.1705, -1.4526,  0.1315,
          1.1426,  0.2318,  0.2907,  0.1214],
        [ 1.5624,  4.5120,  1.4659,  0.0868, -0.1258, -0.1706, -1.0773,  0.1361,
          1.1415,  0.2362,  0.3017,  0.1205],
        [ 1.5667,  4.5352,  1.4618,  0.0899, -0.1259, -0.1706, -0.1697,  0.1402,
          1.1408,  0.2417,  0.2922,  0.1204],
        [ 1.5585,  4.4685,  1.4488,  0.0892, -0.1246, -0.1705, -0.7769,  0.1320,
          1.1421,  0.2295,  0.2841,  0.1219],
        [ 1.5572,  4.5230,  1.4773,  0.0868, -0.1238, -0.1705, -0.9045,  0.1353,
          1.1420,  0.2300,  0.3000,  0.1220],
        [ 1.5558,  4.4865,  1.4825,  0.0837, -0.1237, -0.1705, -1.1301,  0.1369,
          1.1412,  0.2290,  0.2829,  0.1214],
        [ 1.5573,  4.4554,  1.4653,  0.0831, -0.1244, -0.1706, -1.3143,  0.1364,
          1.1406,  0.2303,  0.2667,  0.1205],
        [ 1.5541,  4.4543,  1.4680,  0.0831, -0.1239, -0.1705, -0.9952,  0.1327,
          1.1419,  0.2187,  0.2799,  0.1214],
        [ 1.5598,  4.5065,  1.4774,  0.0826, -0.1248, -0.1706, -0.4280,  0.1389,
          1.1407,  0.2292,  0.2926,  0.1206],
        [ 1.5654,  4.5440,  1.4673,  0.0827, -0.1243, -0.1706, -0.6544,  0.1388,
          1.1409,  0.2338,  0.2940,  0.1211],
        [ 1.5505,  4.4261,  1.4507,  0.0834, -0.1232, -0.1705, -1.0416,  0.1298,
          1.1423,  0.2175,  0.2808,  0.1223],
        [ 1.5630,  4.5404,  1.4843,  0.0798, -0.1245, -0.1706, -1.8061,  0.1404,
          1.1398,  0.2271,  0.2857,  0.1198],
        [ 1.5611,  4.5176,  1.4795,  0.0800, -0.1253, -0.1707, -0.4916,  0.1431,
          1.1396,  0.2339,  0.2902,  0.1195],
        [ 1.5587,  4.4845,  1.4711,  0.0798, -0.1257, -0.1707, -0.9180,  0.1421,
          1.1400,  0.2280,  0.2878,  0.1197],
        [ 1.5587,  4.4850,  1.4809,  0.0796, -0.1265, -0.1707, -1.4514,  0.1437,
          1.1395,  0.2281,  0.2831,  0.1188],
        [ 1.5627,  4.4745,  1.4721,  0.0819, -0.1272, -0.1707, -1.7710,  0.1427,
          1.1397,  0.2297,  0.2768,  0.1183],
        [ 1.5655,  4.4794,  1.4588,  0.0803, -0.1285, -0.1708, -0.8234,  0.1439,
          1.1395,  0.2293,  0.2828,  0.1177],
        [ 1.5599,  4.4549,  1.4536,  0.0846, -0.1277, -0.1706, -0.7066,  0.1378,
          1.1418,  0.2232,  0.2905,  0.1198]], grad_fn=<SqueezeBackward0>)
torch.Size([633, 12])
tensor([[1.7645, 4.9855, 0.7871,  ..., 0.2850, 0.1572, 0.1226],
        [1.7184, 4.9800, 0.8152,  ..., 0.2813, 0.1767, 0.1237],
        [1.6846, 4.9768, 0.8473,  ..., 0.2738, 0.1872, 0.1232],
        ...,
        [1.5466, 4.7946, 1.3358,  ..., 0.4803, 0.5010, 0.1178],
        [1.5461, 4.7938, 1.3359,  ..., 0.4245, 0.5012, 0.1185],
        [1.5462, 4.7940, 1.3362,  ..., 0.4030, 0.5013, 0.1182]],
       grad_fn=<SqueezeBackward0>)
torch.Size([265, 12])
tensor([[1.7961, 7.4016, 1.2402,  ..., 0.5077, 0.4541, 1.1353],
        [1.7428, 7.4011, 1.2761,  ..., 0.4957, 0.4706, 1.1370],
        [1.7103, 7.4060, 1.3095,  ..., 0.4857, 0.4799, 1.1364],
        ...,
        [1.5284, 7.0398, 1.6368,  ..., 0.9233, 0.6384, 1.1316],
        [1.5127, 6.9939, 1.7736,  ..., 0.9231, 0.4888, 1.1318],
        [1.5119, 6.9945, 1.7754,  ..., 0.9229, 0.4884, 1.1317]],
       grad_fn=<SqueezeBackward0>)
torch.Size([917, 12])
tensor([[1.7571, 5.3488, 0.8471,  ..., 0.2721, 0.4678, 0.1262],
        [1.7126, 5.3449, 0.8768,  ..., 0.2691, 0.4839, 0.1268],
        [1.6780, 5.3400, 0.9094,  ..., 0.2575, 0.4948, 0.1274],
        ...,
        [1.6720, 5.8695, 0.9914,  ..., 0.4358, 1.1678, 0.1273],
        [1.6617, 5.7788, 0.9782,  ..., 0.4358, 1.1236, 0.1267],
        [1.6618, 5.7802, 0.9781,  ..., 0.4357, 1.1229, 0.1266]],
       grad_fn=<SqueezeBackward0>)
torch.Size([997, 12])
tensor([[1.9040, 5.8025, 0.6607,  ..., 0.4557, 1.1621, 0.1275],
        [1.8584, 5.7961, 0.6878,  ..., 0.4480, 1.1791, 0.1294],
        [1.8242, 5.7904, 0.7191,  ..., 0.4344, 1.1895, 0.1303],
        ...,
        [1.6332, 6.3449, 1.0882,  ..., 0.2987, 0.5480, 0.1258],
        [1.6292, 6.3784, 1.0876,  ..., 0.2336, 0.4593, 0.1260],
        [1.6291, 6.3760, 1.0874,  ..., 0.2337, 0.4603, 0.1263]],
       grad_fn=<SqueezeBackward0>)
torch.Size([667, 12])
tensor([[1.4759, 5.9066, 0.6070,  ..., 0.4708, 0.4878, 0.1285],
        [1.4244, 5.8981, 0.6395,  ..., 0.4598, 0.5096, 0.1312],
        [1.3927, 5.8951, 0.6763,  ..., 0.4499, 0.5188, 0.1307],
        ...,
        [1.3363, 5.9831, 1.2940,  ..., 0.4384, 0.6261, 0.1281],
        [1.3382, 5.9970, 1.2825,  ..., 0.4380, 0.6268, 0.1279],
        [1.3379, 5.9988, 1.2839,  ..., 0.4381, 0.6261, 0.1275]],
       grad_fn=<SqueezeBackward0>)
torch.Size([567, 12])
tensor([[1.7523, 4.3378, 0.7069,  ..., 0.2211, 0.3376, 0.1208],
        [1.7088, 4.3349, 0.7331,  ..., 0.2232, 0.3554, 0.1206],
        [1.6734, 4.3331, 0.7642,  ..., 0.2188, 0.3655, 0.1195],
        ...,
        [1.6042, 3.4394, 0.9472,  ..., 0.3363, 0.8545, 0.1047],
        [1.5854, 3.3841, 0.8839,  ..., 0.7674, 0.7389, 0.1045],
        [1.5850, 3.3873, 0.8846,  ..., 0.7701, 0.7378, 0.1040]],
       grad_fn=<SqueezeBackward0>)
torch.Size([864, 12])
tensor([[1.6768, 6.7522, 0.9459,  ..., 0.5881, 1.1381, 1.1327],
        [1.6252, 6.7506, 0.9803,  ..., 0.5749, 1.1541, 1.1340],
        [1.5911, 6.7565, 1.0124,  ..., 0.5634, 1.1632, 1.1334],
        ...,
        [1.5473, 7.0575, 1.3106,  ..., 1.0795, 0.2617, 1.1275],
        [1.5023, 7.2800, 1.6540,  ..., 1.1938, 0.2314, 1.1281],
        [1.5022, 7.2800, 1.6546,  ..., 1.1937, 0.2315, 1.1281]],
       grad_fn=<SqueezeBackward0>)
torch.Size([917, 12])
tensor([[1.7650, 5.4666, 0.8581,  ..., 0.2492, 0.4926, 0.1279],
        [1.7153, 5.4602, 0.8893,  ..., 0.2422, 0.5120, 0.1298],
        [1.6804, 5.4563, 0.9247,  ..., 0.2314, 0.5225, 0.1301],
        ...,
        [1.6779, 6.2107, 0.8669,  ..., 0.4378, 1.9294, 0.1286],
        [1.6582, 6.3242, 0.9036,  ..., 0.4565, 2.0465, 0.1285],
        [1.6584, 6.3260, 0.9039,  ..., 0.4566, 2.0459, 0.1281]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1277, 12])
tensor([[1.7314, 6.1086, 1.0736,  ..., 0.2576, 0.5202, 1.1310],
        [1.6798, 6.1096, 1.1072,  ..., 0.2499, 0.5357, 1.1315],
        [1.6459, 6.1177, 1.1393,  ..., 0.2433, 0.5427, 1.1297],
        ...,
        [1.5126, 5.9693, 1.2283,  ..., 0.2232, 0.5277, 1.1267],
        [1.5128, 5.9720, 1.2294,  ..., 0.2259, 0.5263, 1.1258],
        [1.5133, 5.9733, 1.2287,  ..., 0.2276, 0.5255, 1.1254]],
       grad_fn=<SqueezeBackward0>)
torch.Size([854, 12])
tensor([[1.6630, 5.8663, 1.1255,  ..., 0.2558, 0.3623, 1.1287],
        [1.6101, 5.8614, 1.1580,  ..., 0.2451, 0.3827, 1.1304],
        [1.5733, 5.8643, 1.1915,  ..., 0.2358, 0.3934, 1.1299],
        ...,
        [1.4368, 5.4240, 1.4547,  ..., 0.2526, 0.7887, 1.1241],
        [1.4362, 5.4226, 1.4558,  ..., 0.2516, 0.7893, 1.1246],
        [1.4363, 5.4271, 1.4589,  ..., 0.2577, 0.7867, 1.1230]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1277, 12])
tensor([[1.7036, 5.5295, 1.2075,  ..., 0.2015, 0.2740, 1.1274],
        [1.6555, 5.5285, 1.2383,  ..., 0.1969, 0.2901, 1.1273],
        [1.6163, 5.5284, 1.2691,  ..., 0.1854, 0.3033, 1.1277],
        ...,
        [1.4132, 4.9360, 1.7388,  ..., 0.2449, 0.2138, 1.1199],
        [1.4127, 4.9343, 1.7393,  ..., 0.2428, 0.2149, 1.1205],
        [1.4123, 4.9340, 1.7402,  ..., 0.2426, 0.2152, 1.1206]],
       grad_fn=<SqueezeBackward0>)
torch.Size([792, 12])
tensor([[1.7410, 4.1942, 0.8078,  ..., 0.2829, 0.2076, 0.1191],
        [1.6984, 4.1931, 0.8348,  ..., 0.2872, 0.2244, 0.1181],
        [1.6617, 4.1907, 0.8665,  ..., 0.2818, 0.2356, 0.1175],
        ...,
        [1.6538, 4.1093, 1.0357,  ..., 0.5363, 1.2238, 0.1124],
        [1.6523, 4.0796, 1.0155,  ..., 0.5516, 1.2288, 0.1128],
        [1.6521, 4.0818, 1.0176,  ..., 0.5546, 1.2278, 0.1118]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1217, 12])
tensor([[1.6000, 6.6428, 1.0309,  ..., 0.5054, 1.0989, 1.1320],
        [1.5473, 6.6424, 1.0640,  ..., 0.4928, 1.1162, 1.1334],
        [1.5125, 6.6451, 1.0955,  ..., 0.4792, 1.1277, 1.1334],
        ...,
        [1.4379, 6.1411, 1.1163,  ..., 0.9553, 0.9976, 1.1270],
        [1.4385, 6.1385, 1.1135,  ..., 0.9550, 0.9984, 1.1276],
        [1.4381, 6.1409, 1.1159,  ..., 0.9552, 0.9978, 1.1270]],
       grad_fn=<SqueezeBackward0>)
torch.Size([1257, 12])
tensor([[1.6855, 7.2030, 1.2038,  ..., 0.3129, 0.3346, 1.1363],
        [1.6325, 7.2043, 1.2418,  ..., 0.3040, 0.3493, 1.1373],
        [1.6003, 7.2115, 1.2760,  ..., 0.2964, 0.3570, 1.1360],
        ...,
        [1.4237, 6.8238, 1.5698,  ..., 0.3359, 0.9193, 1.1310],
        [1.4238, 6.8243, 1.5698,  ..., 0.3359, 0.9191, 1.1309],
        [1.4239, 6.8237, 1.5690,  ..., 0.3358, 0.9192, 1.1310]],
       grad_fn=<SqueezeBackward0>)
torch.Size([286, 12])
tensor([[1.7458, 6.6616, 1.2538,  ..., 0.2558, 0.3620, 1.1336],
        [1.6935, 6.6627, 1.2893,  ..., 0.2471, 0.3775, 1.1344],
        [1.6595, 6.6672, 1.3223,  ..., 0.2370, 0.3871, 1.1338],
        ...,
        [1.6762, 6.1318, 0.7686,  ..., 0.3460, 1.4255, 1.1278],
        [1.6756, 6.1328, 0.7697,  ..., 0.3458, 1.4255, 1.1273],
        [1.6750, 6.1352, 0.7714,  ..., 0.3456, 1.4248, 1.1267]],
       grad_fn=<SqueezeBackward0>)
torch.Size([680, 12])
tensor([[1.7880, 5.8339, 1.0764,  ..., 0.2782, 0.4125, 1.1266],
        [1.7376, 5.8308, 1.1065,  ..., 0.2695, 0.4310, 1.1277],
        [1.7026, 5.8369, 1.1375,  ..., 0.2640, 0.4394, 1.1260],
        ...,
        [1.5496, 6.3645, 1.2909,  ..., 0.6433, 0.3410, 1.1224],
        [1.5284, 6.3882, 1.3399,  ..., 0.6877, 0.3566, 1.1231],
        [1.5290, 6.3897, 1.3404,  ..., 0.6912, 0.3564, 1.1219]],
       grad_fn=<SqueezeBackward0>)
torch.Size([87, 12])
tensor([[1.8466, 3.7374, 0.8627,  ..., 0.6655, 0.6750, 0.1213],
        [1.8067, 3.7304, 0.8797,  ..., 0.6639, 0.6984, 0.1211],
        [1.7756, 3.7277, 0.8998,  ..., 0.6599, 0.7103, 0.1192],
        ...,
        [1.6801, 3.6496, 1.0405,  ..., 0.6872, 0.6838, 0.1049],
        [1.6766, 3.6369, 1.0469,  ..., 0.6724, 0.6728, 0.1046],
        [1.6763, 3.6350, 1.0460,  ..., 0.6700, 0.6738, 0.1055]],
       grad_fn=<SqueezeBackward0>)
tensor([[1.],
        [1.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]])
tensor([[0.],
        [0.],
        [1.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [1.]])
tensor([[0.],
        [0.],
        [1.],
        [0.],
        [0.],
        [1.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]])
tensor([[0.],
        [1.],
        [1.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [1.],
        [1.]])
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [1.],
        [0.],
        [0.],
        [0.],
        [1.]])
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [1.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]])
tensor([[0.],
        [0.],
        [1.],
        [0.],
        [0.],
        [0.],
        [0.],
        [1.],
        [0.],
        [0.],
        [1.],
        [0.]])
tensor([[1.],
        [0.],
        [0.],
        [0.],
        [0.],
        [1.],
        [1.],
        [1.],
        [0.],
        [0.],
        [0.],
        [0.]])
tensor([[0.],
        [0.],
        [0.],
        [0.]])
/usr/local/Caskroom/miniconda/base/envs/plasma-aug/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 due to no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
Traceback (most recent call last):
  File "/Users/dhruvachayapathy/personal/research/mit-research/plasma-data-augmentation/src/main.py", line 90, in <module>
    best_model = train_post_hoc(train_dataloader=train_dataloader, val_dataloader=test_dataloader, model=model,optim=adam,loss_fn=loss_fn, save_metric=save_metric, num_epochs=post_hoc_num_epochs)
  File "/Users/dhruvachayapathy/personal/research/mit-research/plasma-data-augmentation/src/train.py", line 42, in train_post_hoc
    accuracy, f1, auc = compute_metrics(out,labels)
  File "/Users/dhruvachayapathy/personal/research/mit-research/plasma-data-augmentation/src/eval.py", line 10, in compute_metrics
    return accuracy_score(labels, binary_out), f1_score(labels, binary_out), roc_auc_score(labels, binary_out)
  File "/usr/local/Caskroom/miniconda/base/envs/plasma-aug/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/Caskroom/miniconda/base/envs/plasma-aug/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "/usr/local/Caskroom/miniconda/base/envs/plasma-aug/lib/python3.10/site-packages/sklearn/metrics/_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "/usr/local/Caskroom/miniconda/base/envs/plasma-aug/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.